{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\exams\\\\exams-list.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Admin from 'layouts/Admin.js';\nimport GridContainer from '../../../../components/Grid/GridContainer';\nimport { Add } from \"@material-ui/icons\";\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, Typography, makeStyles, TextField } from \"@material-ui/core\";\nimport GridItem from '../../../../components/Grid/GridItem';\nimport PlanService from '../../../../Services/PlanService';\nimport EduYearService from '../../../../Services/EduYearService';\nimport ExamService from '../../../../Services/ExamService';\nimport { useTranslation } from '../../../../Utility/Translations/useTranslation';\nimport styles from 'assets/jss/nextjs-material-dashboard/views/dashboardStyle.js';\nimport { KeyboardDatePicker, TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { arSA } from \"date-fns/locale\";\nimport { toast } from 'react-toastify';\nimport './exams-list-style.css';\nimport { Card } from '@material-ui/core';\n\nconst ExamsList = ({}) => {\n  _s();\n\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles(); // Programs\n\n  const {\n    0: programs,\n    1: setPrograms\n  } = useState([]);\n  const {\n    0: program,\n    1: setProgram\n  } = useState(null); // Courses\n\n  const {\n    0: courses,\n    1: setCourses\n  } = useState([]);\n  const {\n    0: course,\n    1: setCourse\n  } = useState(null); // Edu Year\n\n  const {\n    0: eduYears,\n    1: setEduYears\n  } = useState([]);\n  const {\n    0: eduYear,\n    1: setEduYear\n  } = useState(null); // Exam Type\n\n  const {\n    0: examsTypes,\n    1: setExamsType\n  } = useState([]);\n  const {\n    0: examType,\n    1: setExamType\n  } = useState(null);\n  useEffect(() => {\n    PlanService.GetAll().then(programs => {\n      EduYearService.GetYears('').then(eduYears => {\n        setPrograms(programs.result);\n        setEduYears(eduYears.result);\n      }).catch(err => {\n        console.error(\"Error\", err);\n      });\n    }).catch(err => {\n      console.error(\"Error\", err);\n    });\n  }, []);\n\n  const changeProgram = val => {\n    setProgram(val);\n  };\n\n  const changeEduYear = val => {\n    setEduYear(val);\n    setLoadCourses(true);\n    ExamService.GetAllCourses(program, val.toString()).then(resp => {\n      console.log(resp.result);\n      setCourses(resp.result);\n    }).catch(error => {});\n    setLoadCourses(false);\n  };\n\n  const changeCourse = val => {\n    setS;\n    setPlans([]);\n    setCourse(val);\n    setLoadExamsType(true);\n\n    let _course = courses.find(e => e.id === val);\n\n    setExamsType(_course.evaluation_methods);\n    setLoadExamsType(false);\n  };\n\n  const {\n    0: loadCourses,\n    1: setLoadCourses\n  } = useState(false);\n  const {\n    0: loadExamsType,\n    1: setLoadExamsType\n  } = useState(false);\n  const {\n    0: plans,\n    1: setPlans\n  } = useState([]);\n\n  const changeExamType = val => {\n    setPlans([]);\n\n    let _course = courses.find(e => e.id == course);\n\n    setExamType(val);\n    ExamService.GetAllPlans(program, eduYear, _course.edu_course_id, val.toString()).then(resp => setPlans(resp.result)).catch(error => {});\n  }; // Halls\n  // const [halls, setHalls] = useState([]);\n  // handle add coursse to program\n\n\n  const handleAddExam = () => {// const payLoad = {\n    //   program_id: program,\n    //   year_id: specYear,\n    //   edu_year_id: year,\n    //   course_id: course,\n    //   semester: semester,\n    // };\n    // PlanService.AddCourse(payLoad)\n    //   .then((result) => {\n    //     if (result.success) {\n    //       toast.success(translate(\"Course Added To Plan Successfully\"));\n    //       PlanService.GetProgramCourses(program, specYear, year)\n    //         .then((resp) => {\n    //           if (resp.success) {\n    //             setProgramCourses(resp.result);\n    //           }\n    //         })\n    //         .catch((err) => {});\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     toast.error(error.message);\n    //   });\n  };\n\n  const {\n    0: selectedPlans,\n    1: setSelectedPlans\n  } = useState([]);\n  const {\n    0: selectedNewStds,\n    1: setSelectedNewStds\n  } = useState(0);\n  const {\n    0: selectedOldStds,\n    1: setSelectedOldStds\n  } = useState(0);\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState(new Date());\n  const {\n    0: startTime,\n    1: setStartTime\n  } = useState(new Date());\n  const {\n    0: endTime,\n    1: setEndTime\n  } = useState(new Date());\n  const _halls = [{\n    id: 1,\n    name: \"ق1\",\n    selected: false\n  }, {\n    id: 2,\n    name: \"ق2\",\n    selected: false\n  }];\n  const {\n    0: halls,\n    1: setHalls\n  } = useState(_halls);\n\n  const handleDateChange = e => {\n    setSelectedDate(e);\n  };\n\n  const handleStartTime = e => {\n    setStartTime(e);\n  };\n\n  const handleEndTime = e => {\n    setEndTime(e);\n    const startHour = startTime.getHours();\n    const startMinute = startTime.getMinutes();\n    const endHour = e.getHours();\n    const endMinute = e.getMinutes();\n    if (e < startTime) toast.error('وقت الانتهاء يجب أن يكون بعد وقت البدء');\n  };\n\n  const selectPlan = id => {\n    let valAsNum = parseInt(id);\n\n    let _arr = selectedPlans.slice();\n\n    if (_arr.includes(valAsNum)) {\n      let index = _arr.findIndex(e => e == valAsNum);\n\n      _arr.splice(index, 1);\n\n      setSelectedPlans(_arr);\n      let sel = _arr.length > 0 ? plans.map(e => {\n        if (_arr.includes(parseInt(e.id))) return e;\n      }) : [];\n\n      if (sel.length > 0) {\n        const sumOld = sel.reduce((partialSum, a) => partialSum + a.old_students_num, 0);\n        const sumNew = sel.reduce((partialSum, a) => partialSum + a.new_students_num, 0);\n        setSelectedNewStds(sumNew);\n        setSelectedOldStds(sumOld);\n      } else {\n        setSelectedNewStds(0);\n        setSelectedOldStds(0);\n      }\n    } else {\n      _arr.push(valAsNum);\n\n      setSelectedPlans(_arr);\n      let sel = _arr.length > 0 ? plans.map(e => {\n        if (_arr.includes(parseInt(e.id))) return e;\n      }) : [];\n      const sumOld = sel.reduce((partialSum, a) => partialSum + a.old_students_num, 0);\n      const sumNew = sel.reduce((partialSum, a) => partialSum + a.new_students_num, 0);\n      setSelectedNewStds(sumNew);\n      setSelectedOldStds(sumOld);\n    }\n  }; // Dynamic Halls\n\n\n  const {\n    0: inputFields,\n    1: setInputFields\n  } = useState([{\n    hall: 0,\n    num_studs: 0\n  }]);\n\n  const addInputField = () => {\n    if (inputFields.length >= halls.length) toast.error(\"لايمكنك الإضافة! لايوجد سوى قاعتين\");else setInputFields([...inputFields, {\n      hall: 0,\n      num_studs: 0\n    }]);\n  };\n\n  const removeInputFields = index => {\n    const rows = [...inputFields];\n    rows.splice(index, 1);\n    setInputFields(rows);\n  };\n\n  const handleChange = (index, evnt) => {\n    const {\n      name,\n      value\n    } = evnt.target;\n    const list = [...inputFields];\n    list[index][name] = value;\n    setInputFields(list);\n    console.log(list);\n  }; // ------------------------\n\n\n  const renderPlans = plans => {\n    if (plans.length > 0) {\n      return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        locale: arSA,\n        utils: DateFnsUtils,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            margin: \"5px 0px\",\n            width: \"100%\",\n            paddingRight: \"1em\",\n            paddingBottom: \"1em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              height: \"7em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \"\\u0627\\u0644\\u0633\\u0646\\u0629\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \"\\u0627\\u0644\\u0627\\u062E\\u062A\\u0635\\u0627\\u0635\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \"\\u0627\\u0644\\u0641\\u0635\\u0644\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginBottom: \"0\"\n                },\n                children: \"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0637\\u0644\\u0627\\u0628 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginTop: \"0\"\n                },\n                children: \"\\u0645\\u0633\\u062A\\u062C\\u062F | \\u0645\\u0639\\u064A\\u062F \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              margin: \"2em 0em\"\n            },\n            children: plans.map(e => {\n              var _e$year, _e$year2, _e$year2$speciality;\n\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: (_e$year = e.year) === null || _e$year === void 0 ? void 0 : _e$year.ar_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: (_e$year2 = e.year) === null || _e$year2 === void 0 ? void 0 : (_e$year2$speciality = _e$year2.speciality) === null || _e$year2$speciality === void 0 ? void 0 : _e$year2$speciality.ar_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: e.semester\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 1,\n                  children: [e.new_students_num, \" | \", e.old_students_num]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedPlans.includes(e.id),\n                    value: e.id,\n                    onChange: p => selectPlan(p.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              md: 1,\n              children: \"\\u0627\\u0644\\u062A\\u0627\\u0631\\u064A\\u062E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                clearable: true,\n                value: selectedDate,\n                onChange: date => handleDateChange(date),\n                minDate: new Date(),\n                format: \"MM/dd/yyyy\" // inputVariant=\"outlined\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              marginTop: '3em'\n            },\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              style: {\n                display: \"flex\",\n                marginTop: \"1em\"\n              },\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" \\u0627\\u0644\\u0648\\u0642\\u062A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                clearable: true,\n                label: \"\\u0645\\u0646\",\n                value: startTime,\n                onChange: handleStartTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                showTodayButton: true,\n                todayLabel: \"now\",\n                label: \"\\u0625\\u0644\\u0649\",\n                value: endTime,\n                minutesStep: 5,\n                onChange: handleEndTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              md: 4,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 5,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0627\\u0644\\u0645\\u062C\\u0645\\u0648\\u0639 \\u0627\\u0644\\u0643\\u0644\\u064A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0645\\u0633\\u062A\\u062C\\u062F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0645\\u0639\\u064A\\u062F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: `${selectedNewStds + selectedOldStds}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: selectedNewStds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: selectedOldStds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          md: 12,\n          style: {\n            marginTop: '1em'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              margin: \"5px 0px\",\n              width: \"100%\",\n              paddingRight: \"1em\",\n              paddingBottom: \"1em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  margin: \"10px 5px\"\n                },\n                variant: \"contained\",\n                className: classes.submitBtn,\n                onClick: addInputField,\n                children: \"\\u0625\\u0636\\u0627\\u0641\\u0629 \\u0642\\u0627\\u0639\\u0629\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 25\n            }, this), inputFields.map((data, index) => {\n              console.log(data);\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                style: {\n                  marginTop: '1em'\n                },\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    fullWidth: true,\n                    labelId: \"demo-simple-select-label\",\n                    id: \"demo-simple-select\",\n                    value: data.hall,\n                    label: \"halls\",\n                    name: \"hall\",\n                    onChange: evnt => handleChange(index, evnt),\n                    children: halls.map(hall => !hall.selected && /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: hall.id,\n                      children: hall.name\n                    }, hall.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 71\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 5,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    onChange: evnt => handleChange(index, evnt),\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    name: \"num_studs\",\n                    value: data.num_studs,\n                    label: translate(\"عدد الطلّاب\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 3,\n                  children: inputFields.length !== 1 ? /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    style: {\n                      width: \"10%\",\n                      color: \"white\",\n                      background: \"red\"\n                    },\n                    variant: \"outlined\",\n                    className: classes.closeBtn,\n                    onClick: removeInputFields,\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 49\n                  }, this) : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        md: 12,\n        style: {\n          margin: \"2em 0em\",\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            textAlign: 'center'\n          },\n          variant: \"h5\",\n          component: \"div\",\n          children: `لاتوجد بيانات لعرضها`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    md: 12,\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        style: {\n          margin: \"-1em 0 1em 0\"\n        },\n        md: 12,\n        className: classes.typography,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: `إضافة واقعة امتحانية`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      md: 12,\n      style: {\n        margin: \"2em 0em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"\\u0627\\u0644\\u0628\\u0631\\u0646\\u0627\\u0645\\u062C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: program,\n            label: \"programs\",\n            onChange: e => changeProgram(e.target.value),\n            children: programs === null || programs === void 0 ? void 0 : programs.map(program => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: program.id,\n              children: program.name\n            }, program.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"\\u0627\\u0644\\u0633\\u0646\\u0629\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: eduYear,\n            label: \"specYears\",\n            onChange: e => changeEduYear(e.target.value),\n            children: eduYears.map(spYear => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: spYear.id,\n              children: spYear.year\n            }, spYear.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"\\u0627\\u0644\\u0645\\u0642\\u0631\\u0651\\u0631\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disabled: loadCourses,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: course,\n            label: \"courses\",\n            onChange: e => changeCourse(e.target.value),\n            children: courses.map(course => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: course.id,\n              children: course.ar_name\n            }, course.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0648\\u0627\\u0642\\u0639\\u0629\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disabled: loadExamsType,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: examType,\n            label: \"examTypes\",\n            onChange: e => changeExamType(e.target.value),\n            children: examsTypes.map(exam => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: exam.id,\n              children: exam.name\n            }, exam.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"10px 5px\"\n          },\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleAddExam,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"0px 0px 0px 10px\"\n            },\n            children: translate(\"Add\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }, this), renderPlans(plans)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExamsList, \"DC1frE13xVkapdTF2QWrP8rVREo=\", true, function () {\n  return [useTranslation];\n});\n\n_c = ExamsList;\nExamsList.auth = true;\nExamsList.layout = Admin;\nexport default ExamsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExamsList\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/exams/exams-list.tsx"],"names":["React","useEffect","useState","Admin","GridContainer","Add","Button","FormControl","Grid","InputLabel","MenuItem","Select","Typography","makeStyles","TextField","GridItem","PlanService","EduYearService","ExamService","useTranslation","styles","KeyboardDatePicker","TimePicker","MuiPickersUtilsProvider","DateFnsUtils","arSA","toast","Card","ExamsList","translate","useStyles","classes","programs","setPrograms","program","setProgram","courses","setCourses","course","setCourse","eduYears","setEduYears","eduYear","setEduYear","examsTypes","setExamsType","examType","setExamType","GetAll","then","GetYears","result","catch","err","console","error","changeProgram","val","changeEduYear","setLoadCourses","GetAllCourses","toString","resp","log","changeCourse","setS","setPlans","setLoadExamsType","_course","find","e","id","evaluation_methods","loadCourses","loadExamsType","plans","changeExamType","GetAllPlans","edu_course_id","handleAddExam","selectedPlans","setSelectedPlans","selectedNewStds","setSelectedNewStds","selectedOldStds","setSelectedOldStds","selectedDate","setSelectedDate","Date","startTime","setStartTime","endTime","setEndTime","_halls","name","selected","halls","setHalls","handleDateChange","handleStartTime","handleEndTime","startHour","getHours","startMinute","getMinutes","endHour","endMinute","selectPlan","valAsNum","parseInt","_arr","slice","includes","index","findIndex","splice","sel","length","map","sumOld","reduce","partialSum","a","old_students_num","sumNew","new_students_num","push","inputFields","setInputFields","hall","num_studs","addInputField","removeInputFields","rows","handleChange","evnt","value","target","list","renderPlans","margin","width","paddingRight","paddingBottom","height","fontWeight","marginBottom","marginTop","year","ar_name","speciality","semester","p","date","display","submitBtn","data","color","background","closeBtn","justifyContent","textAlign","typography","spYear","exam","padding","auth","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Admin from 'layouts/Admin.js';\r\nimport GridContainer from '../../../../components/Grid/GridContainer';\r\nimport { Add, ArrowBack, Backspace, ZoomIn } from \"@material-ui/icons\";\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Typography,\r\n    makeStyles,\r\n    Input,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport GridItem from '../../../../components/Grid/GridItem';\r\nimport PlanService from '../../../../Services/PlanService';\r\nimport CourseService from '../../../../Services/CourseService';\r\nimport EduYearService from '../../../../Services/EduYearService';\r\nimport ExamService from '../../../../Services/ExamService';\r\nimport { useTranslation } from '../../../../Utility/Translations/useTranslation';\r\nimport styles from 'assets/jss/nextjs-material-dashboard/views/dashboardStyle.js';\r\nimport { type } from '../../../../components/Privilege/Privilege';\r\nimport { KeyboardDatePicker, TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { arSA } from \"date-fns/locale\";\r\nimport { toast } from 'react-toastify';\r\nimport './exams-list-style.css';\r\nimport { Card } from '@material-ui/core';\r\n\r\ninterface IExamsListProps { }\r\nconst ExamsList: React.FC<IExamsListProps> = ({ }) => {\r\n    const { translate } = useTranslation();\r\n    const useStyles = makeStyles(styles);\r\n    const classes = useStyles();\r\n\r\n\r\n    // Programs\r\n    const [programs, setPrograms] = useState([]);\r\n    const [program, setProgram] = useState(null);\r\n\r\n    // Courses\r\n    const [courses, setCourses] = useState([]);\r\n    const [course, setCourse] = useState(null);\r\n\r\n    // Edu Year\r\n    const [eduYears, setEduYears] = useState([]);\r\n    const [eduYear, setEduYear] = useState(null);\r\n\r\n    // Exam Type\r\n    const [examsTypes, setExamsType] = useState([]);\r\n    const [examType, setExamType] = useState(null);\r\n\r\n    useEffect(() => {\r\n        PlanService.GetAll()\r\n            .then((programs) => {\r\n                EduYearService.GetYears('')\r\n                    .then((eduYears) => {\r\n                        setPrograms(programs.result);\r\n                        setEduYears(eduYears.result);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.error(\"Error\", err);\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error\", err);\r\n            });\r\n    }, []);\r\n\r\n    const changeProgram = (val: number) => {\r\n        setProgram(val);\r\n    };\r\n\r\n    const changeEduYear = (val: number) => {\r\n        setEduYear(val);\r\n        setLoadCourses(true);\r\n        ExamService.GetAllCourses(program, val.toString()).then(resp => {\r\n            console.log(resp.result)\r\n            setCourses(resp.result);\r\n        }).catch(error => {\r\n\r\n        })\r\n        setLoadCourses(false)\r\n    };\r\n\r\n    const changeCourse = (val: number) => {\r\n        setS\r\n        setPlans([]);\r\n        setCourse(val);\r\n        setLoadExamsType(true);\r\n        let _course = courses.find(e => e.id === val);\r\n        setExamsType(_course.evaluation_methods);\r\n        setLoadExamsType(false);\r\n    }\r\n\r\n    const [loadCourses, setLoadCourses] = useState(false);\r\n    const [loadExamsType, setLoadExamsType] = useState(false);\r\n\r\n    const [plans, setPlans] = useState([]);\r\n    const changeExamType = (val: number) => {\r\n        setPlans([]);\r\n        let _course = courses.find(e => e.id == course);\r\n        setExamType(val);\r\n        ExamService.GetAllPlans(program, eduYear, _course.edu_course_id, val.toString())\r\n            .then(resp => setPlans(resp.result))\r\n            .catch(error => { })\r\n    }\r\n\r\n    // Halls\r\n    // const [halls, setHalls] = useState([]);\r\n    // handle add coursse to program\r\n    const handleAddExam = () => {\r\n        // const payLoad = {\r\n        //   program_id: program,\r\n        //   year_id: specYear,\r\n        //   edu_year_id: year,\r\n        //   course_id: course,\r\n        //   semester: semester,\r\n        // };\r\n        // PlanService.AddCourse(payLoad)\r\n        //   .then((result) => {\r\n        //     if (result.success) {\r\n        //       toast.success(translate(\"Course Added To Plan Successfully\"));\r\n        //       PlanService.GetProgramCourses(program, specYear, year)\r\n        //         .then((resp) => {\r\n        //           if (resp.success) {\r\n        //             setProgramCourses(resp.result);\r\n        //           }\r\n        //         })\r\n        //         .catch((err) => {});\r\n        //     }\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     toast.error(error.message);\r\n        //   });\r\n    };\r\n\r\n    const [selectedPlans, setSelectedPlans] = useState<number[]>([]);\r\n    const [selectedNewStds, setSelectedNewStds] = useState(0);\r\n    const [selectedOldStds, setSelectedOldStds] = useState(0);\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [startTime, setStartTime] = useState(new Date());\r\n    const [endTime, setEndTime] = useState(new Date());\r\n    const _halls =\r\n        [\r\n            {\r\n                id: 1,\r\n                name: \"ق1\",\r\n                selected: false,\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"ق2\",\r\n                selected: false,\r\n            }\r\n        ]\r\n    const [halls, setHalls] = useState(_halls);\r\n    const handleDateChange = (e) => {\r\n        setSelectedDate(e);\r\n    }\r\n    const handleStartTime = (e) => {\r\n        setStartTime(e);\r\n    }\r\n    const handleEndTime = (e) => {\r\n        setEndTime(e);\r\n        const startHour = startTime.getHours();\r\n        const startMinute = startTime.getMinutes();\r\n        const endHour = e.getHours();\r\n        const endMinute = e.getMinutes();\r\n        if (e < startTime)\r\n            toast.error('وقت الانتهاء يجب أن يكون بعد وقت البدء');\r\n    }\r\n    const selectPlan = (id) => {\r\n        let valAsNum = parseInt(id);\r\n        let _arr = selectedPlans.slice();\r\n        if (_arr.includes(valAsNum)) {\r\n            let index = _arr.findIndex(e => e == valAsNum);\r\n            _arr.splice(index, 1);\r\n            setSelectedPlans(_arr);\r\n\r\n            let sel = _arr.length > 0 ? plans.map(e => {\r\n                if (_arr.includes(parseInt(e.id)))\r\n                    return e\r\n            }) : [];\r\n            if (sel.length > 0) {\r\n                const sumOld = sel.reduce((partialSum, a) => partialSum + a.old_students_num, 0);\r\n                const sumNew = sel.reduce((partialSum, a) => partialSum + a.new_students_num, 0);\r\n                setSelectedNewStds(sumNew);\r\n                setSelectedOldStds(sumOld);\r\n            }\r\n            else {\r\n                setSelectedNewStds(0);\r\n                setSelectedOldStds(0);\r\n            }\r\n\r\n        }\r\n        else {\r\n            _arr.push(valAsNum);\r\n            setSelectedPlans(_arr);\r\n            let sel = _arr.length > 0 ? plans.map(e => {\r\n                if (_arr.includes(parseInt(e.id)))\r\n                    return e\r\n            }) : [];\r\n            const sumOld = sel.reduce((partialSum, a) => partialSum + a.old_students_num, 0);\r\n            const sumNew = sel.reduce((partialSum, a) => partialSum + a.new_students_num, 0);\r\n            setSelectedNewStds(sumNew);\r\n            setSelectedOldStds(sumOld);\r\n        }\r\n    }\r\n\r\n    // Dynamic Halls\r\n    const [inputFields, setInputFields] = useState([{\r\n        hall: 0,\r\n        num_studs: 0\r\n    }]);\r\n    const addInputField = () => {\r\n        if (inputFields.length >= halls.length)\r\n            toast.error(\"لايمكنك الإضافة! لايوجد سوى قاعتين\");\r\n        else\r\n            setInputFields([...inputFields, {\r\n                hall: 0,\r\n                num_studs: 0\r\n            }])\r\n    }\r\n    const removeInputFields = (index) => {\r\n        const rows = [...inputFields];\r\n        rows.splice(index, 1);\r\n        setInputFields(rows);\r\n    }\r\n    const handleChange = (index, evnt) => {\r\n        const { name, value } = evnt.target;\r\n        const list = [...inputFields];\r\n        list[index][name] = value;\r\n        setInputFields(list);\r\n        console.log(list);\r\n    }\r\n    // ------------------------\r\n    const renderPlans = (plans) => {\r\n        if (plans.length > 0) {\r\n            return <MuiPickersUtilsProvider locale={arSA} utils={DateFnsUtils}>\r\n                <Card style={{ margin: \"5px 0px\", width: \"100%\", paddingRight: \"1em\", paddingBottom: \"1em\" }}>\r\n                    <Grid container md={12} style={{ height: \"7em\" }}>\r\n                        <GridItem md={2}>\r\n                            <h5 style={{ fontWeight: 'bold' }}>السنة</h5>\r\n                        </GridItem>\r\n                        <GridItem md={2}>\r\n                            <h5 style={{ fontWeight: 'bold' }}>الاختصاص</h5>\r\n                        </GridItem>\r\n                        <GridItem md={2}>\r\n                            <h5 style={{ fontWeight: 'bold' }}>الفصل</h5>\r\n                        </GridItem>\r\n                        <GridItem md={2}>\r\n                            <h5 style={{ fontWeight: 'bold', marginBottom: \"0\" }}>عدد الطلاب </h5>\r\n                            <h5 style={{ fontWeight: 'bold', marginTop: \"0\" }}>مستجد | معيد </h5>\r\n                        </GridItem>\r\n                    </Grid>\r\n                    <Grid container md={12} style={{ margin: \"2em 0em\" }}>\r\n                        {\r\n                            plans.map(e => (<>\r\n                                <GridItem md={2}>\r\n                                    <TextField variant=\"outlined\" size=\"small\" disabled value={e.year ?.ar_name} />\r\n                                </GridItem>\r\n                                <GridItem md={2}>\r\n                                    <TextField variant=\"outlined\" size=\"small\" disabled value={e.year ?.speciality ?.ar_name} />\r\n                                </GridItem>\r\n                                <GridItem md={2}>\r\n                                    <TextField variant=\"outlined\" size=\"small\" disabled value={e.semester} />\r\n                                </GridItem>\r\n                                <GridItem md={1}>\r\n                                    {e.new_students_num} | {e.old_students_num}\r\n                                </GridItem>\r\n                                <GridItem md={2}>\r\n                                    <input type=\"checkbox\" checked={selectedPlans.includes(e.id)} value={e.id} onChange={p => selectPlan(p.target.value)} />\r\n                                </GridItem>\r\n                            </>))\r\n                        }\r\n                    </Grid>\r\n                    <Grid container md={12}>\r\n                        <GridItem md={1}>\r\n                            التاريخ\r\n                    </GridItem>\r\n                        <GridItem md={3}>\r\n                            <KeyboardDatePicker\r\n                                clearable\r\n                                value={selectedDate}\r\n                                onChange={date => handleDateChange(date)}\r\n                                minDate={new Date()}\r\n                                format=\"MM/dd/yyyy\"\r\n                            // inputVariant=\"outlined\"\r\n                            />\r\n                        </GridItem>\r\n                    </Grid>\r\n                    <Grid container md={12} style={{ marginTop: '3em' }}>\r\n                        <GridItem style={{ display: \"flex\", marginTop: \"1em\" }} md={1}>\r\n                            <span> الوقت</span>\r\n                        </GridItem>\r\n                        <GridItem md={2}>\r\n                            <TimePicker\r\n                                clearable\r\n                                label=\"من\"\r\n                                value={startTime}\r\n                                onChange={handleStartTime}\r\n                            />\r\n                        </GridItem>\r\n                        <GridItem md={2}>\r\n                            <TimePicker\r\n                                showTodayButton\r\n                                todayLabel=\"now\"\r\n                                label=\"إلى\"\r\n                                value={endTime}\r\n                                minutesStep={5}\r\n                                onChange={handleEndTime}\r\n                            />\r\n                        </GridItem>\r\n                        <GridItem md={1}></GridItem>\r\n                        <Grid container md={4}>\r\n                            <Grid item md={5}>\r\n                                <p style={{ margin: \"0\" }}>المجموع الكلي</p>\r\n                                <p style={{ margin: \"0\" }}>مستجد</p>\r\n                                <p style={{ margin: \"0\" }}>معيد</p>\r\n                            </Grid>\r\n                            <Grid item md={3}>\r\n                                <p style={{ margin: \"0\" }}>{`${selectedNewStds + selectedOldStds}`}</p>\r\n                                <p style={{ margin: \"0\" }}>{selectedNewStds}</p>\r\n                                <p style={{ margin: \"0\" }}>{selectedOldStds}</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n                <Grid container md={12} style={{ marginTop: '1em' }}>\r\n                    <Card style={{ margin: \"5px 0px\", width: \"100%\", paddingRight: \"1em\", paddingBottom: \"1em\" }}>\r\n                        <Grid container>\r\n                            <Button style={{ margin: \"10px 5px\" }}\r\n                                variant=\"contained\"\r\n                                className={classes.submitBtn}\r\n                                onClick={addInputField}>إضافة قاعة</Button>\r\n                        </Grid>\r\n                        {\r\n                            inputFields.map((data, index) => {\r\n                                console.log(data);\r\n                                return (\r\n                                    <Grid container md={12} style={{ marginTop: '1em' }}>\r\n                                        <GridItem md={2}>\r\n                                            <Select\r\n                                                fullWidth\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={data.hall}\r\n                                                label=\"halls\"\r\n                                                name=\"hall\"\r\n                                                onChange={(evnt) => handleChange(index, evnt)}\r\n                                            >\r\n                                                {halls.map((hall) => (\r\n                                                    !hall.selected && <MenuItem key={hall.id} value={hall.id}>\r\n                                                        {hall.name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </GridItem>\r\n                                        <GridItem md={5}>\r\n                                            <TextField\r\n                                                onChange={(evnt) => handleChange(index, evnt)}\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                type=\"number\"\r\n                                                name=\"num_studs\"\r\n                                                value={data.num_studs}\r\n                                                label={translate(\"عدد الطلّاب\")}\r\n                                                fullWidth\r\n                                            />\r\n                                        </GridItem>\r\n                                        <GridItem md={3}>\r\n                                            {(inputFields.length !== 1) ?\r\n                                                <Button\r\n                                                    type=\"button\"\r\n                                                    style={{\r\n                                                        width: \"10%\",\r\n                                                        color: \"white\",\r\n                                                        background: \"red\"\r\n                                                    }}\r\n                                                    variant=\"outlined\"\r\n                                                    className={classes.closeBtn}\r\n                                                    onClick={removeInputFields}\r\n                                                >x</Button> : ''}\r\n                                        </GridItem>\r\n                                    </Grid>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Card>\r\n                </Grid>\r\n            </MuiPickersUtilsProvider >\r\n        }\r\n        else {\r\n            return <Grid container md={12} style={{\r\n                margin: \"2em 0em\", display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <Typography style={{ textAlign: 'center' }} variant=\"h5\" component=\"div\">\r\n                    {`لاتوجد بيانات لعرضها`}\r\n                </Typography>\r\n            </Grid>\r\n        }\r\n    }\r\n    return <GridContainer md={12}>\r\n        <GridContainer md={12}>\r\n            <GridItem\r\n                style={{ margin: \"-1em 0 1em 0\" }}\r\n                md={12}\r\n                className={classes.typography}\r\n            >\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                    {`إضافة واقعة امتحانية`}\r\n                </Typography>\r\n            </GridItem>\r\n        </GridContainer>\r\n        <Grid container md={12} style={{ margin: \"2em 0em\" }}>\r\n            <GridItem md={2}>\r\n                <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n                    <InputLabel id=\"demo-simple-select-label\">البرنامج</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={program}\r\n                        label=\"programs\"\r\n                        onChange={(e) => changeProgram(e.target.value)}\r\n                    >\r\n                        {programs ?.map((program) => (\r\n                            <MenuItem key={program.id} value={program.id}>\r\n                                {program.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </GridItem>\r\n            <GridItem md={2}>\r\n                <FormControl fullWidth variant=\"filled\" size=\"small\">\r\n                    <InputLabel id=\"demo-simple-select-label\">السنة</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={eduYear}\r\n                        label=\"specYears\"\r\n                        onChange={(e) => changeEduYear(e.target.value)}\r\n                    >\r\n                        {eduYears.map((spYear) => (\r\n                            <MenuItem key={spYear.id} value={spYear.id}>\r\n                                {spYear.year}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </GridItem>\r\n            <GridItem md={2}>\r\n                <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n                    <InputLabel id=\"demo-simple-select-label\">المقرّر</InputLabel>\r\n                    <Select\r\n                        disabled={loadCourses}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={course}\r\n                        label=\"courses\"\r\n                        onChange={(e) => changeCourse(e.target.value)}\r\n                    >\r\n                        {courses.map((course) => (\r\n                            <MenuItem key={course.id} value={course.id}>\r\n                                {course.ar_name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </GridItem>\r\n            <GridItem md={2}>\r\n                <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n                    <InputLabel id=\"demo-simple-select-label\">نوع الواقعة</InputLabel>\r\n                    <Select\r\n                        disabled={loadExamsType}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={examType}\r\n                        label=\"examTypes\"\r\n                        onChange={(e) => changeExamType(e.target.value)}\r\n                    >\r\n                        {examsTypes.map((exam) => (\r\n                            <MenuItem key={exam.id} value={exam.id}>\r\n                                {exam.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </GridItem>\r\n            <GridItem md={2}>\r\n                <Button\r\n                    style={{ margin: \"10px 5px\" }}\r\n                    variant=\"contained\"\r\n                    className={classes.submitBtn}\r\n                    onClick={handleAddExam}\r\n                >\r\n                    <span style={{ padding: \"0px 0px 0px 10px\" }}>\r\n                        {translate(\"Add\")}\r\n                    </span>\r\n                    <Add />\r\n                </Button>\r\n            </GridItem>\r\n            {/* <GridItem md={2}>\r\n                <Button\r\n                    style={{ margin: \"10px 5px\" }}\r\n                    variant=\"contained\"\r\n                    className={classes.submitBtn}\r\n                    onClick={getProgramCourses}\r\n                >\r\n                    <span style={{ padding: \"0px 0px 0px 10px\" }}>\r\n                        {translate(\"Show Courses\")}\r\n                    </span>\r\n                    <ZoomIn />\r\n                </Button>\r\n            </GridItem> */}\r\n        </Grid>\r\n        {\r\n            renderPlans(plans)\r\n        }\r\n    </GridContainer>\r\n}\r\n\r\n(ExamsList as any).auth = true;\r\n(ExamsList as any).layout = Admin;\r\nexport default ExamsList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}