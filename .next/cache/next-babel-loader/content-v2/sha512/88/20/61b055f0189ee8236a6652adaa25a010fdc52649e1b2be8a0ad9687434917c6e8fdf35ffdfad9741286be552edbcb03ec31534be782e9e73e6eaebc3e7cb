{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\authentication\\\\sign-in\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\"; // Authentication layout components\n\nimport CoverLayout from \"../../../components/CoverLayout\";\nimport { Box, Typography, TextField, Select, MenuItem } from \"@material-ui/core\";\nimport { Switch } from \"@material-ui/core\";\nimport SuiButton from \"../../../components/SuiButton\";\nimport \"../../../assets/css/main.css\";\nimport { useSession } from \"next-auth/react\";\nimport { selectSessionKey, useAppDispatch, useAppSelector } from \"../../../redux\";\nimport LoginService from \"../../../Services/LoginService\";\nimport { useTranslation } from \"../../../Utility/Translations/useTranslation\"; // Images\n\nconst bg7 = require(\"./../../../assets/img/curved-images/HIAST.jpg\");\n\nfunction SignIn() {\n  _s();\n\n  const {\n    translate\n  } = useTranslation();\n  const {\n    locale\n  } = useRouter();\n  const dispatch = useAppDispatch();\n  const {\n    0: rememberMe,\n    1: setRememberMe\n  } = useState(true);\n  const {\n    0: _currentSessionKey,\n    1: setCurrentSessionKey\n  } = useState(\"\");\n  const {\n    data: session\n  } = useSession();\n  const isUser = !!(session !== null && session !== void 0 && session.user);\n  const sessionKey = useAppSelector(selectSessionKey);\n  useEffect(() => {\n    if (!!sessionKey) router.push(\"/students_affairs/dashboard\");\n  }, [sessionKey]);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: years,\n    1: setYears\n  } = useState([]);\n  const {\n    0: selectedYear,\n    1: setSelectedYear\n  } = useState(\"\");\n  const initialValues = {\n    username: \"\",\n    // email: \"\",\n    password: \"\",\n    rememberMe: false\n  };\n\n  const handleSetRememberMe = () => setRememberMe(!rememberMe);\n\n  const router = useRouter();\n\n  async function fetchApi() {\n    let data = await LoginService.GetYears();\n    console.log(\"years\", data);\n    return data;\n  }\n\n  const handleChangeYear = event => {\n    setSelectedYear(event.target.value);\n  };\n\n  useEffect(() => {\n    setLoading(true); // const applyFetchApi = async () => {\n    //   const data = (await fetchApi()) as ApiResponse;\n    //   if (data.success) {\n    //     setYears(data.result);\n    //     if (data.result != null && Array.isArray(data.result)) {\n    //       data.result.length > 0\n    //         ? setSelectedYear(data.result[0].id.toString())\n    //         : setSelectedYear(\"\");\n    //     }\n    //   } else {\n    //     console.error(\"Api Error:\", data.error);\n    //   }\n    //   setLoading(false);\n    // };\n    // applyFetchApi().catch((ex) => {\n    //   console.error(ex);\n    // });\n  }, []);\n  const SignInSchema = Yup.object().shape({\n    username: Yup.string().required(translate(\"{0} is required\", \"Username\")),\n    // .required(\"Email is required\"),\n    // email: Yup.string()\n    //   .email(\"Must be a valid email\")\n    //   .required(\"Email is required\"),\n    password: Yup.string().required(translate(\"{0} is required\", \"Password\")).min(4, translate(\"Password is too short - should be {0} chars minimum\", \"4\", false))\n  });\n\n  const submitForm = async (values, setSubmitting) => {\n    console.log(\"values\", values);\n    const payload = {\n      email: values.username,\n      password: values.password\n    };\n    const res = await fetch(`${process.env.BASE_URL}/api/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: JSON.stringify(payload)\n    }).then(resp => {\n      return resp.json();\n    }); // const resp = await signIn(\"credentials\", {\n    //   email: values.username,\n    //   password: values.password,\n    //   redirect: false,\n    // });\n\n    console.log(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CoverLayout, {\n    title: translate(\"Welcome\"),\n    description: translate(\"Enter your credentials to sign in\"),\n    image: bg7,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: SignInSchema,\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          submitForm(values, setSubmitting);\n        },\n        children: formik => {\n          const {\n            values,\n            handleChange,\n            handleSubmit,\n            errors,\n            touched,\n            handleBlur,\n            isSubmitting,\n            isValid,\n            dirty\n          } = formik;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [!isLoading && /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-label\",\n                id: \"demo-simple-select\",\n                value: selectedYear,\n                label: \"Year\",\n                onChange: handleChangeYear,\n                children: years.map((item, ind) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item.id,\n                    children: item.year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 32\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: translate(\"Username\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: handleChange,\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"text\",\n                id: \"username\",\n                name: \"username\",\n                value: values.username,\n                onBlur: handleBlur,\n                error: Boolean(touched.username && errors.username),\n                helperText: touched.username && errors.username,\n                placeholder: translate(\"Username\"),\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: translate(\"Password\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"password\",\n                name: \"password\",\n                type: \"password\",\n                variant: \"outlined\",\n                size: \"small\",\n                placeholder: translate(\"Password\"),\n                onChange: handleChange,\n                onBlur: handleBlur,\n                error: Boolean(errors.password && touched.password),\n                helperText: touched.password && errors.password,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"button\",\n                style: {\n                  fontWeight: \"regular\",\n                  cursor: \"pointer\",\n                  userSelect: \"none\"\n                } // onClick={handleSetRememberMe}\n                // sx={{ cursor: \"pointer\", userSelect: \"none\" }}\n                ,\n                children: [\"\\xA0\\xA0\", translate(\"Remember me\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              mb: 1,\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(SuiButton, {\n                disabled: true,\n                variant: \"gradient\",\n                color: \"info\",\n                fullWidth: true,\n                children: translate(\"Signing in...\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                disabled: !(dirty && isValid),\n                type: \"submit\",\n                variant: \"gradient\",\n                color: \"info\",\n                fullWidth: true,\n                children: translate(\"Sign in\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"n77b02qEl522F2qNL5rAQyEbYFw=\", false, function () {\n  return [useTranslation, useRouter, useAppDispatch, useSession, useAppSelector, useRouter];\n});\n\n_c = SignIn;\nexport var __N_SSP = true;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/authentication/sign-in/index.tsx"],"names":["React","useEffect","useState","Formik","Form","Yup","useRouter","CoverLayout","Box","Typography","TextField","Select","MenuItem","Switch","SuiButton","useSession","selectSessionKey","useAppDispatch","useAppSelector","LoginService","useTranslation","bg7","require","SignIn","translate","locale","dispatch","rememberMe","setRememberMe","_currentSessionKey","setCurrentSessionKey","data","session","isUser","user","sessionKey","router","push","isLoading","setLoading","years","setYears","selectedYear","setSelectedYear","initialValues","username","password","handleSetRememberMe","fetchApi","GetYears","console","log","handleChangeYear","event","target","value","SignInSchema","object","shape","string","required","min","submitForm","values","setSubmitting","payload","email","res","fetch","process","env","BASE_URL","method","headers","Accept","body","JSON","stringify","then","resp","json","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","map","item","ind","id","year","Boolean","fontWeight","cursor","userSelect"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useRouter } from \"next/router\";\r\n// Authentication layout components\r\nimport CoverLayout from \"../../../components/CoverLayout\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport SuiButton from \"../../../components/SuiButton\";\r\nimport SuiInput from \"../../../components/SuiInput\";\r\nimport \"../../../assets/css/main.css\";\r\nimport { ISignInForm } from \"../../../Models/SignInForm\";\r\nimport { getProviders, getSession, signIn, useSession } from \"next-auth/react\";\r\nimport {\r\n  selectSessionKey,\r\n  useAppDispatch,\r\n  useAppSelector,\r\n  setSessionKey,\r\n  selectDirection,\r\n} from \"../../../redux\";\r\nimport LoginService from \"../../../Services/LoginService\";\r\nimport { ApiResponse } from \"../../../Models/ApiResponse/ApiResponse\";\r\nimport { YearsModel } from \"../../../Models/ApiResponse/YearsModel\";\r\nimport { useTranslation } from \"../../../Utility/Translations/useTranslation\";\r\n// Images\r\nconst bg7 = require(\"./../../../assets/img/curved-images/HIAST.jpg\");\r\n\r\nfunction SignIn() {\r\n  const { translate } = useTranslation();\r\n  const { locale } = useRouter();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [rememberMe, setRememberMe] = useState(true);\r\n  const [_currentSessionKey, setCurrentSessionKey] = useState<string>(\"\");\r\n\r\n  const { data: session } = useSession();\r\n  const isUser = !!session?.user;\r\n  const sessionKey = useAppSelector(selectSessionKey);\r\n\r\n  useEffect(() => {\r\n    if (!!sessionKey) router.push(\"/students_affairs/dashboard\");\r\n  }, [sessionKey]);\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [years, setYears] = useState<YearsModel[]>([]);\r\n  const [selectedYear, setSelectedYear] = useState<string>(\"\");\r\n  const initialValues: ISignInForm = {\r\n    username: \"\",\r\n    // email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n  };\r\n  const handleSetRememberMe = () => setRememberMe(!rememberMe);\r\n  const router = useRouter();\r\n  async function fetchApi() {\r\n    let data = (await LoginService.GetYears()) as ApiResponse;\r\n    console.log(\"years\", data);\r\n    return data;\r\n  }\r\n  const handleChangeYear = (event) => {\r\n    setSelectedYear(event.target.value as string);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    // const applyFetchApi = async () => {\r\n    //   const data = (await fetchApi()) as ApiResponse;\r\n    //   if (data.success) {\r\n    //     setYears(data.result);\r\n\r\n    //     if (data.result != null && Array.isArray(data.result)) {\r\n    //       data.result.length > 0\r\n    //         ? setSelectedYear(data.result[0].id.toString())\r\n    //         : setSelectedYear(\"\");\r\n    //     }\r\n    //   } else {\r\n    //     console.error(\"Api Error:\", data.error);\r\n    //   }\r\n    //   setLoading(false);\r\n    // };\r\n    // applyFetchApi().catch((ex) => {\r\n    //   console.error(ex);\r\n    // });\r\n  }, []);\r\n\r\n  const SignInSchema = Yup.object().shape({\r\n    username: Yup.string().required(translate(\"{0} is required\", \"Username\")),\r\n    // .required(\"Email is required\"),\r\n    // email: Yup.string()\r\n    //   .email(\"Must be a valid email\")\r\n    //   .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .required(translate(\"{0} is required\", \"Password\"))\r\n      .min(\r\n        4,\r\n        translate(\r\n          \"Password is too short - should be {0} chars minimum\",\r\n          \"4\",\r\n          false\r\n        )\r\n      ),\r\n  });\r\n  const submitForm = async (values: any, setSubmitting) => {\r\n    console.log(\"values\", values);\r\n    const payload = {\r\n      email: values.username,\r\n      password: values.password,\r\n    };\r\n    const res = await fetch(`${process.env.BASE_URL}/api/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    }).then((resp) => {\r\n      return resp.json();\r\n    });\r\n    // const resp = await signIn(\"credentials\", {\r\n    //   email: values.username,\r\n    //   password: values.password,\r\n    //   redirect: false,\r\n    // });\r\n    console.log(res);\r\n  };\r\n  return (\r\n    <CoverLayout\r\n      title={translate(\"Welcome\")}\r\n      description={translate(\"Enter your credentials to sign in\")}\r\n      image={bg7}\r\n    >\r\n      <Box>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={SignInSchema}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            submitForm(values, setSubmitting);\r\n          }}\r\n        >\r\n          {(formik) => {\r\n            const {\r\n              values,\r\n              handleChange,\r\n              handleSubmit,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              isSubmitting,\r\n              isValid,\r\n              dirty,\r\n            } = formik;\r\n            return (\r\n              <Form>\r\n                {!isLoading && (\r\n                  <Box mb={2}>\r\n                    <Box mb={1} ml={0.5}>\r\n                      <Typography component=\"label\" variant=\"caption\">\r\n                        Year\r\n                      </Typography>\r\n                    </Box>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedYear}\r\n                      label=\"Year\"\r\n                      onChange={handleChangeYear}\r\n                    >\r\n                      {years.map((item, ind) => {\r\n                        return <MenuItem value={item.id}>{item.year}</MenuItem>;\r\n                      })}\r\n                    </Select>\r\n                  </Box>\r\n                )}\r\n                <Box mb={2}>\r\n                  <Box mb={1} ml={0.5}>\r\n                    <Typography component=\"label\" variant=\"caption\">\r\n                      {translate(\"Username\")}\r\n                    </Typography>\r\n                  </Box>\r\n                  <TextField\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    value={values.username}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(touched.username && errors.username)}\r\n                    helperText={touched.username && errors.username}\r\n                    placeholder={translate(\"Username\")}\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                {/* <Box mb={1} ml={0.5}>\r\n                    <Typography component=\"label\" variant=\"caption\">\r\n                      Username\r\n                    </Typography>\r\n                  </Box>\r\n                  <TextField\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    helperText={touched.email && errors.email}\r\n                    placeholder=\"example@hiast.edu.sy\"\r\n                    fullWidth\r\n                  />\r\n                </Box> */}\r\n                <Box mb={2}>\r\n                  <Box mb={1} ml={0.5}>\r\n                    <Typography component=\"label\" variant=\"caption\">\r\n                      {translate(\"Password\")}\r\n                    </Typography>\r\n                  </Box>\r\n                  <TextField\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    placeholder={translate(\"Password\")}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.password && touched.password)}\r\n                    helperText={touched.password && errors.password}\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Switch />\r\n                  <Typography\r\n                    variant=\"button\"\r\n                    style={{\r\n                      fontWeight: \"regular\",\r\n                      cursor: \"pointer\",\r\n                      userSelect: \"none\",\r\n                    }}\r\n                    // onClick={handleSetRememberMe}\r\n                    // sx={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n                  >\r\n                    &nbsp;&nbsp;{translate(\"Remember me\")}\r\n                  </Typography>\r\n                </Box>\r\n                <Box mt={4} mb={1}>\r\n                  {isSubmitting ? (\r\n                    <SuiButton\r\n                      disabled={true}\r\n                      variant=\"gradient\"\r\n                      color=\"info\"\r\n                      fullWidth\r\n                    >\r\n                      {translate(\"Signing in...\")}\r\n                    </SuiButton>\r\n                  ) : (\r\n                    <SuiButton\r\n                      disabled={!(dirty && isValid)}\r\n                      type=\"submit\"\r\n                      variant=\"gradient\"\r\n                      color=\"info\"\r\n                      fullWidth\r\n                    >\r\n                      {translate(\"Sign in\")}\r\n                    </SuiButton>\r\n                  )}\r\n                </Box>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Box>\r\n    </CoverLayout>\r\n  );\r\n}\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const session = await getSession({ req });\r\n  console.log(session);\r\n  const providers = await getProviders();\r\n  if (session) {\r\n    return {\r\n      redirect: { destination: \"/students_affairs/dashboard\" },\r\n    };\r\n  }\r\n  return {\r\n    props: {\r\n      providers,\r\n    },\r\n  };\r\n}\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}