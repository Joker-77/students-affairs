{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\exams\\\\exams-list.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Admin from \"layouts/Admin.js\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, Typography, makeStyles, TextField } from \"@material-ui/core\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport PlanService from \"../../../../Services/PlanService\";\nimport EduYearService from \"../../../../Services/EduYearService\";\nimport ExamService from \"../../../../Services/ExamService\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport styles from \"assets/jss/nextjs-material-dashboard/views/dashboardStyle.js\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { arSA } from \"date-fns/locale\";\nimport { toast } from \"react-toastify\";\nimport \"./exams-list-style.css\";\nimport { Card } from \"@material-ui/core\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { default as RSelect } from \"react-select\";\nimport { DateHelper } from \"./../../../../Helpers/DateHelper\";\n\nconst ExamsList = ({}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const times = DateHelper.getQuarterHourTimes();\n  console.log(times); // Programs\n\n  const {\n    0: programs,\n    1: setPrograms\n  } = useState([]);\n  const {\n    0: program,\n    1: setProgram\n  } = useState(null); // Courses\n\n  const {\n    0: courses,\n    1: setCourses\n  } = useState([]);\n  const {\n    0: course,\n    1: setCourse\n  } = useState(null); // Edu Year\n\n  const {\n    0: eduYears,\n    1: setEduYears\n  } = useState([]);\n  const {\n    0: eduYear,\n    1: setEduYear\n  } = useState(null); // Exam Type\n\n  const {\n    0: examsTypes,\n    1: setExamsType\n  } = useState([]);\n  const {\n    0: examType,\n    1: setExamType\n  } = useState(null);\n  const {\n    0: loadCourses,\n    1: setLoadCourses\n  } = useState(false);\n  const {\n    0: loadExamsType,\n    1: setLoadExamsType\n  } = useState(false);\n  const {\n    0: plans,\n    1: setPlans\n  } = useState([]);\n  useEffect(() => {\n    PlanService.GetAll().then(programs => {\n      EduYearService.GetYears(\"\").then(eduYears => {\n        setPrograms(programs.result);\n        setEduYears(eduYears.result);\n      }).catch(err => {\n        console.error(\"Error\", err);\n      });\n    }).catch(err => {\n      console.error(\"Error\", err);\n    });\n  }, []);\n\n  const changeProgram = val => {\n    setProgram(val);\n  };\n\n  const changeEduYear = val => {\n    setEduYear(val);\n    setLoadCourses(true);\n    ExamService.GetAllCourses(program, val.toString()).then(resp => {\n      console.log(resp.result);\n      setCourses(resp.result);\n    }).catch(error => {});\n    setLoadCourses(false);\n  }; // Get Exams\n\n\n  useEffect(() => {}, []);\n\n  const addInputField = () => {\n    if (inputFields.length >= halls.length) toast.error(\"لايمكنك الإضافة! لايوجد سوى قاعتين\");else setInputFields([...inputFields, {\n      hall: 0,\n      date: getFullDate(selectedDate),\n      from: getFullTime(startTime),\n      to: getFullTime(endTime),\n      planId: 0,\n      num_studs: 0\n    }]);\n  };\n\n  const removeInputFields = index => {\n    const rows = [...inputFields];\n    rows.splice(index, 1);\n    setInputFields(rows);\n  };\n\n  const handleChange = (index, evnt) => {\n    const {\n      name,\n      value\n    } = evnt.target;\n    const list = [...inputFields];\n    list[index][name] = value;\n    setInputFields(list);\n    console.log(list);\n  }; //\n\n\n  const getFullDate = date => {\n    let day = date === null || date === void 0 ? void 0 : date.getDate();\n    let month = (date === null || date === void 0 ? void 0 : date.getMonth()) + 1;\n    let year = date === null || date === void 0 ? void 0 : date.getFullYear(); // This arrangement can be altered based on how we want the date's format to appear.\n\n    return `${(\"0\" + day).slice(-2)}-${(\"0\" + month).slice(-2)}-${year}`;\n  }; // ------------------------\n\n\n  const clear = () => {\n    setSelectedNewStds(0);\n    setSelectedOldStds(0);\n    setSelectedPlans([]);\n    setPlans([]);\n    setSelectedPlanData([]);\n    setInputFields([{\n      hall: 0,\n      date: getFullDate(selectedDate),\n      from: startTime,\n      to: endTime,\n      num_studs: 0\n    }]);\n  };\n\n  const changeCourse = val => {\n    clear();\n    setCourse(val);\n    setLoadExamsType(true);\n\n    let _course = courses.find(e => e.edu_course_id === val);\n\n    setExamsType(_course.evaluation_methods);\n    setLoadExamsType(false);\n  };\n\n  const changeExamType = val => {\n    clear();\n\n    let _course = courses.find(e => e.edu_course_id == course);\n\n    setExamType(val);\n    ExamService.GetAllPlans(program, eduYear, _course.edu_course_id, val.toString()).then(resp => setPlans(resp.result)).catch(error => {});\n  }; // Halls\n  // const [halls, setHalls] = useState([]);\n  // handle add coursse to program\n\n\n  const {\n    0: selectedPlanData,\n    1: setSelectedPlanData\n  } = useState([]);\n  const {\n    0: selectedPlans,\n    1: setSelectedPlans\n  } = useState([]);\n  const {\n    0: selectedNewStds,\n    1: setSelectedNewStds\n  } = useState(0);\n  const {\n    0: selectedOldStds,\n    1: setSelectedOldStds\n  } = useState(0);\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState(new Date());\n  const {\n    0: startTime,\n    1: setStartTime\n  } = useState(DateHelper.getTimeOfDay());\n  const {\n    0: endTime,\n    1: setEndTime\n  } = useState(DateHelper.getTimeOfDay()); // Dynamic Halls\n\n  const {\n    0: inputFields,\n    1: setInputFields\n  } = useState([{\n    hall: 0,\n    date: getFullDate(selectedDate),\n    from: startTime,\n    to: endTime,\n    planId: 0,\n    num_studs: 0\n  }]);\n  console.log(inputFields);\n  const _halls = [{\n    id: 1,\n    name: \"ق1\",\n    selected: false\n  }, {\n    id: 2,\n    name: \"ق2\",\n    selected: false\n  }];\n  const {\n    0: halls,\n    1: setHalls\n  } = useState(_halls);\n\n  const handleDateChange = e => {\n    setSelectedDate(e);\n\n    let _inptFilds = inputFields.slice().map(dd => {\n      return {\n        hall: dd.hall,\n        date: getFullDate(e),\n        from: getFullTime(startTime),\n        to: getFullTime(endTime),\n        planId: dd.planId,\n        num_studs: dd.num_studs\n      };\n    });\n\n    setInputFields(_inptFilds);\n  };\n\n  const handleStartTime = e => {\n    setStartTime(e);\n\n    let _inptFilds = inputFields.slice().map(dd => {\n      return {\n        hall: dd.hall,\n        date: getFullDate(selectedDate),\n        from: e.value,\n        to: endTime.value,\n        planId: dd.planId,\n        num_studs: dd.num_studs\n      };\n    });\n\n    setInputFields(_inptFilds);\n  };\n\n  const handleEndTime = e => {\n    setEndTime(e);\n\n    let _inptFilds = inputFields.slice().map(dd => {\n      return {\n        hall: dd.hall,\n        date: getFullDate(selectedDate),\n        from: startTime.value,\n        to: e.value,\n        planId: dd.planId,\n        num_studs: dd.num_studs\n      };\n    });\n\n    setInputFields(_inptFilds);\n    const startHour = startTime.getHours();\n    const startMinute = startTime.getMinutes();\n    const endHour = e.getHours();\n    const endMinute = e.getMinutes();\n    if (e < startTime) toast.error(\"وقت الانتهاء يجب أن يكون بعد وقت البدء\");\n  }; // get selected plan exams\n\n\n  const {\n    0: selectedPlan,\n    1: setSelectedPlan\n  } = useState(0); // Select Plan\n\n  const selectPlan = id => {\n    let valAsNum = parseInt(id); // setSelectedPlan(valAsNum);\n\n    let _arr = selectedPlans.slice();\n\n    if (_arr.includes(valAsNum)) {\n      let index = _arr.findIndex(e => e == valAsNum);\n\n      _arr.splice(index, 1);\n\n      setSelectedPlans(_arr);\n      let sel = _arr.length > 0 ? plans.map(e => {\n        if (_arr.includes(parseInt(e.id))) return e;\n      }) : [];\n      setSelectedPlanData(sel);\n\n      if (sel.length > 0) {\n        const sumOld = sel.reduce((partialSum, a) => partialSum + a.old_students_num, 0);\n        const sumNew = sel.reduce((partialSum, a) => partialSum + a.new_students_num, 0);\n        setSelectedNewStds(sumNew);\n        setSelectedOldStds(sumOld);\n      } else {\n        setSelectedNewStds(0);\n        setSelectedOldStds(0);\n      }\n    } else {\n      _arr.push(valAsNum);\n\n      setSelectedPlans(_arr);\n      let sel = _arr.length > 0 ? plans.map(e => {\n        if (_arr.includes(parseInt(e.id))) return e;\n      }) : [];\n      setSelectedPlanData(sel);\n      const sumOld = sel.reduce((partialSum, a) => partialSum + a.old_students_num, 0);\n      const sumNew = sel.reduce((partialSum, a) => partialSum + a.new_students_num, 0);\n      setSelectedNewStds(sumNew);\n      setSelectedOldStds(sumOld);\n    }\n  };\n\n  const handleAddExam = () => {\n    const payLoad = {\n      plan_ids: [...selectedPlans],\n      type: `${examsTypes.filter(e => e.id == examType)[0].name}`,\n      date: getFullDate(selectedDate),\n      from: getFullTime(startTime),\n      to: getFullTime(endTime),\n      halls: inputFields.map(dd => {\n        return {\n          id: dd.hall,\n          plan_id: dd.planId,\n          students_num: parseInt(`${dd.num_studs}`)\n        };\n      })\n    };\n    console.log(payLoad); // PlanService.AddCourse(payLoad)\n    //   .then((result) => {\n    //     if (result.success) {\n    //       toast.success(translate(\"Course Added To Plan Successfully\"));\n    //       PlanService.GetProgramCourses(program, specYear, year)\n    //         .then((resp) => {\n    //           if (resp.success) {\n    //             setProgramCourses(resp.result);\n    //           }\n    //         })\n    //         .catch((err) => {});\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     toast.error(error.message);\n    //   });\n  };\n\n  const renderPlans = plans => {\n    if (plans.length > 0) {\n      return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        locale: arSA,\n        utils: DateFnsUtils,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            margin: \"5px 0px\",\n            width: \"100%\",\n            paddingRight: \"1em\",\n            paddingBottom: \"1em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              height: \"7em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0633\\u0646\\u0629\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0627\\u062E\\u062A\\u0635\\u0627\\u0635\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0641\\u0635\\u0644\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\",\n                  marginBottom: \"0\"\n                },\n                children: [\"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0637\\u0644\\u0627\\u0628\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\",\n                  marginTop: \"0\"\n                },\n                children: [\"\\u0645\\u0633\\u062A\\u062C\\u062F | \\u0645\\u0639\\u064A\\u062F\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              margin: \"2em 0em\"\n            },\n            children: plans.map(e => {\n              var _e$year, _e$year2, _e$year2$speciality;\n\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: (_e$year = e.year) === null || _e$year === void 0 ? void 0 : _e$year.ar_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: (_e$year2 = e.year) === null || _e$year2 === void 0 ? void 0 : (_e$year2$speciality = _e$year2.speciality) === null || _e$year2$speciality === void 0 ? void 0 : _e$year2$speciality.ar_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: e.semester\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 1,\n                  children: [e.new_students_num, \" | \", e.old_students_num]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 1,\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedPlans.includes(e.id),\n                    value: e.id,\n                    onChange: p => selectPlan(p.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              md: 1,\n              children: \"\\u0627\\u0644\\u062A\\u0627\\u0631\\u064A\\u062E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                clearable: true,\n                value: selectedDate,\n                onChange: date => handleDateChange(date),\n                minDate: new Date(),\n                format: \"dd/MM/yyyy\" // inputVariant=\"outlined\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              marginTop: \"3em\",\n              height: \"10em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              style: {\n                display: \"flex\",\n                marginTop: \"1em\"\n              },\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" \\u0627\\u0644\\u0648\\u0642\\u062A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-label\",\n                children: \"\\u0645\\u0646\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RSelect, {\n                style: {\n                  zIndex: 999\n                },\n                defaultValue: startTime,\n                placeholder: \"اختيار الوقت\",\n                isSearchable: true,\n                options: times,\n                onChange: e => {\n                  handleStartTime(e);\n                },\n                getOptionLabel: option => option.label,\n                getOptionValue: option => option.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-label\",\n                children: \"\\u0625\\u0644\\u0649\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RSelect, {\n                style: {\n                  zIndex: 999\n                },\n                defaultValue: endTime,\n                placeholder: \"اختيار الوقت\",\n                isSearchable: true,\n                options: times,\n                onChange: e => {\n                  handleEndTime(e);\n                },\n                getOptionLabel: option => option.label,\n                getOptionValue: option => option.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              md: 4,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 5,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0627\\u0644\\u0645\\u062C\\u0645\\u0648\\u0639 \\u0627\\u0644\\u0643\\u0644\\u064A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0645\\u0633\\u062A\\u062C\\u062F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0645\\u0639\\u064A\\u062F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: `${selectedNewStds + selectedOldStds}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: selectedNewStds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: selectedOldStds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          md: 12,\n          style: {\n            marginTop: \"1em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              margin: \"5px 0px\",\n              width: \"100%\",\n              paddingRight: \"1em\",\n              paddingBottom: \"1em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  margin: \"10px 5px\"\n                },\n                variant: \"contained\",\n                className: classes.submitBtn,\n                onClick: addInputField,\n                children: \"\\u062A\\u062E\\u0635\\u064A\\u0635 \\u0642\\u0627\\u0639\\u0629\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), inputFields.map((data, index) => {\n              console.log(data);\n              console.log(selectedPlanData);\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                style: {\n                  marginTop: \"1em\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    variant: \"filled\",\n                    size: \"small\",\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"demo-simple-select-label\",\n                      children: \"\\u0627\\u0644\\u0642\\u0627\\u0639\\u0629\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      fullWidth: true,\n                      labelId: \"demo-simple-select-label\",\n                      id: \"demo-simple-select\",\n                      value: data.hall,\n                      label: \"halls\",\n                      name: \"hall\",\n                      onChange: evnt => handleChange(index, evnt),\n                      children: halls.map(hall => !hall.selected && /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: hall.id,\n                        children: hall.name\n                      }, hall.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    variant: \"filled\",\n                    size: \"small\",\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"demo-simple-select-label\",\n                      children: \"\\u0627\\u0644\\u0633\\u0646\\u0629 \\u0648\\u0627\\u0644\\u0627\\u062E\\u062A\\u0635\\u0627\\u0635\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      fullWidth: true,\n                      labelId: \"demo-simple-select-label\",\n                      id: \"demo-simple-select\",\n                      value: data.planId,\n                      label: \"halls\",\n                      name: \"planId\",\n                      onChange: evnt => handleChange(index, evnt),\n                      children: selectedPlanData.map(data => {\n                        var _data$year, _data$year2, _data$year2$specialit;\n\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: data.id,\n                          children: `${(_data$year = data.year) === null || _data$year === void 0 ? void 0 : _data$year.ar_name} - ${(_data$year2 = data.year) === null || _data$year2 === void 0 ? void 0 : (_data$year2$specialit = _data$year2.speciality) === null || _data$year2$specialit === void 0 ? void 0 : _data$year2$specialit.ar_name}`\n                        }, data.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 564,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.date,\n                    label: translate(\"التاريخ\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.from,\n                    label: translate(\"من\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.to,\n                    label: translate(\"إلى\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    onChange: evnt => handleChange(index, evnt),\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    name: \"num_studs\",\n                    value: data.num_studs,\n                    label: translate(\"عدد الطلّاب\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 1,\n                  style: {\n                    marginTop: \"1em\"\n                  },\n                  children: inputFields.length !== 1 ? /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    style: {\n                      width: \"10%\",\n                      color: \"white\",\n                      background: \"red\"\n                    },\n                    variant: \"outlined\",\n                    className: classes.closeBtn,\n                    onClick: removeInputFields,\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 25\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(SuiButton, {\n              onClick: handleAddExam,\n              style: {\n                margin: \"2em 0\",\n                color: \"rgb(255, 255, 255)\",\n                background: \"rgb(23, 193, 232)\"\n              },\n              type: \"button\",\n              children: `إضافة واقعة امتحانية`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        md: 12,\n        style: {\n          margin: \"2em 0em\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            textAlign: \"center\"\n          },\n          variant: \"h5\",\n          component: \"div\",\n          children: `لاتوجد بيانات لعرضها`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    md: 12,\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        style: {\n          margin: \"-1em 0 1em 0\"\n        },\n        md: 12,\n        className: classes.typography,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: `إضافة واقعة امتحانية`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      md: 12,\n      style: {\n        margin: \"2em 0em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0628\\u0631\\u0646\\u0627\\u0645\\u062C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(RSelect, {\n            defaultValue: program,\n            placeholder: \"اختيار البرنامج\",\n            isSearchable: true,\n            options: programs,\n            onChange: e => {\n              changeProgram(e.id);\n            },\n            getOptionLabel: option => option.name,\n            getOptionValue: option => option.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0633\\u0646\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(RSelect, {\n            defaultValue: eduYear,\n            placeholder: \"اختيار السنة\",\n            isSearchable: true,\n            options: eduYears,\n            onChange: e => changeEduYear(e.id),\n            getOptionLabel: option => option.year,\n            getOptionValue: option => option.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0645\\u0642\\u0631\\u0651\\u0631\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(RSelect, {\n            isDisabled: loadCourses,\n            defaultValue: course,\n            placeholder: \"اختيار المقرّر\",\n            isSearchable: true,\n            options: courses,\n            onChange: e => changeCourse(e.edu_course_id),\n            getOptionLabel: option => option.ar_name,\n            getOptionValue: option => option.edu_course_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0648\\u0627\\u0642\\u0639\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(RSelect, {\n            isDisabled: loadExamsType,\n            defaultValue: examType,\n            placeholder: \"اختيار الواقعة\",\n            isSearchable: true,\n            options: examsTypes,\n            onChange: e => changeExamType(e.id),\n            getOptionLabel: option => option.name,\n            getOptionValue: option => option.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 7\n    }, this), renderPlans(plans)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 676,\n    columnNumber: 5\n  }, this);\n};\n\nExamsList.auth = true;\nExamsList.layout = Admin;\nexport default ExamsList;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/exams/exams-list.tsx"],"names":["React","useEffect","useState","Admin","GridContainer","Button","FormControl","Grid","InputLabel","MenuItem","Select","Typography","makeStyles","TextField","GridItem","PlanService","EduYearService","ExamService","useTranslation","styles","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","arSA","toast","Card","SuiButton","default","RSelect","DateHelper","ExamsList","translate","useStyles","classes","times","getQuarterHourTimes","console","log","programs","setPrograms","program","setProgram","courses","setCourses","course","setCourse","eduYears","setEduYears","eduYear","setEduYear","examsTypes","setExamsType","examType","setExamType","loadCourses","setLoadCourses","loadExamsType","setLoadExamsType","plans","setPlans","GetAll","then","GetYears","result","catch","err","error","changeProgram","val","changeEduYear","GetAllCourses","toString","resp","addInputField","inputFields","length","halls","setInputFields","hall","date","getFullDate","selectedDate","from","getFullTime","startTime","to","endTime","planId","num_studs","removeInputFields","index","rows","splice","handleChange","evnt","name","value","target","list","day","getDate","month","getMonth","year","getFullYear","slice","clear","setSelectedNewStds","setSelectedOldStds","setSelectedPlans","setSelectedPlanData","changeCourse","_course","find","e","edu_course_id","evaluation_methods","changeExamType","GetAllPlans","selectedPlanData","selectedPlans","selectedNewStds","selectedOldStds","setSelectedDate","Date","setStartTime","getTimeOfDay","setEndTime","_halls","id","selected","setHalls","handleDateChange","_inptFilds","map","dd","handleStartTime","handleEndTime","startHour","getHours","startMinute","getMinutes","endHour","endMinute","selectedPlan","setSelectedPlan","selectPlan","valAsNum","parseInt","_arr","includes","findIndex","sel","sumOld","reduce","partialSum","a","old_students_num","sumNew","new_students_num","push","handleAddExam","payLoad","plan_ids","type","filter","plan_id","students_num","renderPlans","margin","width","paddingRight","paddingBottom","height","fontWeight","marginBottom","marginTop","ar_name","speciality","semester","p","display","zIndex","option","label","submitBtn","data","color","background","closeBtn","justifyContent","textAlign","typography","auth","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Admin from \"layouts/Admin.js\";\r\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\r\nimport { Add, ArrowBack, Backspace, ZoomIn } from \"@material-ui/icons\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n  makeStyles,\r\n  Input,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport GridItem from \"../../../../components/Grid/GridItem\";\r\nimport PlanService from \"../../../../Services/PlanService\";\r\nimport CourseService from \"../../../../Services/CourseService\";\r\nimport EduYearService from \"../../../../Services/EduYearService\";\r\nimport ExamService from \"../../../../Services/ExamService\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport styles from \"assets/jss/nextjs-material-dashboard/views/dashboardStyle.js\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  TimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { arSA } from \"date-fns/locale\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./exams-list-style.css\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport { default as RSelect } from \"react-select\";\r\nimport { DateHelper } from \"./../../../../Helpers/DateHelper\";\r\n\r\ninterface IExamsListProps {}\r\nconst ExamsList: React.FC<IExamsListProps> = ({}) => {\r\n  const { translate } = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n\r\n  const times = DateHelper.getQuarterHourTimes();\r\n  console.log(times);\r\n  // Programs\r\n  const [programs, setPrograms] = useState([]);\r\n  const [program, setProgram] = useState(null);\r\n\r\n  // Courses\r\n  const [courses, setCourses] = useState([]);\r\n  const [course, setCourse] = useState(null);\r\n\r\n  // Edu Year\r\n  const [eduYears, setEduYears] = useState([]);\r\n  const [eduYear, setEduYear] = useState(null);\r\n\r\n  // Exam Type\r\n  const [examsTypes, setExamsType] = useState([]);\r\n  const [examType, setExamType] = useState(null);\r\n\r\n  const [loadCourses, setLoadCourses] = useState(false);\r\n  const [loadExamsType, setLoadExamsType] = useState(false);\r\n\r\n  const [plans, setPlans] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PlanService.GetAll()\r\n      .then((programs) => {\r\n        EduYearService.GetYears(\"\")\r\n          .then((eduYears) => {\r\n            setPrograms(programs.result);\r\n            setEduYears(eduYears.result);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error\", err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error\", err);\r\n      });\r\n  }, []);\r\n\r\n  const changeProgram = (val: number) => {\r\n    setProgram(val);\r\n  };\r\n\r\n  const changeEduYear = (val: number) => {\r\n    setEduYear(val);\r\n    setLoadCourses(true);\r\n    ExamService.GetAllCourses(program, val.toString())\r\n      .then((resp) => {\r\n        console.log(resp.result);\r\n        setCourses(resp.result);\r\n      })\r\n      .catch((error) => {});\r\n    setLoadCourses(false);\r\n  };\r\n\r\n  // Get Exams\r\n  useEffect(() => {}, []);\r\n\r\n  const addInputField = () => {\r\n    if (inputFields.length >= halls.length)\r\n      toast.error(\"لايمكنك الإضافة! لايوجد سوى قاعتين\");\r\n    else\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n          hall: 0,\r\n          date: getFullDate(selectedDate),\r\n          from: getFullTime(startTime),\r\n          to: getFullTime(endTime),\r\n          planId: 0,\r\n          num_studs: 0,\r\n        },\r\n      ]);\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    rows.splice(index, 1);\r\n    setInputFields(rows);\r\n  };\r\n  const handleChange = (index, evnt) => {\r\n    const { name, value } = evnt.target;\r\n    const list = [...inputFields];\r\n    list[index][name] = value;\r\n    setInputFields(list);\r\n    console.log(list);\r\n  };\r\n  //\r\n  const getFullDate = (date) => {\r\n    let day = date?.getDate();\r\n    let month = date?.getMonth() + 1;\r\n    let year = date?.getFullYear();\r\n    // This arrangement can be altered based on how we want the date's format to appear.\r\n    return `${(\"0\" + day).slice(-2)}-${(\"0\" + month).slice(-2)}-${year}`;\r\n  };\r\n  // ------------------------\r\n  const clear = () => {\r\n    setSelectedNewStds(0);\r\n    setSelectedOldStds(0);\r\n    setSelectedPlans([]);\r\n    setPlans([]);\r\n    setSelectedPlanData([]);\r\n    setInputFields([\r\n      {\r\n        hall: 0,\r\n        date: getFullDate(selectedDate),\r\n        from: startTime,\r\n        to: endTime,\r\n        num_studs: 0,\r\n      },\r\n    ]);\r\n  };\r\n  const changeCourse = (val: number) => {\r\n    clear();\r\n    setCourse(val);\r\n    setLoadExamsType(true);\r\n    let _course = courses.find((e) => e.edu_course_id === val);\r\n    setExamsType(_course.evaluation_methods);\r\n    setLoadExamsType(false);\r\n  };\r\n  const changeExamType = (val: number) => {\r\n    clear();\r\n    let _course = courses.find((e) => e.edu_course_id == course);\r\n    setExamType(val);\r\n    ExamService.GetAllPlans(\r\n      program,\r\n      eduYear,\r\n      _course.edu_course_id,\r\n      val.toString()\r\n    )\r\n      .then((resp) => setPlans(resp.result))\r\n      .catch((error) => {});\r\n  };\r\n  // Halls\r\n  // const [halls, setHalls] = useState([]);\r\n  // handle add coursse to program\r\n\r\n  const [selectedPlanData, setSelectedPlanData] = useState([]);\r\n  const [selectedPlans, setSelectedPlans] = useState<number[]>([]);\r\n  const [selectedNewStds, setSelectedNewStds] = useState(0);\r\n  const [selectedOldStds, setSelectedOldStds] = useState(0);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [startTime, setStartTime] = useState(DateHelper.getTimeOfDay());\r\n  const [endTime, setEndTime] = useState(DateHelper.getTimeOfDay());\r\n  // Dynamic Halls\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      hall: 0,\r\n      date: getFullDate(selectedDate),\r\n      from: startTime,\r\n      to: endTime,\r\n      planId: 0,\r\n      num_studs: 0,\r\n    },\r\n  ]);\r\n  console.log(inputFields);\r\n  const _halls = [\r\n    {\r\n      id: 1,\r\n      name: \"ق1\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"ق2\",\r\n      selected: false,\r\n    },\r\n  ];\r\n  const [halls, setHalls] = useState(_halls);\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e);\r\n    let _inptFilds = inputFields.slice().map((dd) => {\r\n      return {\r\n        hall: dd.hall,\r\n        date: getFullDate(e),\r\n        from: getFullTime(startTime),\r\n        to: getFullTime(endTime),\r\n        planId: dd.planId,\r\n        num_studs: dd.num_studs,\r\n      };\r\n    });\r\n    setInputFields(_inptFilds);\r\n  };\r\n  const handleStartTime = (e) => {\r\n    setStartTime(e);\r\n    let _inptFilds = inputFields.slice().map((dd) => {\r\n      return {\r\n        hall: dd.hall,\r\n        date: getFullDate(selectedDate),\r\n        from: e.value,\r\n        to: endTime.value,\r\n        planId: dd.planId,\r\n        num_studs: dd.num_studs,\r\n      };\r\n    });\r\n    setInputFields(_inptFilds);\r\n  };\r\n  const handleEndTime = (e) => {\r\n    setEndTime(e);\r\n    let _inptFilds = inputFields.slice().map((dd) => {\r\n      return {\r\n        hall: dd.hall,\r\n        date: getFullDate(selectedDate),\r\n        from: startTime.value,\r\n        to: e.value,\r\n        planId: dd.planId,\r\n        num_studs: dd.num_studs,\r\n      };\r\n    });\r\n    setInputFields(_inptFilds);\r\n    const startHour = startTime.getHours();\r\n    const startMinute = startTime.getMinutes();\r\n    const endHour = e.getHours();\r\n    const endMinute = e.getMinutes();\r\n    if (e < startTime) toast.error(\"وقت الانتهاء يجب أن يكون بعد وقت البدء\");\r\n  };\r\n\r\n  // get selected plan exams\r\n  const [selectedPlan, setSelectedPlan] = useState(0);\r\n  // Select Plan\r\n  const selectPlan = (id) => {\r\n    let valAsNum = parseInt(id);\r\n    // setSelectedPlan(valAsNum);\r\n    let _arr = selectedPlans.slice();\r\n    if (_arr.includes(valAsNum)) {\r\n      let index = _arr.findIndex((e) => e == valAsNum);\r\n      _arr.splice(index, 1);\r\n      setSelectedPlans(_arr);\r\n      let sel =\r\n        _arr.length > 0\r\n          ? plans.map((e) => {\r\n              if (_arr.includes(parseInt(e.id))) return e;\r\n            })\r\n          : [];\r\n      setSelectedPlanData(sel);\r\n      if (sel.length > 0) {\r\n        const sumOld = sel.reduce(\r\n          (partialSum, a) => partialSum + a.old_students_num,\r\n          0\r\n        );\r\n        const sumNew = sel.reduce(\r\n          (partialSum, a) => partialSum + a.new_students_num,\r\n          0\r\n        );\r\n        setSelectedNewStds(sumNew);\r\n        setSelectedOldStds(sumOld);\r\n      } else {\r\n        setSelectedNewStds(0);\r\n        setSelectedOldStds(0);\r\n      }\r\n    } else {\r\n      _arr.push(valAsNum);\r\n      setSelectedPlans(_arr);\r\n      let sel =\r\n        _arr.length > 0\r\n          ? plans.map((e) => {\r\n              if (_arr.includes(parseInt(e.id))) return e;\r\n            })\r\n          : [];\r\n      setSelectedPlanData(sel);\r\n      const sumOld = sel.reduce(\r\n        (partialSum, a) => partialSum + a.old_students_num,\r\n        0\r\n      );\r\n      const sumNew = sel.reduce(\r\n        (partialSum, a) => partialSum + a.new_students_num,\r\n        0\r\n      );\r\n      setSelectedNewStds(sumNew);\r\n      setSelectedOldStds(sumOld);\r\n    }\r\n  };\r\n\r\n  const handleAddExam = () => {\r\n    const payLoad = {\r\n      plan_ids: [...selectedPlans],\r\n      type: `${examsTypes.filter((e) => e.id == examType)[0].name}`,\r\n      date: getFullDate(selectedDate),\r\n      from: getFullTime(startTime),\r\n      to: getFullTime(endTime),\r\n      halls: inputFields.map((dd) => {\r\n        return {\r\n          id: dd.hall,\r\n          plan_id: dd.planId,\r\n          students_num: parseInt(`${dd.num_studs}`),\r\n        };\r\n      }),\r\n    };\r\n    console.log(payLoad);\r\n    // PlanService.AddCourse(payLoad)\r\n    //   .then((result) => {\r\n    //     if (result.success) {\r\n    //       toast.success(translate(\"Course Added To Plan Successfully\"));\r\n    //       PlanService.GetProgramCourses(program, specYear, year)\r\n    //         .then((resp) => {\r\n    //           if (resp.success) {\r\n    //             setProgramCourses(resp.result);\r\n    //           }\r\n    //         })\r\n    //         .catch((err) => {});\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     toast.error(error.message);\r\n    //   });\r\n  };\r\n  const renderPlans = (plans) => {\r\n    if (plans.length > 0) {\r\n      return (\r\n        <MuiPickersUtilsProvider locale={arSA} utils={DateFnsUtils}>\r\n          <Card\r\n            style={{\r\n              margin: \"5px 0px\",\r\n              width: \"100%\",\r\n              paddingRight: \"1em\",\r\n              paddingBottom: \"1em\",\r\n            }}\r\n          >\r\n            <Grid container md={12} style={{ height: \"7em\" }}>\r\n              <GridItem md={2}>\r\n                <h5 style={{ fontWeight: \"bold\" }}>السنة</h5>\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <h5 style={{ fontWeight: \"bold\" }}>الاختصاص</h5>\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <h5 style={{ fontWeight: \"bold\" }}>الفصل</h5>\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <h5 style={{ fontWeight: \"bold\", marginBottom: \"0\" }}>\r\n                  عدد الطلاب{\" \"}\r\n                </h5>\r\n                <h5 style={{ fontWeight: \"bold\", marginTop: \"0\" }}>\r\n                  مستجد | معيد{\" \"}\r\n                </h5>\r\n              </GridItem>\r\n            </Grid>\r\n            <Grid container md={12} style={{ margin: \"2em 0em\" }}>\r\n              {plans.map((e) => (\r\n                <>\r\n                  <GridItem md={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled\r\n                      value={e.year?.ar_name}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem md={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled\r\n                      value={e.year?.speciality?.ar_name}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem md={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled\r\n                      value={e.semester}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem md={1}>\r\n                    {e.new_students_num} | {e.old_students_num}\r\n                  </GridItem>\r\n                  <GridItem md={1}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedPlans.includes(e.id)}\r\n                      value={e.id}\r\n                      onChange={(p) => selectPlan(p.target.value)}\r\n                    />\r\n                  </GridItem>\r\n                </>\r\n              ))}\r\n            </Grid>\r\n            <Grid container md={12}>\r\n              <GridItem md={1}>التاريخ</GridItem>\r\n              <GridItem md={3}>\r\n                <KeyboardDatePicker\r\n                  clearable\r\n                  value={selectedDate}\r\n                  onChange={(date) => handleDateChange(date)}\r\n                  minDate={new Date()}\r\n                  format=\"dd/MM/yyyy\"\r\n                  // inputVariant=\"outlined\"\r\n                />\r\n              </GridItem>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              md={12}\r\n              style={{ marginTop: \"3em\", height: \"10em\" }}\r\n            >\r\n              <GridItem style={{ display: \"flex\", marginTop: \"1em\" }} md={1}>\r\n                <span> الوقت</span>\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <InputLabel id=\"demo-simple-select-label\">من</InputLabel>\r\n                <RSelect\r\n                  style={{ zIndex: 999 }}\r\n                  defaultValue={startTime}\r\n                  placeholder={\"اختيار الوقت\"}\r\n                  isSearchable={true}\r\n                  options={times}\r\n                  onChange={(e) => {\r\n                    handleStartTime(e);\r\n                  }}\r\n                  getOptionLabel={(option) => option.label}\r\n                  getOptionValue={(option) => option.value}\r\n                />\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <InputLabel id=\"demo-simple-select-label\">إلى</InputLabel>\r\n                <RSelect\r\n                  style={{ zIndex: 999 }}\r\n                  defaultValue={endTime}\r\n                  placeholder={\"اختيار الوقت\"}\r\n                  isSearchable={true}\r\n                  options={times}\r\n                  onChange={(e) => {\r\n                    handleEndTime(e);\r\n                  }}\r\n                  getOptionLabel={(option) => option.label}\r\n                  getOptionValue={(option) => option.value}\r\n                />\r\n              </GridItem>\r\n              <GridItem md={1}></GridItem>\r\n              <Grid container md={4}>\r\n                <Grid item md={5}>\r\n                  <p style={{ margin: \"0\" }}>المجموع الكلي</p>\r\n                  <p style={{ margin: \"0\" }}>مستجد</p>\r\n                  <p style={{ margin: \"0\" }}>معيد</p>\r\n                </Grid>\r\n                <Grid item md={3}>\r\n                  <p style={{ margin: \"0\" }}>{`${\r\n                    selectedNewStds + selectedOldStds\r\n                  }`}</p>\r\n                  <p style={{ margin: \"0\" }}>{selectedNewStds}</p>\r\n                  <p style={{ margin: \"0\" }}>{selectedOldStds}</p>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n          <Grid container md={12} style={{ marginTop: \"1em\" }}>\r\n            <Card\r\n              style={{\r\n                margin: \"5px 0px\",\r\n                width: \"100%\",\r\n                paddingRight: \"1em\",\r\n                paddingBottom: \"1em\",\r\n              }}\r\n            >\r\n              <Grid container>\r\n                <Button\r\n                  style={{ margin: \"10px 5px\" }}\r\n                  variant=\"contained\"\r\n                  className={classes.submitBtn}\r\n                  onClick={addInputField}\r\n                >\r\n                  تخصيص قاعة\r\n                </Button>\r\n              </Grid>\r\n              {inputFields.map((data, index) => {\r\n                console.log(data);\r\n                console.log(selectedPlanData);\r\n                return (\r\n                  <Grid container md={12} style={{ marginTop: \"1em\" }}>\r\n                    <GridItem md={2}>\r\n                      <FormControl\r\n                        fullWidth\r\n                        variant=\"filled\"\r\n                        size=\"small\"\r\n                        size=\"small\"\r\n                      >\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          القاعة\r\n                        </InputLabel>\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={data.hall}\r\n                          label=\"halls\"\r\n                          name=\"hall\"\r\n                          onChange={(evnt) => handleChange(index, evnt)}\r\n                        >\r\n                          {halls.map(\r\n                            (hall) =>\r\n                              !hall.selected && (\r\n                                <MenuItem key={hall.id} value={hall.id}>\r\n                                  {hall.name}\r\n                                </MenuItem>\r\n                              )\r\n                          )}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <FormControl\r\n                        fullWidth\r\n                        variant=\"filled\"\r\n                        size=\"small\"\r\n                        size=\"small\"\r\n                      >\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          السنة والاختصاص\r\n                        </InputLabel>\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={data.planId}\r\n                          label=\"halls\"\r\n                          name=\"planId\"\r\n                          onChange={(evnt) => handleChange(index, evnt)}\r\n                        >\r\n                          {selectedPlanData.map((data) => (\r\n                            <MenuItem key={data.id} value={data.id}>\r\n                              {`${data.year?.ar_name} - ${data.year?.speciality?.ar_name}`}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <TextField\r\n                        disabled={true}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        value={data.date}\r\n                        label={translate(\"التاريخ\")}\r\n                        fullWidth\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <TextField\r\n                        disabled={true}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        value={data.from}\r\n                        label={translate(\"من\")}\r\n                        fullWidth\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <TextField\r\n                        disabled={true}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        value={data.to}\r\n                        label={translate(\"إلى\")}\r\n                        fullWidth\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <TextField\r\n                        onChange={(evnt) => handleChange(index, evnt)}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        name=\"num_studs\"\r\n                        value={data.num_studs}\r\n                        label={translate(\"عدد الطلّاب\")}\r\n                        fullWidth\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem md={1} style={{ marginTop: \"1em\" }}>\r\n                      {inputFields.length !== 1 ? (\r\n                        <Button\r\n                          type=\"button\"\r\n                          style={{\r\n                            width: \"10%\",\r\n                            color: \"white\",\r\n                            background: \"red\",\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          className={classes.closeBtn}\r\n                          onClick={removeInputFields}\r\n                        >\r\n                          x\r\n                        </Button>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </GridItem>\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <SuiButton\r\n                onClick={handleAddExam}\r\n                style={{\r\n                  margin: \"2em 0\",\r\n                  color: \"rgb(255, 255, 255)\",\r\n                  background: \"rgb(23, 193, 232)\",\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                {`إضافة واقعة امتحانية`}\r\n              </SuiButton>\r\n            </Card>\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n      );\r\n    } else {\r\n      return (\r\n        <Grid\r\n          container\r\n          md={12}\r\n          style={{\r\n            margin: \"2em 0em\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{ textAlign: \"center\" }}\r\n            variant=\"h5\"\r\n            component=\"div\"\r\n          >\r\n            {`لاتوجد بيانات لعرضها`}\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <GridContainer md={12}>\r\n      <GridContainer md={12}>\r\n        <GridItem\r\n          style={{ margin: \"-1em 0 1em 0\" }}\r\n          md={12}\r\n          className={classes.typography}\r\n        >\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {`إضافة واقعة امتحانية`}\r\n          </Typography>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <Grid container md={12} style={{ margin: \"2em 0em\" }}>\r\n        <GridItem md={2}>\r\n          <InputLabel id=\"demo-simple-select-label\">البرنامج</InputLabel>\r\n          <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n            <RSelect\r\n              defaultValue={program}\r\n              placeholder={\"اختيار البرنامج\"}\r\n              isSearchable={true}\r\n              options={programs}\r\n              onChange={(e) => {\r\n                changeProgram(e.id);\r\n              }}\r\n              getOptionLabel={(option) => option.name}\r\n              getOptionValue={(option) => option.id}\r\n            />\r\n          </FormControl>\r\n        </GridItem>\r\n        <GridItem md={2}>\r\n          <InputLabel id=\"demo-simple-select-label\">السنة</InputLabel>\r\n          <FormControl fullWidth variant=\"filled\" size=\"small\">\r\n            <RSelect\r\n              defaultValue={eduYear}\r\n              placeholder={\"اختيار السنة\"}\r\n              isSearchable={true}\r\n              options={eduYears}\r\n              onChange={(e) => changeEduYear(e.id)}\r\n              getOptionLabel={(option) => option.year}\r\n              getOptionValue={(option) => option.id}\r\n            />\r\n          </FormControl>\r\n        </GridItem>\r\n        <GridItem md={2}>\r\n          <InputLabel id=\"demo-simple-select-label\">المقرّر</InputLabel>\r\n          <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n            {/* <Select\r\n              disabled={loadCourses}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={course}\r\n              label=\"courses\"\r\n              onChange={(e) => changeCourse(e.target.value)}\r\n            >\r\n              {courses.map((course) => (\r\n                <MenuItem key={course.id} value={course.id}>\r\n                  {course.ar_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select> */}\r\n            <RSelect\r\n              isDisabled={loadCourses}\r\n              defaultValue={course}\r\n              placeholder={\"اختيار المقرّر\"}\r\n              isSearchable={true}\r\n              options={courses}\r\n              onChange={(e) => changeCourse(e.edu_course_id)}\r\n              getOptionLabel={(option) => option.ar_name}\r\n              getOptionValue={(option) => option.edu_course_id}\r\n            />\r\n          </FormControl>\r\n        </GridItem>\r\n        <GridItem md={2}>\r\n          <InputLabel id=\"demo-simple-select-label\">نوع الواقعة</InputLabel>\r\n          <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n            <RSelect\r\n              isDisabled={loadExamsType}\r\n              defaultValue={examType}\r\n              placeholder={\"اختيار الواقعة\"}\r\n              isSearchable={true}\r\n              options={examsTypes}\r\n              onChange={(e) => changeExamType(e.id)}\r\n              getOptionLabel={(option) => option.name}\r\n              getOptionValue={(option) => option.id}\r\n            />\r\n          </FormControl>\r\n        </GridItem>\r\n      </Grid>\r\n      {renderPlans(plans)}\r\n    </GridContainer>\r\n  );\r\n};\r\n\r\n(ExamsList as any).auth = true;\r\n(ExamsList as any).layout = Admin;\r\nexport default ExamsList;\r\n"]},"metadata":{},"sourceType":"module"}