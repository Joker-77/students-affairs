{"ast":null,"code":"import apiConnector from \"./TokenizedApiClient\";\nexport default class ExamService {\n  static async GetAllCourses(programId, eduYearId) {\n    const listUrl = process.env.LIST_EXAM_COURSE_URL;\n    console.clear();\n    console.log(`${listUrl}?program_id=${programId}&edu_year_id=${eduYearId}`);\n    return await apiConnector.get(`${listUrl}?program_id=${programId}&edu_year_id=${eduYearId}`).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async GetAllPlans(programId, eduYearId, eduCourseId, methodId) {\n    const listUrl = process.env.LIST_EXAM_URL;\n    return await apiConnector.get(`${listUrl}/plan?program_id=${programId}&edu_year_id=\n            ${eduYearId}&edu_course_id=${eduCourseId}&method_id=${methodId}`).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async GetAllHalls(date, edu_year_id = \"1\") {\n    const listUrl = process.env.LIST_EXAM_URL;\n    return await apiConnector.get(`${listUrl}halls?edu_year_id=${edu_year_id}&date=${date}`).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Add(payload) {\n    const createUrl = process.env.CREATE_COURSE_URL;\n    console.log(createUrl);\n    return await apiConnector.post(createUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async getExams(plan_id) {\n    const getUrl = process.env.LIST_EXAM_URL;\n    return await apiConnector.get(getUrl + \"?plan_id=\" + plan_id).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async getMarks(exam_id) {\n    const getUrl = process.env.MARK_URL;\n    return await apiConnector.get(getUrl + \"?exam_id=\" + exam_id).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}