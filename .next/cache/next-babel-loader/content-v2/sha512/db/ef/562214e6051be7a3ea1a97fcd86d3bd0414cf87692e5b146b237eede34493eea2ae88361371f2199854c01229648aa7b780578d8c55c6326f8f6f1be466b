{"ast":null,"code":"import apiConnector from \"./TokenizedApiClient\";\nexport default class CourseService {\n  static async GetAll() {\n    const listUrl = process.env.LIST_COURSE_URL;\n    console.log(listUrl);\n    return await apiConnector.get(listUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Edit(payload) {\n    const editUrl = process.env.EDIT_COURSE_URL;\n    return await apiConnector.post(editUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Get(id) {\n    const detailUrl = process.env.GET_COURSE_URL + `/${id}`;\n    return await apiConnector.get(detailUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n}","map":{"version":3,"sources":["F:/StudentAffairs/students/students/Services/CourseService.ts"],"names":["apiConnector","CourseService","GetAll","listUrl","process","env","LIST_COURSE_URL","console","log","get","then","response","data","success","result","catch","error","Edit","payload","editUrl","EDIT_COURSE_URL","post","Get","id","detailUrl","GET_COURSE_URL"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,sBAAzB;AAGA,eAAe,MAAMC,aAAN,CAAoB;AACjC,eAAaC,MAAb,GAA4C;AAC1C,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,WAAO,MAAMH,YAAY,CACtBS,GADU,CACNN,OADM,EAEVO,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChB,YAAMA,KAAN;AACD,KAVU,CAAb;AAWD;;AAED,eAAaC,IAAb,CAAkBC,OAAlB,EAAiD;AAC/C,UAAMC,OAAO,GAAGf,OAAO,CAACC,GAAR,CAAYe,eAA5B;AACA,WAAO,MAAMpB,YAAY,CACtBqB,IADU,CACLF,OADK,EACID,OADJ,EAEVR,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChB,YAAMA,KAAN;AACD,KAVU,CAAb;AAWD;;AAED,eAAaM,GAAb,CAAiBC,EAAjB,EAAmD;AACjD,UAAMC,SAAS,GAAIpB,OAAO,CAACC,GAAR,CAAYoB,cAAb,GAA0C,IAAGF,EAAG,EAAlE;AACA,WAAO,MAAMvB,YAAY,CACtBS,GADU,CACNe,SADM,EAEVd,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,KAA1B;AACA,YAAMA,KAAN;AACD,KAXU,CAAb;AAYD;;AA9CgC","sourcesContent":["import apiConnector from \"./TokenizedApiClient\";\r\nimport { ApiResponse } from \"../Models/ApiResponse/ApiResponse\";\r\n\r\nexport default class CourseService {\r\n  static async GetAll(): Promise<ApiResponse> {\r\n    const listUrl = process.env.LIST_COURSE_URL as string;\r\n    console.log(listUrl);\r\n    return await apiConnector\r\n      .get(listUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Edit(payload): Promise<ApiResponse> {\r\n    const editUrl = process.env.EDIT_COURSE_URL as string;\r\n    return await apiConnector\r\n      .post(editUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Get(id: string): Promise<ApiResponse> {\r\n    const detailUrl = (process.env.GET_COURSE_URL as string) + `/${id}`;\r\n    return await apiConnector\r\n      .get(detailUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}