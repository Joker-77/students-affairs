{"ast":null,"code":"import apiConnector from \"./TokenizedApiClient\";\nexport default class EduYearService {\n  static async GetYears(searchQuery) {\n    const listUrl = process.env.LIST_EDU_YEARS_URL;\n    return await apiConnector.get(listUrl + \"?search_query=\" + searchQuery).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async InitYears(entity) {\n    const listUrl = process.env.INIT_YEAR_URL;\n    return await apiConnector.post(listUrl, entity).then(response => {\n      if (response && response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async checkYear(entity) {\n    const listUrl = \"/checkyear\";\n    let data = new FormData();\n    data.append(\"year\", entity);\n    return await apiConnector.post(listUrl, data).then(response => {\n      return response;\n    }).catch(error => {\n      throw error; // throw error;\n    });\n  }\n\n}","map":{"version":3,"sources":["F:/StudentAffairs/students/students/Services/EduYearService.tsx"],"names":["apiConnector","EduYearService","GetYears","searchQuery","listUrl","process","env","LIST_EDU_YEARS_URL","get","then","response","data","success","result","catch","error","console","log","InitYears","entity","INIT_YEAR_URL","post","checkYear","FormData","append"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,sBAAzB;AAGA,eAAe,MAAMC,cAAN,CAAqB;AAClC,eAAaC,QAAb,CAAsBC,WAAtB,EAAiE;AAC/D,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,WAAO,MAAMP,YAAY,CACtBQ,GADU,CACNJ,OAAO,GAAG,gBAAV,GAA6BD,WADvB,EAEVM,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACA,YAAMA,KAAN;AACD,KAXU,CAAb;AAYD;;AACD,eAAaG,SAAb,CAAuBC,MAAvB,EAAqD;AACnD,UAAMf,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYc,aAA5B;AACA,WAAO,MAAMpB,YAAY,CACtBqB,IADU,CACLjB,OADK,EACIe,MADJ,EAEVV,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,OAA9B,EAAuC;AACrC,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChB,YAAMA,KAAN;AACD,KAVU,CAAb;AAWD;;AACD,eAAaO,SAAb,CAAuBH,MAAvB,EAAqD;AACnD,UAAMf,OAAO,GAAG,YAAhB;AACA,QAAIO,IAAI,GAAG,IAAIY,QAAJ,EAAX;AACAZ,IAAAA,IAAI,CAACa,MAAL,CAAY,MAAZ,EAAoBL,MAApB;AACA,WAAO,MAAMnB,YAAY,CACtBqB,IADU,CACLjB,OADK,EACIO,IADJ,EAEVF,IAFU,CAEJC,QAAD,IAAc;AAClB,aAAOA,QAAP;AACD,KAJU,EAKVI,KALU,CAKHC,KAAD,IAAW;AAChB,YAAMA,KAAN,CADgB,CAEhB;AACD,KARU,CAAb;AASD;;AA3CiC","sourcesContent":["import apiConnector from \"./TokenizedApiClient\";\r\nimport { ApiResponse } from \"../Models/ApiResponse/ApiResponse\";\r\n\r\nexport default class EduYearService {\r\n  static async GetYears(searchQuery: string): Promise<ApiResponse> {\r\n    const listUrl = process.env.LIST_EDU_YEARS_URL as string;\r\n    return await apiConnector\r\n      .get(listUrl + \"?search_query=\" + searchQuery)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n  static async InitYears(entity): Promise<ApiResponse> {\r\n    const listUrl = process.env.INIT_YEAR_URL as string;\r\n    return await apiConnector\r\n      .post(listUrl, entity)\r\n      .then((response) => {\r\n        if (response && response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n  static async checkYear(entity): Promise<ApiResponse> {\r\n    const listUrl = \"/checkyear\" as string;\r\n    let data = new FormData();\r\n    data.append(\"year\", entity);\r\n    return await apiConnector\r\n      .post(listUrl, data)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n        // throw error;\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}