{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Admin from \"../../../layouts/Admin\";\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../components/Grid/GridItem.js\";\nimport Card from \"../../../components/Card/Card.js\";\nimport CardHeader from \"../../../components/Card/CardHeader.js\";\nimport CardBody from \"../../../components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { TextField, Button, Grid } from \"@material-ui/core\";\nimport Privilege from \"../../../components/Privilege/Privilege\";\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from \"react-beautiful-dnd\";\n\nfunction UsersManagement() {\n  resetServerContext();\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n  var sysOpts = [{\n    id: \"1\",\n    name: \"Accepted Students\",\n    permissions: [{\n      id: 1,\n      name: \"Read Only\"\n    }, {\n      id: 2,\n      name: \"Write & Read\"\n    }],\n    selectedPermission: 1\n  }, {\n    id: \"2\",\n    name: \"Another One\",\n    permissions: [{\n      id: 1,\n      name: \"Read Only\"\n    }, {\n      id: 2,\n      name: \"Write & Read\"\n    }],\n    selectedPermission: 1\n  }, {\n    id: \"3\",\n    name: \"Another One 1\",\n    permissions: [{\n      id: 1,\n      name: \"Read Only\"\n    }, {\n      id: 2,\n      name: \"Write & Read\"\n    }],\n    selectedPermission: 1\n  }];\n  var privilegeStatus = {\n    system: {\n      type: 1,\n      name: \"System Permissions\",\n      items: sysOpts\n    },\n    user: {\n      type: 2,\n      name: \"User Permissions\",\n      items: []\n    }\n  };\n\n  var changePermissionType = function changePermissionType(id, val, type) {\n    var _item = columns.system.items.find(function (e) {\n      return e.id == id.toString();\n    });\n\n    if (!!_item) {\n      var _console$log, _setColumns;\n\n      var _sysOpts = columns.system;\n      _item = _sysOpts.items.find(function (e) {\n        return e.id == id.toString();\n      });\n\n      var itemIndex = _sysOpts.items.indexOf(_item);\n\n      console.log(itemIndex, _item);\n      _item.selectedPermission = parseInt(val);\n      _sysOpts.items[itemIndex] = _item;\n      console.log(\"result\", (_console$log = {}, _defineProperty(_console$log, \"system\", _sysOpts), _defineProperty(_console$log, \"user\", columns.user), _console$log));\n      setColumns((_setColumns = {}, _defineProperty(_setColumns, \"system\", _sysOpts), _defineProperty(_setColumns, \"user\", columns.user), _setColumns));\n    } else {\n      var _console$log2, _setColumns2;\n\n      var item = columns.user.items.find(function (e) {\n        return e.id == id.toString();\n      });\n      var _userPrivlgs = columns.user;\n\n      var _itemIndex = _userPrivlgs.items.indexOf(item);\n\n      item.selectedPermission = parseInt(val);\n      _userPrivlgs.items[_itemIndex] = item;\n      console.log(\"result\", (_console$log2 = {}, _defineProperty(_console$log2, \"system\", columns.system), _defineProperty(_console$log2, \"user\", _userPrivlgs), _console$log2));\n      setColumns((_setColumns2 = {}, _defineProperty(_setColumns2, \"system\", columns.system), _defineProperty(_setColumns2, \"user\", _userPrivlgs), _setColumns2));\n    }\n  };\n\n  var _onDragEnd = function onDragEnd(result, columns, setColumns) {\n    console.log(result, columns);\n    if (!result.destination) return;\n    var source = result.source,\n        destination = result.destination;\n\n    if (source.droppableId !== destination.droppableId) {\n      var _objectSpread2;\n\n      var sourceColumn = columns[source.droppableId];\n      var destColumn = columns[destination.droppableId];\n\n      var sourceItems = _toConsumableArray(sourceColumn.items);\n\n      var destItems = _toConsumableArray(destColumn.items);\n\n      var _sourceItems$splice = sourceItems.splice(source.index, 1),\n          _sourceItems$splice2 = _slicedToArray(_sourceItems$splice, 1),\n          removed = _sourceItems$splice2[0];\n\n      destItems.splice(destination.index, 0, removed);\n      setColumns(_objectSpread(_objectSpread({}, columns), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, source.droppableId, _objectSpread(_objectSpread({}, sourceColumn), {}, {\n        items: sourceItems\n      })), _defineProperty(_objectSpread2, destination.droppableId, _objectSpread(_objectSpread({}, destColumn), {}, {\n        items: destItems\n      })), _objectSpread2)));\n    } else {\n      var column = columns[source.droppableId];\n\n      var copiedItems = _toConsumableArray(column.items);\n\n      var _copiedItems$splice = copiedItems.splice(source.index, 1),\n          _copiedItems$splice2 = _slicedToArray(_copiedItems$splice, 1),\n          _removed = _copiedItems$splice2[0];\n\n      copiedItems.splice(destination.index, 0, _removed);\n      setColumns(_objectSpread(_objectSpread({}, columns), {}, _defineProperty({}, source.droppableId, _objectSpread(_objectSpread({}, column), {}, {\n        items: copiedItems\n      }))));\n    }\n  };\n\n  var _useState = useState(privilegeStatus),\n      columns = _useState[0],\n      setColumns = _useState[1];\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(GridContainer, {\n      children: /*#__PURE__*/_jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxs(Card, {\n          children: [/*#__PURE__*/_jsx(CardHeader, {\n            color: \"primary\",\n            children: /*#__PURE__*/_jsx(\"h4\", {\n              className: classes.cardTitleWhite,\n              children: \"Users Definitions\"\n            })\n          }), /*#__PURE__*/_jsx(CardBody, {\n            children: /*#__PURE__*/_jsxs(GridContainer, {\n              children: [/*#__PURE__*/_jsx(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsx(TextField //onChange={handleChange}\n                , {\n                  required: true,\n                  label: \"Username\",\n                  variant: \"standard\",\n                  size: \"small\",\n                  type: \"email\",\n                  id: \"email\",\n                  name: \"email\",\n                  className: classes.textField //   value={values.email}\n                  //   onBlur={handleBlur}\n                  //   error={Boolean(touched.email && errors.email)}\n                  //   helperText={touched.email && errors.email}\n                  //   placeholder=\"example@hiast.edu.sy\"\n                  //   fullWidth\n\n                })\n              }), /*#__PURE__*/_jsx(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsx(TextField //onChange={handleChange}\n                , {\n                  required: true,\n                  label: \"Password\",\n                  variant: \"standard\",\n                  size: \"small\",\n                  type: \"password\",\n                  id: \"password\",\n                  name: \"password\",\n                  className: classes.textField //   value={values.email}\n                  //   onBlur={handleBlur}\n                  //   error={Boolean(touched.email && errors.email)}\n                  //   helperText={touched.email && errors.email}\n                  //   placeholder=\"example@hiast.edu.sy\"\n                  //   fullWidth\n\n                })\n              }), /*#__PURE__*/_jsx(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsx(TextField //onChange={handleChange}\n                , {\n                  required: true,\n                  label: \"Confirm Password\",\n                  variant: \"standard\",\n                  size: \"small\",\n                  type: \"password\",\n                  id: \"confirm-password\",\n                  name: \"confirmPassword\",\n                  className: classes.textField //   value={values.email}\n                  //   onBlur={handleBlur}\n                  //   error={Boolean(touched.email && errors.email)}\n                  //   helperText={touched.email && errors.email}\n                  //   placeholder=\"example@hiast.edu.sy\"\n                  //   fullWidth\n\n                })\n              }), /*#__PURE__*/_jsx(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 2,\n                style: {\n                  marginTop: \".5em\"\n                },\n                children: /*#__PURE__*/_jsx(Button, {\n                  disabled: false,\n                  variant: \"contained\",\n                  className: classes.submitBtn,\n                  fullWidth: true,\n                  children: \"Submit\"\n                })\n              })]\n            })\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsx(DragDropContext, {\n      onDragEnd: function onDragEnd(result) {\n        return _onDragEnd(result, columns, setColumns);\n      },\n      children: /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        xs: 12,\n        md: 12,\n        sm: 12,\n        children: Object.entries(columns).map(function (_ref, index) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              columnId = _ref2[0],\n              column = _ref2[1];\n\n          console.log(\"idddd\", columnId);\n          return /*#__PURE__*/_jsx(Grid, {\n            md: 6,\n            xs: 12,\n            sm: 12,\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxs(Card, {\n              children: [/*#__PURE__*/_jsx(CardHeader, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsx(\"h4\", {\n                  className: classes.cardTitleWhite,\n                  children: column.name\n                })\n              }), /*#__PURE__*/_jsxs(CardBody, {\n                children: [/*#__PURE__*/_jsxs(Grid, {\n                  container: true,\n                  md: 12,\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    md: 8,\n                    children: \"System Options\"\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    md: 4,\n                    children: \"Permission Type\"\n                  })]\n                }), /*#__PURE__*/_jsx(Droppable, {\n                  droppableId: columnId,\n                  children: function children(provided, snapshot) {\n                    return /*#__PURE__*/_jsxs(Grid, _objectSpread(_objectSpread({\n                      md: 12,\n                      container: true\n                    }, provided.droppableProps), {}, {\n                      ref: provided.innerRef,\n                      style: {\n                        background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\",\n                        padding: 4\n                      },\n                      children: [column.items.map(function (item, index) {\n                        return /*#__PURE__*/_jsx(Draggable, {\n                          draggableId: item.id,\n                          index: index,\n                          children: function children(provided, snapshot) {\n                            return /*#__PURE__*/_jsx(Grid, _objectSpread(_objectSpread(_objectSpread({\n                              md: 12,\n                              ref: provided.innerRef\n                            }, provided.draggableProps), provided.dragHandleProps), {}, {\n                              style: _objectSpread({\n                                userSelect: \"none\",\n                                margin: \"3px 0 3px 0\",\n                                borderRadius: \"12px\",\n                                backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#456C86\",\n                                color: \"white\"\n                              }, provided.draggableProps.style),\n                              children: /*#__PURE__*/_jsx(Privilege, {\n                                id: item.id,\n                                index: index,\n                                name: item.name,\n                                permissions: item.permissions,\n                                selectedPermission: item.selectedPermission,\n                                type: column.type,\n                                changePermissionType: changePermissionType\n                              }, item.id)\n                            }));\n                          }\n                        }, item.id);\n                      }), provided.placeholder]\n                    }));\n                  }\n                }, columnId)]\n              })]\n            })\n          }, columnId);\n        })\n      })\n    })]\n  });\n}\n\nUsersManagement.layout = Admin;\nUsersManagement.auth = false;\nexport default UsersManagement;","map":null,"metadata":{},"sourceType":"module"}