{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useMemo, useState } from \"react\";\nimport Admin from \"../../../../layouts/Admin\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport * as yup from \"yup\";\nimport { FieldArray, Form, Formik, ErrorMessage } from \"formik\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { toast } from \"react-toastify\";\nimport CourseService from \"../../../../Services/CourseService\";\nimport { useRouter } from \"next/router\";\nimport { Add, ArrowBack, AttachFile, CloudDownload } from \"@material-ui/icons\";\nimport Card from \"../../../../components/Card/Card\";\nimport { Box, CardActions, Divider, Grid, MenuItem, TextField, Typography } from \"@material-ui/core\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\n\nconst CourseDetail = ({\n  isCreate,\n  details,\n  isEditable,\n  handleBack,\n  activateEdit\n}) => {\n  var _course$current_descr, _course$current_descr2, _course$current_descr3, _course$current_descr4, _course$current_descr5, _course$current_descr6, _course$current_descr7, _course$current_descr8, _course$current_descr9, _course$current_descr10, _course$current_descr11, _course$current_descr12, _course$current_descr13, _course$current_descr14, _course$current_descr15, _course$current_descr16, _course$current_descr17, _course$current_descr18, _course$current_descr19, _course$current_descr20, _course$current_descr21, _course$current_descr22, _course$current_descr23, _course$current_descr24, _course$current_descr25, _course$current_descr26, _course$current_descr27;\n\n  console.clear();\n  console.log(details);\n  const methodTypes = [{\n    name: \"مذاكرة\"\n  }, {\n    name: \"أعمال\"\n  }, {\n    name: \"امتحان\"\n  }, {\n    name: \"آخر\"\n  }];\n  const router = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const {\n    0: course,\n    1: setDetails\n  } = useState(details);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState(course === null || course === void 0 ? void 0 : (_course$current_descr = course.current_description) === null || _course$current_descr === void 0 ? void 0 : _course$current_descr.attachement);\n  const {\n    0: addDescription,\n    1: setAddDescription\n  } = useState(isCreate);\n  let courseSchema = isCreate ? yup.object({\n    en_name: yup.string(translate(\"English Name\")).required(translate(\"Field is required\")),\n    ar_name: yup.string(translate(\"Arabic Name\")).required(translate(\"Field is required\")),\n    fr_name: yup.string(translate(\"French Name\")).required(translate(\"Field is required\")),\n    code: yup.string(translate(\"Course Code\")).required(translate(\"Field is required\")),\n    theoretical_hours: yup.number(\"Theoretical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    practical_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    mixed_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    evaluation_methods: yup.array().of(yup.object().shape({\n      name: yup.string(),\n      percentage: yup.number().min(0, translate(\"Field must be greater than 0\")).max(100, translate(\"Field must be less than 100\")).transform(value => isNaN(value) ? undefined : value).required(\"Percentage is required\")\n    })).min(1, translate(\"Need at least one evaluation method\")).test(methods => {\n      const sum = methods === null || methods === void 0 ? void 0 : methods.reduce((acc, curr) => acc + curr.percentage, 0);\n\n      if (sum != 100) {\n        isNaN(sum) ? setErrorPercentageMsg(translate(\"Percentage should be 100%, but you have:\") + \"0%\") : setErrorPercentageMsg(translate(\"Percentage should be 100%, but you have:\") + sum + \"%\");\n        return new yup.ValidationError(translate(`Percentage should be 100%, but you have ${sum}%`, undefined, translate(\"Evaluation Methods\")));\n      } else {\n        setErrorPercentageMsg(\"\");\n        return true;\n      }\n    }),\n    attachement: yup.mixed().required(translate(\"Need an attachement for this course\"))\n  }) : yup.object({\n    en_name: yup.string(translate(\"English Name\")).required(translate(\"Field is required\")),\n    ar_name: yup.string(translate(\"Arabic Name\")).required(translate(\"Field is required\")),\n    fr_name: yup.string(translate(\"French Name\")).required(translate(\"Field is required\")),\n    code: yup.string(translate(\"Course Code\")).required(translate(\"Field is required\")),\n    attachement: yup.mixed().required(translate(\"Need an attachement for this course\"))\n  });\n  let initialValues = isCreate ? {\n    en_name: course === null || course === void 0 ? void 0 : course.en_name,\n    ar_name: course === null || course === void 0 ? void 0 : course.ar_name,\n    fr_name: course === null || course === void 0 ? void 0 : course.fr_name,\n    code: course === null || course === void 0 ? void 0 : course.code,\n    credit: course === null || course === void 0 ? void 0 : (_course$current_descr2 = course.current_description) === null || _course$current_descr2 === void 0 ? void 0 : _course$current_descr2.credit,\n    theoretical_hours: course === null || course === void 0 ? void 0 : (_course$current_descr3 = course.current_description) === null || _course$current_descr3 === void 0 ? void 0 : (_course$current_descr4 = _course$current_descr3.hours) === null || _course$current_descr4 === void 0 ? void 0 : (_course$current_descr5 = _course$current_descr4.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"theoretic\")) === null || _course$current_descr5 === void 0 ? void 0 : _course$current_descr5.hours,\n    practical_hours: course === null || course === void 0 ? void 0 : (_course$current_descr6 = course.current_description) === null || _course$current_descr6 === void 0 ? void 0 : (_course$current_descr7 = _course$current_descr6.hours) === null || _course$current_descr7 === void 0 ? void 0 : (_course$current_descr8 = _course$current_descr7.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"practical\")) === null || _course$current_descr8 === void 0 ? void 0 : _course$current_descr8.hours,\n    mixed_hours: course === null || course === void 0 ? void 0 : (_course$current_descr9 = course.current_description) === null || _course$current_descr9 === void 0 ? void 0 : (_course$current_descr10 = _course$current_descr9.hours) === null || _course$current_descr10 === void 0 ? void 0 : (_course$current_descr11 = _course$current_descr10.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"mixed\")) === null || _course$current_descr11 === void 0 ? void 0 : _course$current_descr11.hours,\n    evaluation_methods: course === null || course === void 0 ? void 0 : (_course$current_descr12 = course.current_description) === null || _course$current_descr12 === void 0 ? void 0 : (_course$current_descr13 = _course$current_descr12.evaluation_methods) === null || _course$current_descr13 === void 0 ? void 0 : _course$current_descr13.map((ev, idx) => {\n      return {\n        id: ev.id,\n        name: ev.name,\n        percentage: ev.percentage\n      };\n    }),\n    attachement: course === null || course === void 0 ? void 0 : (_course$current_descr14 = course.current_description) === null || _course$current_descr14 === void 0 ? void 0 : _course$current_descr14.attachement\n  } : {\n    id: course.id,\n    en_name: course.en_name,\n    ar_name: course.ar_name,\n    fr_name: course.fr_name,\n    code: course.code,\n    credit: course === null || course === void 0 ? void 0 : (_course$current_descr15 = course.current_description) === null || _course$current_descr15 === void 0 ? void 0 : _course$current_descr15.credit,\n    theoretical_hours: course === null || course === void 0 ? void 0 : (_course$current_descr16 = course.current_description) === null || _course$current_descr16 === void 0 ? void 0 : (_course$current_descr17 = _course$current_descr16.hours) === null || _course$current_descr17 === void 0 ? void 0 : (_course$current_descr18 = _course$current_descr17.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"theoretic\")) === null || _course$current_descr18 === void 0 ? void 0 : _course$current_descr18.hours,\n    practical_hours: course === null || course === void 0 ? void 0 : (_course$current_descr19 = course.current_description) === null || _course$current_descr19 === void 0 ? void 0 : (_course$current_descr20 = _course$current_descr19.hours) === null || _course$current_descr20 === void 0 ? void 0 : (_course$current_descr21 = _course$current_descr20.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"practical\")) === null || _course$current_descr21 === void 0 ? void 0 : _course$current_descr21.hours,\n    mixed_hours: course === null || course === void 0 ? void 0 : (_course$current_descr22 = course.current_description) === null || _course$current_descr22 === void 0 ? void 0 : (_course$current_descr23 = _course$current_descr22.hours) === null || _course$current_descr23 === void 0 ? void 0 : (_course$current_descr24 = _course$current_descr23.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"mixed\")) === null || _course$current_descr24 === void 0 ? void 0 : _course$current_descr24.hours,\n    evaluation_methods: course === null || course === void 0 ? void 0 : (_course$current_descr25 = course.current_description) === null || _course$current_descr25 === void 0 ? void 0 : (_course$current_descr26 = _course$current_descr25.evaluation_methods) === null || _course$current_descr26 === void 0 ? void 0 : _course$current_descr26.map((ev, idx) => {\n      return {\n        id: ev.id,\n        name: ev.name,\n        percentage: ev.percentage\n      };\n    }),\n    attachement: course === null || course === void 0 ? void 0 : (_course$current_descr27 = course.current_description) === null || _course$current_descr27 === void 0 ? void 0 : _course$current_descr27.attachement\n  };\n  /************************* Handle Edit Course ************/\n\n  const handleEditCourse = event => {\n    event.preventDefault();\n    activateEdit();\n  };\n  /************************* Handle Add Description ************/\n\n\n  const validationSchema = useMemo(() => {\n    if (addDescription) {\n      courseSchema = yup.object({\n        en_name: yup.string(translate(\"English Name\")).required(translate(\"Field is required\")),\n        ar_name: yup.string(translate(\"Arabic Name\")).required(translate(\"Field is required\")),\n        fr_name: yup.string(translate(\"French Name\")).required(translate(\"Field is required\")),\n        code: yup.string(translate(\"Course Code\")).required(translate(\"Field is required\")),\n        theoretical_hours: yup.number(\"Theoretical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n        practical_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n        mixed_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n        credit: yup.number(\"Credit Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n        evaluation_methods: yup.array().of(yup.object().shape({\n          name: yup.string(),\n          percentage: yup.number().min(0, translate(\"Field must be greater than 0\")).max(100, translate(\"Field must be less than 100\")).transform(value => isNaN(value) ? undefined : value).required(\"Percentage is required\")\n        })).min(1, translate(\"Need at least one evaluation method\")).test(methods => {\n          const sum = methods === null || methods === void 0 ? void 0 : methods.reduce((acc, curr) => acc + curr.percentage, 0);\n\n          if (sum != 100) {\n            isNaN(sum) ? setErrorPercentageMsg(translate(\"Percentage should be 100%, but you have:\") + \"0%\") : setErrorPercentageMsg(translate(\"Percentage should be 100%, but you have:\") + sum + \"%\");\n            return new yup.ValidationError(translate(`Percentage should be 100%, but you have ${sum}%`, undefined, translate(\"Evaluation Methods\")));\n          } else {\n            setErrorPercentageMsg(\"\");\n            return true;\n          }\n        }),\n        attachement: yup.mixed() // .required(translate(\"Need an attachement for this course\")),\n\n      });\n    } else {\n      courseSchema = yup.object({\n        en_name: yup.string(translate(\"English Name\")).required(translate(\"Field is required\")),\n        ar_name: yup.string(translate(\"Arabic Name\")).required(translate(\"Field is required\")),\n        fr_name: yup.string(translate(\"French Name\")).required(translate(\"Field is required\")),\n        code: yup.string(translate(\"Course Code\")).required(translate(\"Field is required\")),\n        attachement: yup.mixed() // .required(translate(\"Need an attachement for this course\")),\n\n      });\n    }\n\n    return courseSchema;\n  }, [addDescription]);\n\n  const handleActivateAddDesc = event => {\n    event.preventDefault();\n    setAddDescription(!addDescription);\n\n    if (addDescription) {\n      var _course$current_descr28, _course$current_descr29, _course$current_descr30, _course$current_descr31, _course$current_descr32, _course$current_descr33, _course$current_descr34, _course$current_descr35, _course$current_descr36, _course$current_descr37, _course$current_descr38, _course$current_descr39, _course$current_descr40;\n\n      initialValues = {\n        en_name: course === null || course === void 0 ? void 0 : course.en_name,\n        ar_name: course === null || course === void 0 ? void 0 : course.ar_name,\n        fr_name: course === null || course === void 0 ? void 0 : course.fr_name,\n        code: course === null || course === void 0 ? void 0 : course.code,\n        credit: course === null || course === void 0 ? void 0 : (_course$current_descr28 = course.current_description) === null || _course$current_descr28 === void 0 ? void 0 : _course$current_descr28.credit,\n        theoretical_hours: course === null || course === void 0 ? void 0 : (_course$current_descr29 = course.current_description) === null || _course$current_descr29 === void 0 ? void 0 : (_course$current_descr30 = _course$current_descr29.hours) === null || _course$current_descr30 === void 0 ? void 0 : (_course$current_descr31 = _course$current_descr30.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"theoretic\")) === null || _course$current_descr31 === void 0 ? void 0 : _course$current_descr31.hours,\n        practical_hours: course === null || course === void 0 ? void 0 : (_course$current_descr32 = course.current_description) === null || _course$current_descr32 === void 0 ? void 0 : (_course$current_descr33 = _course$current_descr32.hours) === null || _course$current_descr33 === void 0 ? void 0 : (_course$current_descr34 = _course$current_descr33.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"practical\")) === null || _course$current_descr34 === void 0 ? void 0 : _course$current_descr34.hours,\n        mixed_hours: course === null || course === void 0 ? void 0 : (_course$current_descr35 = course.current_description) === null || _course$current_descr35 === void 0 ? void 0 : (_course$current_descr36 = _course$current_descr35.hours) === null || _course$current_descr36 === void 0 ? void 0 : (_course$current_descr37 = _course$current_descr36.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"mixed\")) === null || _course$current_descr37 === void 0 ? void 0 : _course$current_descr37.hours,\n        evaluation_methods: course === null || course === void 0 ? void 0 : (_course$current_descr38 = course.current_description) === null || _course$current_descr38 === void 0 ? void 0 : (_course$current_descr39 = _course$current_descr38.evaluation_methods) === null || _course$current_descr39 === void 0 ? void 0 : _course$current_descr39.map((ev, idx) => {\n          return {\n            id: ev.id,\n            name: ev.name,\n            percentage: ev.percentage * 100\n          };\n        }),\n        attachement: course === null || course === void 0 ? void 0 : (_course$current_descr40 = course.current_description) === null || _course$current_descr40 === void 0 ? void 0 : _course$current_descr40.attachement\n      };\n    } else {\n      var _course$current_descr41;\n\n      initialValues = {\n        id: course.id,\n        en_name: course.en_name,\n        ar_name: course.ar_name,\n        fr_name: course.fr_name,\n        code: course.code,\n        attachement: course === null || course === void 0 ? void 0 : (_course$current_descr41 = course.current_description) === null || _course$current_descr41 === void 0 ? void 0 : _course$current_descr41.attachement\n      };\n    }\n  };\n  /*************** Handle End Add Description For Course ******/\n\n\n  const {\n    0: errorPercentageMsg,\n    1: setErrorPercentageMsg\n  } = useState(\"\");\n\n  const submitForm = (values, setSubmitting) => {\n    if (isCreate) {\n      const payload = {\n        en_name: values.en_name,\n        fr_name: values.fr_name,\n        ar_name: values.ar_name,\n        code: values.code,\n        credit: values.credit,\n        theoretic_hours: values.theoretical_hours,\n        practical_hours: values.practical_hours,\n        mixed_hours: values.mixed_hours,\n        evaluation_methods: values.evaluation_methods\n      };\n      console.clear();\n      const isFile = hiddenInput.current.value != \"\";\n      if (isFile) payload.attachement = values.attachement;\n      console.log(payload);\n      CourseService.Add(payload).then(response => {\n        if (response.success) {\n          toast.success(\"Course Added Successfully\");\n          handleBack();\n        } else {\n          console.log(response.error);\n          toast.error(response.error.message);\n        }\n      }).catch(error => {\n        console.log(error.message);\n        toast.error(error.message);\n        throw new Error(error);\n      });\n    } else if (addDescription) {\n      console.clear();\n      console.log(\"add desc info\");\n      const payload = {\n        course_id: course.id,\n        credit: values.credit,\n        theoretic_hours: values.theoretical_hours,\n        practical_hours: values.practical_hours,\n        mixed_hours: values.mixed_hours,\n        evaluation_methods: values.evaluation_methods.map(e => {\n          return {\n            name: e.name,\n            percentage: e.percentage\n          };\n        })\n      };\n      const isFile = hiddenInput.current.value != \"\";\n      if (isFile) payload.attachement = values.attachement;\n      console.log(payload);\n      CourseService.AddDesc(payload).then(response => {\n        if (response.success) {\n          toast.success(\"Description Added Successfully\");\n        } else {\n          console.log(response.error);\n          toast.error(response.error.message);\n        }\n      }).catch(error => {\n        console.log(error.message);\n        toast.error(error.message); // throw new Error(error);\n      });\n    } else {\n      const payload = {\n        id: course.id,\n        en_name: values.en_name,\n        ar_name: values.ar_name,\n        fr_name: values.fr_name,\n        code: values.code\n      };\n      const isFile = hiddenInput.current.value != \"\";\n      if (isFile) payload.attachement = values.attachement;\n      console.log(payload);\n      CourseService.Edit(payload).then(response => {\n        if (response.success) {\n          toast.success(\"Courses Edited Successfully\");\n        } else {\n          console.log(response.error);\n          toast.error(response.error.message);\n        }\n      }).catch(error => {\n        console.log(error.message);\n        toast.error(error.message);\n        throw new Error(error);\n      });\n    }\n\n    setSubmitting(false); // CourseService.Add(payload)\n    //   .then(() => {})\n    //   .catch((e) => console.error(e));\n  };\n\n  const hiddenInput = React.useRef(null);\n\n  const handleClick = event => {\n    var _hiddenInput$current;\n\n    (_hiddenInput$current = hiddenInput.current) === null || _hiddenInput$current === void 0 ? void 0 : _hiddenInput$current.click();\n  };\n\n  const {\n    0: changed,\n    1: setChanged\n  } = useState(false);\n\n  const convertToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      setFileName(file === null || file === void 0 ? void 0 : file.name);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const handleFile = async (e, setFieldValue) => {\n    const file = e.target.files[0];\n    setChanged(true); //check the size of image\n\n    if ((file === null || file === void 0 ? void 0 : file.size) / 1024 / 1024 < 2) {\n      const base64 = await convertToBase64(file);\n      setFieldValue(\"attachement\", base64);\n    } else {\n      toast.error(\"File size must be of 5MB or less\");\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Grid, {\n    container: true,\n    md: 12,\n    sm: 12,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      md: 12,\n      sm: 12,\n      xs: 12,\n      children: [/*#__PURE__*/_jsx(Card, {\n        style: {\n          padding: \"1em 4em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxs(GridItem, {\n            item: true,\n            md: 9,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsx(Typography, {\n              variant: \"h5\",\n              component: \"div\"\n            }), /*#__PURE__*/_jsx(Typography, {\n              sx: {\n                mb: 1.5\n              },\n              color: \"text.secondary\",\n              children: translate(\"Course Details\")\n            })]\n          }), /*#__PURE__*/_jsx(GridItem, {\n            md: 3,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxs(SuiButton, {\n              onClick: () => handleBack(),\n              color: \"warning\",\n              children: [/*#__PURE__*/_jsx(ArrowBack, {}), translate(\"Back To Previous Page\")]\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Card, {\n        style: {\n          padding: \"3em 3em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsx(Formik, {\n          enableReinitialize: true,\n          initialValues: initialValues,\n          validationSchema: validationSchema,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting); // console.clear();\n            // console.log(values);\n          },\n          children: formik => {\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty,\n              setFieldValue\n            } = formik;\n            return /*#__PURE__*/_jsxs(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  container: true,\n                  md: 12,\n                  style: {\n                    margin: \"1em 0em\",\n                    color: \"red\",\n                    display: errors && // 👈 null and undefined check\n                    Object.keys(errors).length === 0 && Object.getPrototypeOf(errors) === Object.prototype ? \"none\" : \"block\"\n                  }\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsx(GridItem, {\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !(isEditable || addDescription),\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"ar_name\",\n                      name: \"ar_name\",\n                      value: values.ar_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.ar_name && errors.ar_name),\n                      helperText: touched.ar_name && errors.ar_name,\n                      placeholder: translate(\"Arabic Name\"),\n                      label: translate(\"Arabic Name\"),\n                      fullWidth: true\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsx(GridItem, {\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !(isEditable || addDescription),\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"en_name\",\n                      name: \"en_name\",\n                      value: values.en_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.en_name && errors.en_name),\n                      helperText: touched.en_name && errors.en_name,\n                      placeholder: translate(\"English Name\"),\n                      label: translate(\"English Name\"),\n                      fullWidth: true\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsx(GridItem, {\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !(isEditable || addDescription),\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"fr_name\",\n                      name: \"fr_name\",\n                      value: values.fr_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.fr_name && errors.fr_name),\n                      helperText: touched.fr_name && errors.fr_name,\n                      placeholder: translate(\"French Name\"),\n                      label: translate(\"French Name\"),\n                      fullWidth: true\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsx(GridItem, {\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !(isEditable || addDescription),\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"code\",\n                      name: \"code\",\n                      value: values.code,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.code && errors.code),\n                      helperText: touched.code && errors.code,\n                      placeholder: translate(\"Course Code\"),\n                      label: translate(\"Course Code\"),\n                      fullWidth: true\n                    })\n                  })\n                })]\n              }), (isCreate || addDescription) && /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsx(GridItem, {\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"theoretical_hours\",\n                      name: \"theoretical_hours\",\n                      value: values.theoretical_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.theoretical_hours && errors.theoretical_hours),\n                      helperText: touched.theoretical_hours && errors.theoretical_hours,\n                      placeholder: translate(\"Theoretical Hours\"),\n                      label: translate(\"Theoretical Hours\"),\n                      fullWidth: true\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsx(GridItem, {\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"practical_hours\",\n                      name: \"practical_hours\",\n                      value: values.practical_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.practical_hours && errors.practical_hours),\n                      helperText: touched.practical_hours && errors.practical_hours,\n                      placeholder: translate(\"Practical Hours\"),\n                      label: translate(\"Practical Hours\"),\n                      fullWidth: true\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsx(GridItem, {\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"mixed_hours\",\n                      name: \"mixed_hours\",\n                      value: values.mixed_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.mixed_hours && errors.mixed_hours),\n                      helperText: touched.mixed_hours && errors.mixed_hours,\n                      placeholder: translate(\"Mixed Hours\"),\n                      label: translate(\"Mixed Hours\"),\n                      fullWidth: true\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsx(GridItem, {\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"credit\",\n                      name: \"credit\",\n                      value: values.credit,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.credit && errors.credit),\n                      helperText: touched.credit && errors.credit,\n                      placeholder: translate(\"Number of accredited hours\"),\n                      label: translate(\"Number of accredited hours\"),\n                      fullWidth: true\n                    })\n                  })\n                })]\n              }), /*#__PURE__*/_jsx(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3\n                })\n              }), /*#__PURE__*/_jsx(Divider, {\n                style: {\n                  margin: \"2em 0em\"\n                }\n              }), (isCreate || addDescription) && /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(Box, {\n                  mb: 1,\n                  ml: 0.5,\n                  children: /*#__PURE__*/_jsx(Typography, {\n                    component: \"label\",\n                    variant: \"caption\",\n                    children: /*#__PURE__*/_jsx(\"h5\", {\n                      children: translate(\"Evaluations Method\")\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Box, {\n                  my: 1,\n                  children: /*#__PURE__*/_jsx(Typography, {\n                    component: \"label\",\n                    variant: \"caption\",\n                    children: errorPercentageMsg && /*#__PURE__*/_jsx(\"label\", {\n                      style: {\n                        color: \"rgb(234, 6, 6)\"\n                      },\n                      children: errorPercentageMsg\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(FieldArray, {\n                  name: \"evaluation_methods\",\n                  render: arrayHelpers => /*#__PURE__*/_jsx(\"div\", {\n                    children: values !== null && values !== void 0 && values.evaluation_methods && (values === null || values === void 0 ? void 0 : values.evaluation_methods.length) > 0 ? values === null || values === void 0 ? void 0 : values.evaluation_methods.map((method, index) => /*#__PURE__*/_jsx(\"div\", {\n                      children: /*#__PURE__*/_jsxs(Grid, {\n                        container: true,\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsx(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: /*#__PURE__*/_jsx(TextField, {\n                            disabled: !isEditable,\n                            variant: \"outlined\",\n                            size: \"small\",\n                            type: \"select\",\n                            id: `evaluation_methods.${index}.name`,\n                            name: `evaluation_methods.${index}.name`,\n                            select: true,\n                            value: method.name,\n                            onChange: handleChange(`evaluation_methods.${index}.name`),\n                            onBlur: handleBlur,\n                            fullWidth: true,\n                            children: methodTypes === null || methodTypes === void 0 ? void 0 : methodTypes.map(type => /*#__PURE__*/_jsx(MenuItem, {\n                              value: type.name,\n                              children: type.name\n                            }, type.name))\n                          })\n                        }), /*#__PURE__*/_jsxs(Grid, {\n                          item: true,\n                          xs: 4,\n                          style: {\n                            display: \"flex\",\n                            flexDirection: \"column\"\n                          },\n                          children: [/*#__PURE__*/_jsx(TextField, {\n                            disabled: !isEditable,\n                            onChange: handleChange(`evaluation_methods.${index}.percentage`),\n                            variant: \"outlined\",\n                            size: \"small\",\n                            type: \"number\",\n                            id: `$evaluation_methods.${index}.percentage`,\n                            name: `evaluation_methods.${index}.percentage`,\n                            value: method.percentage,\n                            onBlur: handleBlur,\n                            error: Boolean(errors && errors.evaluation_methods && errors.evaluation_methods[index] && errors.evaluation_methods[index].percentage && touched && touched.evaluation_methods && touched.evaluation_methods[index] && touched.evaluation_methods[index].percentage),\n                            helperText: errors && errors.evaluation_methods && errors.evaluation_methods[index] && errors.evaluation_methods[index].percentage && touched && touched.evaluation_methods && touched.evaluation_methods[index] && touched.evaluation_methods[index].percentage,\n                            placeholder: translate(\"Percentage\") //fullWidth\n\n                          }), /*#__PURE__*/_jsx(\"label\", {\n                            style: {\n                              color: \"rgb(234, 6, 6)\"\n                            },\n                            children: /*#__PURE__*/_jsx(ErrorMessage, {\n                              name: `evaluation_methods.${index}.percentage`\n                            })\n                          })]\n                        }), /*#__PURE__*/_jsxs(Grid, {\n                          item: true,\n                          xs: 4,\n                          style: {\n                            display: isEditable ? \"\" : \"none\"\n                          },\n                          children: [/*#__PURE__*/_jsx(SuiButton, {\n                            style: {\n                              margin: 5\n                            },\n                            color: \"error\",\n                            onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                            ,\n                            children: \"-\"\n                          }), /*#__PURE__*/_jsx(SuiButton, {\n                            style: {\n                              margin: 5\n                            },\n                            color: \"primary\",\n                            onClick: () => arrayHelpers.push({\n                              name: \"\",\n                              percentage: 0\n                            }) // insert an empty string at a position\n                            ,\n                            children: \"+\"\n                          })]\n                        })]\n                      })\n                    }, index)) : /*#__PURE__*/_jsx(React.Fragment, {\n                      children: /*#__PURE__*/_jsxs(SuiButton, {\n                        style: {\n                          display: isEditable ? \"\" : \"none\"\n                        },\n                        color: \"primary\",\n                        onClick: () => arrayHelpers.push({\n                          name: \"\",\n                          percentage: 0\n                        }),\n                        children: [translate(\"Add an evaluation method\"), /*#__PURE__*/_jsx(Add, {})]\n                      })\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Divider, {\n                  style: {\n                    margin: \"2em 0em\"\n                  }\n                })]\n              }), /*#__PURE__*/_jsx(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsx(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: /*#__PURE__*/_jsx(\"h5\", {\n                    children: translate(\"Attachements\")\n                  })\n                })\n              }), /*#__PURE__*/_jsxs(Box, {\n                children: [/*#__PURE__*/_jsxs(SuiButton, {\n                  disabled: !isEditable,\n                  color: \"primary\",\n                  onClick: handleClick,\n                  children: [translate(\"Upload a file\"), /*#__PURE__*/_jsx(AttachFile, {})]\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  id: \"attachement\",\n                  name: \"attachement\",\n                  type: \"file\",\n                  ref: hiddenInput,\n                  style: {\n                    display: \"none\"\n                  },\n                  onChange: event => {\n                    handleFile(event, setFieldValue);\n                  },\n                  className: \"form-control\"\n                }), /*#__PURE__*/_jsx(Grid, {\n                  md: 6,\n                  style: {\n                    marginTop: \"1em\"\n                  },\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    fullWidth: true,\n                    helperText: (touched === null || touched === void 0 ? void 0 : touched.attachement) && (errors === null || errors === void 0 ? void 0 : errors.attachement),\n                    error: Boolean((errors === null || errors === void 0 ? void 0 : errors.attachement) && (touched === null || touched === void 0 ? void 0 : touched.attachement)),\n                    variant: \"outlined\",\n                    type: \"text\",\n                    size: \"small\",\n                    disabled: true,\n                    placeholder: \"\",\n                    value: fileName\n                  })\n                }), values.attachement != null && values.attachement != \"\" && !changed && /*#__PURE__*/_jsx(Grid, {\n                  md: 6,\n                  style: {\n                    marginTop: \"1em\"\n                  },\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    href: process.env.BASE_URL + \"/\" + values.attachement,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxs(SuiButton, {\n                      type: \"button\",\n                      disabled: true,\n                      variant: \"gradient\",\n                      color: \"warning\",\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsx(CloudDownload, {\n                        style: {\n                          margin: \"0em .3em\"\n                        }\n                      }), translate(\"Download\")]\n                    })\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(Box, {\n                mt: 4,\n                mb: 1,\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"space-between\"\n                },\n                children: [isEditable ? isSubmitting ? /*#__PURE__*/_jsx(SuiButton, {\n                  type: \"button\",\n                  disabled: true,\n                  variant: \"gradient\",\n                  color: \"info\",\n                  children: translate(\"Processing ...\")\n                }) : /*#__PURE__*/_jsx(SuiButton, {\n                  style: {\n                    color: \"rgb(255, 255, 255)\",\n                    background: \"rgb(23, 193, 232)\"\n                  },\n                  disabled: !isValid && isSubmitting,\n                  type: \"submit\",\n                  children: translate(\"Save\")\n                }) : /*#__PURE__*/_jsx(SuiButton, {\n                  onClick: handleEditCourse,\n                  type: \"button\",\n                  variant: \"gradient\",\n                  color: \"info\",\n                  children: translate(\"Edit Course\")\n                }), isEditable && !(addDescription && isEditable) && /*#__PURE__*/_jsx(SuiButton, {\n                  onClick: handleActivateAddDesc,\n                  type: \"button\",\n                  variant: \"gradient\",\n                  color: \"primary\",\n                  children: !addDescription ? translate(\"Edit description\") : translate(\"Back to edit basic info\")\n                })]\n              })]\n            });\n          }\n        })\n      }), /*#__PURE__*/_jsx(CardActions, {})]\n    })\n  });\n};\n\nCourseDetail.layout = Admin;\nCourseDetail.auth = false;\nexport default CourseDetail;","map":null,"metadata":{},"sourceType":"module"}