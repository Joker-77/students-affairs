{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\initialize-year\\\\assign-teachers\\\\AssignedTeachers.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport SuiButton from \"../../../../../components/SuiButton\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../../Utility/Translations/useTranslation\";\nimport { Box, Button, Dialog, DialogActions, DialogTitle, IconButton, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport ActionTable from \"../../../../../components/MaterialTable/ActionTable\";\nimport { toast } from \"react-toastify\";\nimport Placeholder from \"../../../../../Utility/Placeholders\";\nimport GridContainer from \"../../../../../components/Grid/GridContainer\";\nimport GridItem from \"../../../../../components/Grid/GridItem\";\nimport TeacherService from \"../../../../../Services/TeacherService\";\nexport const AssignedTeachers = ({\n  teachers,\n  planData\n}) => {\n  _s();\n\n  const router = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const {\n    0: deleteId,\n    1: setDeleteId\n  } = useState(null);\n  const [confirmDelete, setConfirmDelete] = React.useState(false);\n  const [assignedTeachers, setAssignedTeachers] = React.useState([]);\n  const tableRef = useRef();\n  console.log(\"planData\", planData);\n  useEffect(() => {\n    if (planData.id && planData.edu_year_id) {\n      TeacherService.GetTeachersAssignments(planData.id, planData.edu_year_id);\n    }\n  }, []);\n  const columns = [{\n    title: \"المدرّس\",\n    field: \"id\"\n  }, {\n    title: \"نظري س/ف\",\n    field: \"program_id\"\n  }, {\n    title: \"عملي س/ف\",\n    field: \"edu_course.course.code\"\n  }, {\n    title: \"نظري/عملي س/ف\",\n    field: \"edu_course.course.ar_name\"\n  }];\n\n  const ConfirmDialog = ({\n    id,\n    show,\n    handleClose,\n    handleDeleteCourse\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: show,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"\\u0647\\u0644 \\u062A\\u0631\\u064A\\u062F \\u062A\\u0623\\u0643\\u064A\\u062F \\u062D\\u0630\\u0641 \\u0627\\u0644\\u0645\\u0642\\u0631\\u0631\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          variant: \"contained\",\n          children: translate(\"Cancel\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDeleteCourse(id),\n          color: \"primary\",\n          variant: \"contained\",\n          children: translate(\"Confirm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleDeleteCourse = () => {\n    if (deleteId) {//   PlanService.DeleteCourse(deleteId)\n      //     .then((resp) => {\n      //       if (resp.success) {\n      //         toast.success(\"Course deleted successfully\");\n      //         let _data = (data as Array<any>).filter((item) => {\n      //           return item.id != deleteId;\n      //         });\n      //         setData(_data);\n      //         setFilteredData(_data);\n      //         setConfirmDelete(false);\n      //       }\n      //     })\n      //     .catch((err) => {});\n    } else toast.error(\"يجب تحديد معرّف المقرّر ضمن البرنامج\");\n  };\n\n  const handleConfirmDialog = id => {\n    setDeleteId(id);\n    setConfirmDelete(true);\n  };\n\n  const handleCloseConfirmDialog = () => {\n    setDeleteId(null);\n    setConfirmDelete(false);\n  };\n\n  const renderPlanCourses = () => {\n    if (assignedTeachers != null && assignedTeachers.length > 0) {\n      let options = {\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\",\n        search: false,\n        tableLayout: \"auto\"\n      };\n      let actions = [{\n        icon: () => /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            minWidth: 80,\n            color: \"#dc3545\",\n            backgroundColor: \"transparent\",\n            border: \"1px solid #dc3545\"\n          },\n          color: \"danger\",\n          children: translate(\"Delete\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this),\n        onClick: (evt, data) => handleConfirmDialog(data.id)\n      }];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: tableRef,\n        children: [/*#__PURE__*/_jsxDEV(ActionTable, {\n          Title: `${translate(\"All\")} ${assignedTeachers.length}`,\n          Columns: columns,\n          Data: assignedTeachers,\n          Options: options,\n          Actions: actions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n          id: deleteId,\n          show: confirmDelete,\n          handleClose: handleCloseConfirmDialog,\n          handleDeleteCourse: handleDeleteCourse\n        }, \"Confirm Delete Course\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {\n      loading: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: /*#__PURE__*/_jsxDEV(GridItem, {\n      md: 12,\n      style: {\n        marginTop: \"1em\"\n      },\n      children: renderPlanCourses()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AssignedTeachers, \"fS9e31JpYfHEwcVNYF9ukZTTOn0=\", false, function () {\n  return [useRouter, useTranslation];\n});\n\n_c = AssignedTeachers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedTeachers\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/initialize-year/assign-teachers/AssignedTeachers.tsx"],"names":["React","useState","useRef","useEffect","SuiButton","useRouter","useTranslation","Box","Button","Dialog","DialogActions","DialogTitle","IconButton","Typography","Close","ActionTable","toast","Placeholder","GridContainer","GridItem","TeacherService","AssignedTeachers","teachers","planData","router","translate","deleteId","setDeleteId","confirmDelete","setConfirmDelete","assignedTeachers","setAssignedTeachers","tableRef","console","log","id","edu_year_id","GetTeachersAssignments","columns","title","field","ConfirmDialog","show","handleClose","handleDeleteCourse","error","handleConfirmDialog","handleCloseConfirmDialog","renderPlanCourses","length","options","actionsColumnIndex","headerStyle","backgroundColor","color","fontWeight","filtering","paging","pageSize","maxBodyHeight","search","tableLayout","actions","icon","minWidth","border","onClick","evt","data","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport SuiButton from \"../../../../../components/SuiButton\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"../../../../../Utility/Translations/useTranslation\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport ActionTable from \"../../../../../components/MaterialTable/ActionTable\";\r\nimport { toast } from \"react-toastify\";\r\nimport Placeholder from \"../../../../../Utility/Placeholders\";\r\nimport GridContainer from \"../../../../../components/Grid/GridContainer\";\r\nimport GridItem from \"../../../../../components/Grid/GridItem\";\r\nimport TeacherService from \"../../../../../Services/TeacherService\";\r\n\r\ninterface IProps {\r\n  planData: any;\r\n  teachers: any;\r\n}\r\nexport const AssignedTeachers: React.FC<IProps> = ({ teachers, planData }) => {\r\n  const router = useRouter();\r\n  const { translate } = useTranslation();\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [confirmDelete, setConfirmDelete] = React.useState(false);\r\n  const [assignedTeachers, setAssignedTeachers] = React.useState([]);\r\n  const tableRef = useRef();\r\n  console.log(\"planData\", planData);\r\n  useEffect(() => {\r\n    if(planData.id && planData.edu_year_id) \r\n    {\r\n        TeacherService.GetTeachersAssignments(planData.id, planData.edu_year_id)\r\n\r\n    }\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      title: \"المدرّس\",\r\n      field: \"id\",\r\n    },\r\n    {\r\n      title: \"نظري س/ف\",\r\n      field: \"program_id\",\r\n    },\r\n    {\r\n      title: \"عملي س/ف\",\r\n      field: \"edu_course.course.code\",\r\n    },\r\n    {\r\n      title: \"نظري/عملي س/ف\",\r\n      field: \"edu_course.course.ar_name\",\r\n    },\r\n  ];\r\n  const ConfirmDialog = ({ id, show, handleClose, handleDeleteCourse }) => {\r\n    return (\r\n      <Dialog open={show} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          <Typography>هل تريد تأكيد حذف المقرر</Typography>\r\n        </DialogTitle>\r\n        <Box position=\"absolute\" top={0} right={0}>\r\n          <IconButton onClick={handleClose}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\" variant=\"contained\">\r\n            {translate(\"Cancel\")}\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDeleteCourse(id)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            {translate(\"Confirm\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n  const handleDeleteCourse = () => {\r\n    if (deleteId) {\r\n      //   PlanService.DeleteCourse(deleteId)\r\n      //     .then((resp) => {\r\n      //       if (resp.success) {\r\n      //         toast.success(\"Course deleted successfully\");\r\n      //         let _data = (data as Array<any>).filter((item) => {\r\n      //           return item.id != deleteId;\r\n      //         });\r\n      //         setData(_data);\r\n      //         setFilteredData(_data);\r\n      //         setConfirmDelete(false);\r\n      //       }\r\n      //     })\r\n      //     .catch((err) => {});\r\n    } else toast.error(\"يجب تحديد معرّف المقرّر ضمن البرنامج\");\r\n  };\r\n  const handleConfirmDialog = (id) => {\r\n    setDeleteId(id);\r\n    setConfirmDelete(true);\r\n  };\r\n  const handleCloseConfirmDialog = () => {\r\n    setDeleteId(null);\r\n    setConfirmDelete(false);\r\n  };\r\n  const renderPlanCourses = () => {\r\n    if (assignedTeachers != null && assignedTeachers.length > 0) {\r\n      let options = {\r\n        actionsColumnIndex: -1,\r\n        headerStyle: {\r\n          backgroundColor: \"#01579b\",\r\n          color: \"#FFF\",\r\n          fontWeight: \"bold\",\r\n        },\r\n        filtering: false,\r\n        paging: true,\r\n        pageSize: 10,\r\n        maxBodyHeight: \"500px\",\r\n        search: false,\r\n        tableLayout: \"auto\",\r\n      };\r\n      let actions = [\r\n        {\r\n          icon: () => (\r\n            <SuiButton\r\n              style={{\r\n                minWidth: 80,\r\n                color: \"#dc3545\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"1px solid #dc3545\",\r\n              }}\r\n              color={\"danger\"}\r\n            >\r\n              {translate(\"Delete\")}\r\n            </SuiButton>\r\n          ),\r\n          onClick: (evt, data) => handleConfirmDialog(data.id),\r\n        },\r\n      ];\r\n      return (\r\n        <div ref={tableRef}>\r\n          <ActionTable\r\n            Title={`${translate(\"All\")} ${assignedTeachers.length}`}\r\n            Columns={columns}\r\n            Data={assignedTeachers}\r\n            Options={options}\r\n            Actions={actions}\r\n          />\r\n          <ConfirmDialog\r\n            key={\"Confirm Delete Course\"}\r\n            id={deleteId}\r\n            show={confirmDelete}\r\n            handleClose={handleCloseConfirmDialog}\r\n            handleDeleteCourse={handleDeleteCourse}\r\n          />\r\n        </div>\r\n      );\r\n    } else return <Placeholder loading={false} />;\r\n  };\r\n  return (\r\n    <GridContainer>\r\n      <GridItem md={12} style={{ marginTop: \"1em\" }}>\r\n        {renderPlanCourses()}\r\n      </GridItem>\r\n    </GridContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}