{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Navigate } from \"react-router-dom\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { store } from \"./../redux/store\";\nimport { Provider } from \"react-redux\";\nimport PageChange from \"components/PageChange/PageChange.js\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"assets/theme\";\nimport themeRTL from \"assets/theme/theme-rtl\";\nimport \"assets/css/nextjs-material-dashboard.css?v=1.1.0\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { SessionProvider, useSession, getSession } from \"next-auth/react\";\nimport CustomToastContainer from \"./_toast\";\nimport { boolean } from \"yup\";\nimport AuthProvider from \"../components/AuthProvider/AuthProvider\";\nRouter.events.on(\"routeChangeStart\", url => {\n  console.log(`Loading: ${url}`);\n  console.log(`Process: ${process.env.BASE_URL}`);\n  document.body.classList.add(\"body-page-transition\"); // ReactDOM.render(\n  //   <PageChange path={url} />,\n  //   document.getElementById(\"page-transition\")\n  // );\n});\nRouter.events.on(\"routeChangeComplete\", () => {\n  ReactDOM.unmountComponentAtNode(document.getElementById(\"page-transition\"));\n  document.body.classList.remove(\"body-page-transition\");\n});\nRouter.events.on(\"routeChangeError\", () => {\n  ReactDOM.unmountComponentAtNode(document.getElementById(\"page-transition\"));\n  document.body.classList.remove(\"body-page-transition\");\n});\nexport default class MyApp extends App {\n  constructor(params) {\n    super(params);\n    this.state = {\n      backToSignIn: false\n    };\n  }\n\n  async componentDidMount() {\n    let comment = document.createComment(`Component Did mount`);\n    document.insertBefore(comment, document.documentElement);\n  }\n\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      let key = localStorage.getItem(\"sa_access_token\");\n      let profile = JSON.parse(localStorage.getItem(\"logged_in_profile\"));\n      pageProps = await Component.getInitialProps(ctx);\n      pageProps.sessionKey = key;\n      pageProps.profile = profile;\n      console.clear();\n      console.log(pageProps);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n\n    const Layout = Component.layout || (({\n      children\n    }) => /*#__PURE__*/_jsx(_Fragment, {\n      children: children\n    }));\n\n    return /*#__PURE__*/_jsx(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsx(SessionProvider, {\n        session: pageProps.session,\n        children: Component.auth ? /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsxs(Head, {\n            children: [/*#__PURE__*/_jsx(\"meta\", {\n              name: \"viewport\",\n              content: \"width=device-width, initial-scale=1, shrink-to-fit=no\"\n            }), /*#__PURE__*/_jsx(\"title\", {})]\n          }), /*#__PURE__*/_jsx(Layout, {\n            children: /*#__PURE__*/_jsxs(ThemeProvider, {\n              theme: themeRTL,\n              children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(CustomToastContainer, {}), /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))]\n            })\n          })]\n        }) : /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsxs(Head, {\n            children: [/*#__PURE__*/_jsx(\"meta\", {\n              name: \"viewport\",\n              content: \"width=device-width, initial-scale=1, shrink-to-fit=no\"\n            }), /*#__PURE__*/_jsx(\"title\", {})]\n          }), /*#__PURE__*/_jsx(Layout, {\n            children: /*#__PURE__*/_jsxs(ThemeProvider, {\n              theme: theme,\n              children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(CustomToastContainer, {}), /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))]\n            })\n          })]\n        })\n      })\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}