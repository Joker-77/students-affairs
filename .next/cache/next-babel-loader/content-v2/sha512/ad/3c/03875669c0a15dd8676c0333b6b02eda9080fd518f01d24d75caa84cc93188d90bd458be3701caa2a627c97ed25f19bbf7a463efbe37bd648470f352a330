{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\candidates\\\\CandidateAttachmentsList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { Button, Grid, IconButton } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport AttachmentService from \"../../../../Services/AttachmentService\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport { AttachFile, Delete } from \"@material-ui/icons\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport Card from \"../../../../components/Card/Card\";\nimport colors from \"../../../../assets/theme/base/colors\";\nimport * as Yup from \"yup\";\nimport AddAttachmentModal from \"../../../../components/Modals/AddAttachmentModal\";\n\nconst CandidateCandidateAttachmentsList = ({\n  attachments,\n  candidateId\n}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const [open, setOpen] = React.useState(false);\n  const [body, setBody] = React.useState(false);\n\n  const handleOpen = body => {\n    setOpen(true);\n    setBody(body);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const AddAttachmentScheme = Yup.object().shape({\n    type: Yup.string().required(translate(\"{0} is required\", \"Name\"))\n  });\n  const [initAddAttachment, setInitAddAttachment] = React.useState({\n    type: 3\n  });\n  const fileItem = {\n    padding: '5px 20px',\n    border: '1px solid #cdcdcd',\n    borderRadius: 30,\n    marginBottom: 5,\n    marginTop: 5\n  };\n  const fileContainer = {\n    display: 'flex',\n    justifyContent: 'space-between'\n  };\n  const fileLink = {\n    fontSize: 15,\n    color: '#000'\n  };\n  const icon = {\n    width: 20,\n    height: 20,\n    color: colors.error.main\n  };\n  const spacer = {\n    marginBottom: \"25px\"\n  };\n  const [submitting, setSubmitting] = React.useState(null);\n\n  const submitAddOtherAttachment = (values, setLoading) => {\n    submitAddAttachment(_objectSpread(_objectSpread({}, body), {}, {\n      name: values.name\n    }), setLoading);\n  };\n\n  const submitAddAttachment = async (values, setLoading = setSubmitting) => {\n    setLoading(values.type);\n    AttachmentService.Add(values).then(res => {\n      console.log(\"Attachment\", res);\n      const AttachmentCopy = [res.result, ...Attachments];\n      setAttachments(AttachmentCopy);\n      handleClose();\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      values.type !== 3 && setLoading(null);\n    });\n  };\n  /************************** Handle felete data ****************************/\n\n\n  const submitDeleteAttachment = async values => {\n    console.log(\"values\", values);\n    AttachmentService.Delete(values).then(res => {\n      console.log(\"Attachment\", res);\n      const AttachmentCopy = [...Attachments].filter(item => item.id != values.id);\n      setAttachments(AttachmentCopy);\n    }).catch(error => {\n      console.error(\"roles\", error);\n    });\n  };\n\n  const getParamsByName = name => name === 'id_image' ? {\n    type: 1,\n    name: translate('ID image')\n  } : name === 'personal_image' ? {\n    type: 2,\n    name: translate('Personal image')\n  } : {\n    type: 3,\n    name: ''\n  };\n\n  const handleUpload = ({\n    target\n  }) => {\n    const fileReader = new FileReader();\n    const body = getParamsByName(target.name);\n    fileReader.readAsDataURL(target.files[0]);\n\n    fileReader.onload = e => {\n      if (body.type === 3) {\n        handleOpen(_objectSpread(_objectSpread({}, body), {}, {\n          file: e.target.result,\n          candidate_id: candidateId\n        }));\n      } else {\n        submitAddAttachment(_objectSpread(_objectSpread({}, body), {}, {\n          file: e.target.result,\n          candidate_id: candidateId\n        }));\n      }\n    };\n  };\n\n  const renderUploadButton = (type, label, name) => /*#__PURE__*/_jsxDEV(Button, {\n    disabled: submitting === type,\n    variant: \"contained\",\n    className: classes.submitBtn,\n    component: \"label\",\n    style: {\n      minWidth: 200,\n      color: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), submitting === type ? translate('Processing ...') : label, /*#__PURE__*/_jsxDEV(\"input\", {\n      accept: \"image/*\",\n      type: \"file\",\n      name: name,\n      hidden: true,\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n\n  const [Attachments, setAttachments] = React.useState([]);\n  useEffect(() => {\n    console.log('attachments', attachments);\n    setAttachments(attachments);\n  }, [attachments]);\n\n  const renderAttachment = () => {\n    if (Attachments != null && Attachments.length > 0) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: Attachments.map(item => /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: fileItem,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: fileContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  style: fileLink,\n                  href: `${process.env.BASE_URL}/${item.url}`,\n                  target: '_blank',\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  style: icon,\n                  onClick: () => submitDeleteAttachment({\n                    id: item.id\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Delete, {\n                    style: icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"#01579b\"\n          },\n          children: translate('Attachments')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                md: 6,\n                children: renderUploadButton(2, translate(\"Upload personal image\"), 'personal_image')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                md: 6,\n                children: renderUploadButton(1, translate(\"Upload ID image\"), 'id_image')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: 'certificate',\n              style: spacer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), renderUploadButton(3, translate(\"Upload Other Attachment\"), 'other_attachment'), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: 'certificate',\n              style: spacer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), renderAttachment()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddAttachmentModal, {\n      title: translate(\"Add Attachment\"),\n      open: open,\n      handleClose: handleClose,\n      formScheme: AddAttachmentScheme,\n      initValues: initAddAttachment,\n      submitForm: submitAddOtherAttachment\n    }, \"addAttachment\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n\nCandidateCandidateAttachmentsList.auth = true;\nCandidateCandidateAttachmentsList.layout = Admin;\nexport default CandidateCandidateAttachmentsList;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/candidates/CandidateAttachmentsList.tsx"],"names":["React","useEffect","Button","Grid","IconButton","Admin","styles","makeStyles","GridContainer","GridItem","Placeholder","AttachmentService","useRouter","useTranslation","AttachFile","Delete","CardHeader","CardBody","Card","colors","Yup","AddAttachmentModal","CandidateCandidateAttachmentsList","attachments","candidateId","translate","useStyles","classes","router","open","setOpen","useState","body","setBody","handleOpen","handleClose","AddAttachmentScheme","object","shape","type","string","required","initAddAttachment","setInitAddAttachment","fileItem","padding","border","borderRadius","marginBottom","marginTop","fileContainer","display","justifyContent","fileLink","fontSize","color","icon","width","height","error","main","spacer","submitting","setSubmitting","submitAddOtherAttachment","values","setLoading","submitAddAttachment","name","Add","then","res","console","log","AttachmentCopy","result","Attachments","setAttachments","catch","finally","submitDeleteAttachment","filter","item","id","getParamsByName","handleUpload","target","fileReader","FileReader","readAsDataURL","files","onload","e","file","candidate_id","renderUploadButton","label","submitBtn","minWidth","renderAttachment","length","map","process","env","BASE_URL","url","fontWeight","auth","layout"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {Button, Grid, IconButton} from \"@material-ui/core\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\r\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\r\nimport { IAttachmentModel } from \"../../../../Models/ApiResponse/AttachmentModel\";\r\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\r\nimport Placeholder from \"../../../../Utility/Placeholders\";\r\nimport AttachmentService from \"../../../../Services/AttachmentService\";\r\nimport {useRouter} from \"next/router\";\r\nimport {useTranslation} from \"../../../../Utility/Translations/useTranslation\";\r\nimport {AttachFile, Close, Delete} from \"@material-ui/icons\";\r\nimport CardHeader from \"../../../../components/Card/CardHeader\";\r\nimport CardBody from \"../../../../components/Card/CardBody\";\r\nimport Card from \"../../../../components/Card/Card\";\r\nimport colors from \"../../../../assets/theme/base/colors\";\r\nimport AddCertificateModal from \"../../../../components/Modals/AddCertificateModal\";\r\nimport * as Yup from \"yup\";\r\nimport AddAttachmentModal from \"../../../../components/Modals/AddAttachmentModal\";\r\nimport {ICertificateModel} from \"../../../../Models/ApiResponse/CertificateModel\";\r\n\r\ninterface ICandidateAttachmentsListProps {candidateId: number, attachments: IAttachmentModel[]}\r\nconst CandidateCandidateAttachmentsList: React.FC<ICandidateAttachmentsListProps> = ({attachments, candidateId}) => {\r\n    const {translate} = useTranslation();\r\n    const useStyles = makeStyles(styles);\r\n    const classes = useStyles();\r\n    const router = useRouter();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [body, setBody] = React.useState(false);\r\n\r\n    const handleOpen = (body) => {\r\n        setOpen(true);\r\n        setBody(body);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const AddAttachmentScheme = Yup.object().shape({\r\n        type: Yup.string().required(translate(\"{0} is required\", \"Name\")),\r\n    });\r\n\r\n    const [initAddAttachment, setInitAddAttachment] = React.useState({\r\n        type: 3,\r\n    });\r\n\r\n    const fileItem = {\r\n        padding: '5px 20px',\r\n        border: '1px solid #cdcdcd',\r\n        borderRadius: 30,\r\n        marginBottom: 5,\r\n        marginTop: 5,\r\n    };\r\n\r\n    const fileContainer = {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    };\r\n\r\n    const fileLink = {\r\n        fontSize: 15,\r\n        color: '#000'\r\n    };\r\n    const icon = {\r\n        width: 20,\r\n        height: 20,\r\n        color: colors.error.main\r\n    };\r\n\r\n    const spacer = {\r\n        marginBottom: \"25px\",\r\n    };\r\n\r\n    const [submitting, setSubmitting] = React.useState(null);\r\n\r\n    const submitAddOtherAttachment = (values: any, setLoading) => {\r\n        submitAddAttachment({...body, name: values.name}, setLoading);\r\n    }\r\n\r\n    const submitAddAttachment = async (values: any, setLoading = setSubmitting) => {\r\n        setLoading(values.type);\r\n        AttachmentService.Add(values)\r\n            .then((res) => {\r\n                console.log(\"Attachment\", res);\r\n                const AttachmentCopy = [res.result, ...Attachments];\r\n                setAttachments(AttachmentCopy);\r\n                handleClose();\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"error\", error);\r\n            })\r\n            .finally(() => {\r\n                values.type !== 3 && setLoading(null);\r\n            });\r\n    };\r\n\r\n    /************************** Handle felete data ****************************/\r\n\r\n    const submitDeleteAttachment = async (values: any) => {\r\n        console.log(\"values\", values);\r\n        AttachmentService.Delete(values)\r\n            .then((res) => {\r\n                console.log(\"Attachment\", res);\r\n                const AttachmentCopy = [...Attachments].filter(item => item.id != values.id);\r\n                setAttachments(AttachmentCopy);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"roles\", error);\r\n            });\r\n    };\r\n\r\n    const getParamsByName = (name) =>\r\n        name === 'id_image' ? {type: 1, name: translate('ID image')} :\r\n            (name === 'personal_image' ? {type: 2, name: translate('Personal image')} :\r\n                {type: 3, name: ''});\r\n    const handleUpload = ({ target }) => {\r\n        const fileReader = new FileReader();\r\n        const body = getParamsByName(target.name);\r\n\r\n        fileReader.readAsDataURL(target.files[0]);\r\n        fileReader.onload = (e) => {\r\n            if(body.type === 3) {\r\n                handleOpen({...body, file: e.target.result, candidate_id: candidateId});\r\n            }\r\n            else {\r\n                submitAddAttachment({...body, file: e.target.result, candidate_id: candidateId});\r\n            }\r\n        };\r\n    };\r\n\r\n    const renderUploadButton = (type, label, name) => (\r\n        <Button\r\n            disabled={submitting === type}\r\n            variant=\"contained\"\r\n            className={classes.submitBtn}\r\n            component=\"label\"\r\n            style={{minWidth: 200, color: 'white'}}\r\n        >\r\n            <AttachFile />\r\n            {submitting === type ? translate('Processing ...') : label}\r\n            <input\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                name={name}\r\n                hidden\r\n                onChange={handleUpload}\r\n            />\r\n        </Button>\r\n    );\r\n\r\n    const [Attachments, setAttachments] = React.useState<IAttachmentModel[]>([]);\r\n\r\n    useEffect(() => {\r\n        console.log('attachments', attachments);\r\n        setAttachments(attachments);\r\n    }, [attachments]);\r\n\r\n    const renderAttachment = () => {\r\n        if (Attachments != null && Attachments.length > 0) {\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    {Attachments.map((item) => (\r\n                        <GridContainer>\r\n                            <GridItem sm={8}>\r\n                                <Card style={fileItem}>\r\n                                    <div style={fileContainer}>\r\n                                        <a style={fileLink} href={`${process.env.BASE_URL}/${item.url}`} target={'_blank'}>{item.name}</a>\r\n                                        <IconButton style={icon} onClick={() => submitDeleteAttachment({id: item.id})}>\r\n                                            <Delete style={icon}/>\r\n                                        </IconButton>\r\n                                    </div>\r\n\r\n                                </Card>\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                    ))}\r\n                </React.Fragment>\r\n            );\r\n        } else return <Placeholder />;\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n\r\n\r\n            <Card>\r\n                <CardHeader>\r\n                    <h4 style={{ fontWeight: \"bold\", color: \"#01579b\" }}>{translate('Attachments')}</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <GridContainer>\r\n                        <GridItem md={12}>\r\n                            <Grid container>\r\n                                <Grid md={6}>\r\n                                    {renderUploadButton(2, translate(\"Upload personal image\"), 'personal_image')}\r\n                                </Grid>\r\n                                <Grid md={6}>\r\n                                    {renderUploadButton(1, translate(\"Upload ID image\"), 'id_image')}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <div id={'certificate'} style={spacer}/>\r\n                            {renderUploadButton(3, translate(\"Upload Other Attachment\"), 'other_attachment')}\r\n                            <div id={'certificate'} style={spacer}/>\r\n                            {renderAttachment()}\r\n                        </GridItem>\r\n                    </GridContainer>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <AddAttachmentModal\r\n                key={\"addAttachment\"}\r\n                title={translate(\"Add Attachment\")}\r\n                open={open}\r\n                handleClose={handleClose}\r\n                formScheme={AddAttachmentScheme}\r\n                initValues={initAddAttachment}\r\n                submitForm={submitAddOtherAttachment}\r\n            ></AddAttachmentModal>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n(CandidateCandidateAttachmentsList as any).auth = true;\r\n(CandidateCandidateAttachmentsList as any).layout = Admin;\r\nexport default CandidateCandidateAttachmentsList;\r\n"]},"metadata":{},"sourceType":"module"}