{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { setLayout, clearSessionKey, collapseMenu, collapseToggle, navCollapseLeave, navContentLeave, setMessage, setSessionKey, updateProfile, lockScreen, setDirection, setCandidate } from \"../actions/actions\";\nconst initialState = {\n  isOpen: [],\n  //for active default menu\n  isTrigger: [],\n  //for active default menu, set blank for horizontal\n  collapseMenu: false,\n  isLocked: false,\n  // Lock all screens for protection against abuse\n  // ...config,\n  rememberMe: false,\n  //\n  sessionKey: \"\",\n  userProfile: null,\n  layout: \"page\",\n  direction: \"ltr\",\n  message: {\n    Content: \"\",\n    Type: 0\n  },\n  // 0 is confirmation 1 is error 2 is warning\n  candidate: null\n};\nexport const reducer = createReducer(initialState, builder => {\n  builder.addCase(setSessionKey, (state, action) => {\n    state.sessionKey = action.payload;\n  }).addCase(clearSessionKey, state => {\n    state.sessionKey = \"\", state.rememberMe = false;\n  }).addCase(setMessage, (state, action) => {\n    state.message = action.payload;\n  }).addCase(updateProfile, (state, action) => {\n    state.userProfile = action.payload;\n  }).addCase(collapseMenu, (state, action) => {\n    state.collapseMenu = !action.payload;\n  }).addCase(collapseToggle, (state, action) => {\n    let trigger = [];\n    let open = [];\n\n    if (action.payload.menu.type === \"sub\") {\n      open = state.isOpen;\n      trigger = state.isTrigger;\n      const triggerIndex = trigger.indexOf(action.payload.menu.id);\n\n      if (triggerIndex > -1) {\n        open = open.filter(item => item !== action.payload.menu.id);\n        trigger = trigger.filter(item => item !== action.payload.menu.id);\n      }\n\n      if (triggerIndex === -1) {\n        open = [...open, action.payload.menu.id];\n        trigger = [...trigger, action.payload.menu.id];\n      }\n    } else {\n      open = state.isOpen;\n      const triggerIndex = state.isTrigger.indexOf(action.payload.menu.id);\n      trigger = triggerIndex === -1 ? [action.payload.menu.id] : [];\n      open = triggerIndex === -1 ? [action.payload.menu.id] : [];\n    }\n\n    state.isOpen = open;\n    state.isTrigger = trigger;\n  }).addCase(navContentLeave, (state, action) => {\n    let trigger = [];\n    let open = [];\n    state.isOpen = open;\n    state.isTrigger = trigger;\n  }).addCase(navCollapseLeave, (state, action) => {\n    let trigger = [];\n    let open = [];\n\n    if (action.payload.menu.type === \"sub\") {\n      open = state.isOpen;\n      trigger = state.isTrigger;\n      const triggerIndex = trigger.indexOf(action.payload.menu.id);\n\n      if (triggerIndex > -1) {\n        open = open.filter(item => item !== action.payload.menu.id);\n        trigger = trigger.filter(item => item !== action.payload.menu.id);\n      }\n\n      state.isOpen = open;\n      state.isTrigger = trigger;\n    }\n  }).addCase(setLayout, (state, action) => {\n    state.layout = action.payload;\n  }).addCase(lockScreen, (state, action) => {\n    state.isLocked = action.payload && !action.payload;\n  }).addCase(setDirection, (state, action) => {\n    state.direction = action.payload;\n  }).addCase(setCandidate, (state, action) => {\n    state.candidate = action.payload;\n  });\n});","map":{"version":3,"sources":["F:/StudentAffairs/students/students/redux/reducers/reducer.ts"],"names":["createReducer","setLayout","clearSessionKey","collapseMenu","collapseToggle","navCollapseLeave","navContentLeave","setMessage","setSessionKey","updateProfile","lockScreen","setDirection","setCandidate","initialState","isOpen","isTrigger","isLocked","rememberMe","sessionKey","userProfile","layout","direction","message","Content","Type","candidate","reducer","builder","addCase","state","action","payload","trigger","open","menu","type","triggerIndex","indexOf","id","filter","item"],"mappings":"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","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  setLayout,\r\n  clearSessionKey,\r\n  collapseMenu,\r\n  collapseToggle,\r\n  navCollapseLeave,\r\n  navContentLeave,\r\n  setMessage,\r\n  setSessionKey,\r\n  updateProfile,\r\n  lockScreen,\r\n  setDirection,\r\n  setCandidate,\r\n} from \"../actions/actions\";\r\nimport { IInitialState } from \"../initalState/initialState\";\r\n\r\nconst initialState: IInitialState = {\r\n  isOpen: [], //for active default menu\r\n  isTrigger: [], //for active default menu, set blank for horizontal\r\n  collapseMenu: false,\r\n  isLocked: false, // Lock all screens for protection against abuse\r\n  // ...config,\r\n  rememberMe: false, //\r\n  sessionKey: \"\",\r\n  userProfile: null,\r\n  layout: \"page\",\r\n  direction: \"ltr\",\r\n  message: {\r\n    Content: \"\",\r\n    Type: 0,\r\n  }, // 0 is confirmation 1 is error 2 is warning\r\n  candidate: null,\r\n};\r\n\r\nexport const reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(setSessionKey, (state, action) => {\r\n      state.sessionKey = action.payload;\r\n    })\r\n    .addCase(clearSessionKey, (state) => {\r\n      (state.sessionKey = \"\"), (state.rememberMe = false);\r\n    })\r\n    .addCase(setMessage, (state, action) => {\r\n      state.message = action.payload;\r\n    })\r\n    .addCase(updateProfile, (state, action) => {\r\n      state.userProfile = action.payload;\r\n    })\r\n    .addCase(collapseMenu, (state, action) => {\r\n      state.collapseMenu = !action.payload;\r\n    })\r\n    .addCase(collapseToggle, (state, action) => {\r\n      let trigger = [];\r\n      let open = [];\r\n      if (action.payload.menu.type === \"sub\") {\r\n        open = state.isOpen;\r\n        trigger = state.isTrigger;\r\n        const triggerIndex = trigger.indexOf(action.payload.menu.id);\r\n        if (triggerIndex > -1) {\r\n          open = open.filter((item) => item !== action.payload.menu.id);\r\n          trigger = trigger.filter((item) => item !== action.payload.menu.id);\r\n        }\r\n\r\n        if (triggerIndex === -1) {\r\n          open = [...open, action.payload.menu.id];\r\n          trigger = [...trigger, action.payload.menu.id];\r\n        }\r\n      } else {\r\n        open = state.isOpen;\r\n        const triggerIndex = state.isTrigger.indexOf(action.payload.menu.id);\r\n        trigger = triggerIndex === -1 ? [action.payload.menu.id] : [];\r\n        open = triggerIndex === -1 ? [action.payload.menu.id] : [];\r\n      }\r\n      state.isOpen = open;\r\n      state.isTrigger = trigger;\r\n    })\r\n    .addCase(navContentLeave, (state, action) => {\r\n      let trigger = [];\r\n      let open = [];\r\n      state.isOpen = open;\r\n      state.isTrigger = trigger;\r\n    })\r\n    .addCase(navCollapseLeave, (state, action) => {\r\n      let trigger = [];\r\n      let open = [];\r\n      if (action.payload.menu.type === \"sub\") {\r\n        open = state.isOpen;\r\n        trigger = state.isTrigger;\r\n        const triggerIndex = trigger.indexOf(action.payload.menu.id);\r\n        if (triggerIndex > -1) {\r\n          open = open.filter((item) => item !== action.payload.menu.id);\r\n          trigger = trigger.filter((item) => item !== action.payload.menu.id);\r\n        }\r\n        state.isOpen = open;\r\n        state.isTrigger = trigger;\r\n      }\r\n    })\r\n    .addCase(setLayout, (state, action) => {\r\n      state.layout = action.payload;\r\n    })\r\n    .addCase(lockScreen, (state, action) => {\r\n      state.isLocked = action.payload && !action.payload;\r\n    })\r\n    .addCase(setDirection, (state, action) => {\r\n      state.direction = action.payload;\r\n    })\r\n    .addCase(setCandidate, (state, action) => {\r\n      state.candidate = action.payload;\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}