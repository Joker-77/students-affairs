{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport { Button, Grid, IconButton } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport AttachmentService from \"../../../../Services/AttachmentService\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport { AttachFile, Delete } from \"@material-ui/icons\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport Card from \"../../../../components/Card/Card\";\nimport colors from \"../../../../assets/theme/base/colors\";\nimport * as Yup from \"yup\";\nimport AddAttachmentModal from \"../../../../components/Modals/AddAttachmentModal\";\n\nvar CandidateCandidateAttachmentsList = function CandidateCandidateAttachmentsList(_ref) {\n  var attachments = _ref.attachments,\n      candidateId = _ref.candidateId;\n\n  var _useTranslation = useTranslation(),\n      translate = _useTranslation.translate;\n\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      body = _React$useState4[0],\n      setBody = _React$useState4[1];\n\n  var handleOpen = function handleOpen(body) {\n    setOpen(true);\n    setBody(body);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var AddAttachmentScheme = Yup.object().shape({\n    type: Yup.string().required(translate(\"{0} is required\", \"Name\"))\n  });\n\n  var _React$useState5 = React.useState({\n    type: 3\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      initAddAttachment = _React$useState6[0],\n      setInitAddAttachment = _React$useState6[1];\n\n  var fileItem = {\n    padding: \"5px 20px\",\n    border: \"1px solid #cdcdcd\",\n    borderRadius: 30,\n    marginBottom: 5,\n    marginTop: 5\n  };\n  var fileContainer = {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  };\n  var fileLink = {\n    fontSize: 15,\n    color: \"#000\"\n  };\n  var icon = {\n    width: 20,\n    height: 20,\n    color: colors.error.main\n  };\n  var spacer = {\n    marginBottom: \"25px\"\n  };\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      submitting = _React$useState8[0],\n      setSubmitting = _React$useState8[1];\n\n  var submitAddOtherAttachment = function submitAddOtherAttachment(values, setLoading) {\n    submitAddAttachment(_objectSpread(_objectSpread({}, body), {}, {\n      name: values.name\n    }), setLoading);\n  };\n\n  var submitAddAttachment = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var setLoading,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading = _args.length > 1 && _args[1] !== undefined ? _args[1] : setSubmitting;\n              setLoading(values.type);\n              AttachmentService.Add(values).then(function (res) {\n                console.log(\"Attachment\", res);\n                var AttachmentCopy = [res.result].concat(_toConsumableArray(Attachments));\n                setAttachments(AttachmentCopy);\n                handleClose();\n              }).catch(function (error) {\n                console.error(\"error\", error);\n              }).finally(function () {\n                values.type !== 3 && setLoading(null);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitAddAttachment(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /************************** Handle delete data ****************************/\n\n\n  var submitDeleteAttachment = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"values\", values);\n              AttachmentService.Delete(values).then(function (res) {\n                console.log(\"Attachment\", res);\n\n                var AttachmentCopy = _toConsumableArray(Attachments).filter(function (item) {\n                  return item.id != values.id;\n                });\n\n                setAttachments(AttachmentCopy);\n              }).catch(function (error) {\n                console.error(\"roles\", error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function submitDeleteAttachment(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getParamsByName = function getParamsByName(name) {\n    return name === \"id_image\" ? {\n      type: 1,\n      name: translate(\"ID image\")\n    } : name === \"personal_image\" ? {\n      type: 2,\n      name: translate(\"Personal image\")\n    } : {\n      type: 3,\n      name: \"\"\n    };\n  };\n\n  var handleUpload = function handleUpload(_ref4) {\n    var target = _ref4.target;\n    var fileReader = new FileReader();\n    var body = getParamsByName(target.name);\n    fileReader.readAsDataURL(target.files[0]);\n\n    fileReader.onload = function (e) {\n      if (body.type === 3) {\n        handleOpen(_objectSpread(_objectSpread({}, body), {}, {\n          file: e.target.result,\n          candidate_id: candidateId\n        }));\n      } else {\n        submitAddAttachment(_objectSpread(_objectSpread({}, body), {}, {\n          file: e.target.result,\n          candidate_id: candidateId\n        }));\n      }\n    };\n  };\n\n  var renderUploadButton = function renderUploadButton(type, label, name) {\n    return /*#__PURE__*/_jsxs(Button, {\n      disabled: submitting === type,\n      variant: \"contained\",\n      className: classes.submitBtn,\n      component: \"label\",\n      style: {\n        minWidth: 200,\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsx(AttachFile, {}), submitting === type ? translate(\"Processing ...\") : label, /*#__PURE__*/_jsx(\"input\", {\n        accept: \"image/*\",\n        type: \"file\",\n        name: name,\n        hidden: true,\n        onChange: handleUpload\n      })]\n    });\n  };\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      Attachments = _React$useState10[0],\n      setAttachments = _React$useState10[1];\n\n  useEffect(function () {\n    console.log(\"attachments\", attachments);\n    setAttachments(attachments);\n  }, [attachments]);\n\n  var renderAttachment = function renderAttachment() {\n    if (Attachments != null && Attachments.length > 0) {\n      return /*#__PURE__*/_jsx(React.Fragment, {\n        children: Attachments.map(function (item) {\n          return /*#__PURE__*/_jsx(GridContainer, {\n            children: /*#__PURE__*/_jsx(GridItem, {\n              sm: 8,\n              children: /*#__PURE__*/_jsx(Card, {\n                style: fileItem,\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  style: fileContainer,\n                  children: [/*#__PURE__*/_jsx(\"a\", {\n                    style: fileLink,\n                    href: \"\".concat(process.env.BASE_URL, \"/\").concat(item.url),\n                    target: \"_blank\",\n                    children: item.name\n                  }), /*#__PURE__*/_jsx(IconButton, {\n                    style: icon,\n                    onClick: function onClick() {\n                      return submitDeleteAttachment({\n                        id: item.id\n                      });\n                    },\n                    children: /*#__PURE__*/_jsx(Delete, {\n                      style: icon\n                    })\n                  })]\n                })\n              })\n            })\n          });\n        })\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsxs(Card, {\n      children: [/*#__PURE__*/_jsx(CardHeader, {\n        children: /*#__PURE__*/_jsx(\"h4\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"#01579b\"\n          },\n          children: translate(\"Attachments\")\n        })\n      }), /*#__PURE__*/_jsx(CardBody, {\n        children: /*#__PURE__*/_jsx(GridContainer, {\n          children: /*#__PURE__*/_jsxs(GridItem, {\n            md: 12,\n            children: [/*#__PURE__*/_jsxs(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsx(Grid, {\n                md: 6,\n                children: renderUploadButton(2, translate(\"Upload personal image\"), \"personal_image\")\n              }), /*#__PURE__*/_jsx(Grid, {\n                md: 6,\n                children: renderUploadButton(1, translate(\"Upload ID image\"), \"id_image\")\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              id: \"certificate\",\n              style: spacer\n            }), renderUploadButton(3, translate(\"Upload Other Attachment\"), \"other_attachment\"), /*#__PURE__*/_jsx(\"div\", {\n              id: \"certificate\",\n              style: spacer\n            }), renderAttachment()]\n          })\n        })\n      })]\n    }), /*#__PURE__*/_jsx(AddAttachmentModal, {\n      title: translate(\"Add Attachment\"),\n      open: open,\n      handleClose: handleClose,\n      formScheme: AddAttachmentScheme,\n      initValues: initAddAttachment,\n      submitForm: submitAddOtherAttachment\n    }, \"addAttachment\")]\n  });\n};\n\nCandidateCandidateAttachmentsList.auth = true;\nCandidateCandidateAttachmentsList.layout = Admin;\nexport default CandidateCandidateAttachmentsList;","map":null,"metadata":{},"sourceType":"module"}