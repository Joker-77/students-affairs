{"ast":null,"code":"import apiConnector from \"./TokenizedApiClient\";\nexport default class UserService {\n  static async GetAll() {\n    const listUrl = process.env.LIST_User_URL;\n    console.log(listUrl);\n    return await apiConnector.get(listUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Add(payload) {\n    const createUrl = process.env.LIST_User_URL + \"/create\";\n    console.log(createUrl);\n    return await apiConnector.post(createUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Edit(payload) {\n    const editUrl = process.env.LIST_User_URL + \"/edit\";\n    return await apiConnector.post(editUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Get(id) {\n    const detailUrl = process.env.LIST_User_URL + \"/details?id=\" + `${id}`;\n    return await apiConnector.get(detailUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async GetRoles() {\n    const detailUrl = \"/roles\";\n    return await apiConnector.get(detailUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async AssignUserToRole(payload) {\n    const detailUrl = \"/user/assign-role\";\n    return await apiConnector.post(detailUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async RevokeRole(payload) {\n    const detailUrl = \"/user/revoke-role\";\n    return await apiConnector.post(detailUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async GetPermissions(roleId) {\n    let detailUrl = \"/permissions\";\n    if (!!roleId) detailUrl += \"?role_id=\" + roleId;\n    return await apiConnector.get(detailUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async AssignUserToPermission(payload) {\n    const detailUrl = \"/user/assign-permission\";\n    return await apiConnector.post(detailUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n}","map":{"version":3,"sources":["F:/StudentAffairs/students/students/Services/UserService.tsx"],"names":["apiConnector","UserService","GetAll","listUrl","process","env","LIST_User_URL","console","log","get","then","response","data","success","result","catch","error","Add","payload","createUrl","post","Edit","editUrl","Get","id","detailUrl","GetRoles","AssignUserToRole","RevokeRole","GetPermissions","roleId","AssignUserToPermission"],"mappings":"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","sourcesContent":["import apiConnector from \"./TokenizedApiClient\";\r\nimport { ApiResponse } from \"../Models/ApiResponse/ApiResponse\";\r\n\r\nexport default class UserService {\r\n  static async GetAll(): Promise<ApiResponse> {\r\n    const listUrl = process.env.LIST_User_URL as string;\r\n    console.log(listUrl);\r\n    return await apiConnector\r\n      .get(listUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n  static async Add(payload): Promise<ApiResponse> {\r\n    const createUrl = process.env.LIST_User_URL + \"/create\" as string;\r\n    console.log(createUrl);\r\n    return await apiConnector\r\n      .post(createUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Edit(payload): Promise<ApiResponse> {\r\n    const editUrl = process.env.LIST_User_URL + \"/edit\" as string;\r\n    return await apiConnector\r\n      .post(editUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Get(id: string): Promise<ApiResponse> {\r\n    const detailUrl = (process.env.LIST_User_URL + \"/details?id=\" as string) + `${id}`;\r\n    return await apiConnector\r\n      .get(detailUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async GetRoles(): Promise<ApiResponse> {\r\n    const detailUrl = \"/roles\";\r\n    return await apiConnector\r\n      .get(detailUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async AssignUserToRole(payload): Promise<ApiResponse> {\r\n    const detailUrl = \"/user/assign-role\";\r\n    return await apiConnector\r\n      .post(detailUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async RevokeRole(payload) : Promise<ApiResponse> {\r\n    const detailUrl = \"/user/revoke-role\";\r\n    return await apiConnector\r\n      .post(detailUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async GetPermissions(roleId?: string): Promise<ApiResponse> {\r\n    let detailUrl = \"/permissions\";\r\n    if (!!roleId)\r\n      detailUrl += \"?role_id=\" + roleId;\r\n    return await apiConnector\r\n      .get(detailUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async AssignUserToPermission(payload): Promise<ApiResponse> {\r\n    const detailUrl = \"/user/assign-permission\";\r\n    return await apiConnector\r\n      .post(detailUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n  static async RevokePermission(payload)\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}