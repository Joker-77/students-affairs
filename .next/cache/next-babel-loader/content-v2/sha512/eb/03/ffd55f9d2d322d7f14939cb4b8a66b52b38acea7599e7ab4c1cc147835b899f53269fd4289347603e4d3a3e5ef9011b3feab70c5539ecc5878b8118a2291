{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\"; // Authentication layout components\n\nimport CoverLayout from \"../../../components/CoverLayout\";\nimport { Box, Typography, TextField, Select, MenuItem } from \"@material-ui/core\";\nimport { Switch } from \"@material-ui/core\";\nimport SuiButton from \"../../../components/SuiButton\";\nimport \"../../../assets/css/main.css\";\nimport { selectSessionKey, useAppDispatch, useAppSelector, setSessionKey, updateProfile, selectUserProfile } from \"../../../redux\";\nimport LoginService from \"../../../Services/LoginService\";\nimport { useTranslation } from \"../../../Utility/Translations/useTranslation\";\nimport { toast } from \"react-toastify\"; // Images\n\nvar bg7 = require(\"./../../../assets/img/curved-images/HIAST.jpg\");\n\nfunction SignIn(props) {\n  var _useTranslation = useTranslation(),\n      translate = _useTranslation.translate;\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale;\n\n  var dispatch = useAppDispatch();\n\n  var _useState = useState(true),\n      rememberMe = _useState[0],\n      setRememberMe = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      _currentSessionKey = _useState2[0],\n      setCurrentSessionKey = _useState2[1];\n\n  var sessionKey = useAppSelector(selectSessionKey);\n  var userProfile = useAppSelector(selectUserProfile);\n  useEffect(function () {\n    if (true) {\n      // Perform localStorage action\n      var profile = JSON.parse(localStorage.getItem(\"logged_in_profile\"));\n      var key = localStorage.getItem(\"sa_access_token\");\n\n      if (!!key && key !== \"undefined\") {\n        // dispatch(setSessionKey(key));\n        router.push(\"/students_affairs/dashboard\");\n      }\n    }\n  }, []);\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState([]),\n      years = _useState4[0],\n      setYears = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      selectedYear = _useState5[0],\n      setSelectedYear = _useState5[1];\n\n  var initialValues = {\n    username: \"\",\n    // email: \"\",\n    password: \"\",\n    rememberMe: false\n  };\n\n  var handleSetRememberMe = function handleSetRememberMe() {\n    return setRememberMe(!rememberMe);\n  };\n\n  var router = useRouter();\n\n  function fetchApi() {\n    return _fetchApi.apply(this, arguments);\n  }\n\n  function _fetchApi() {\n    _fetchApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return LoginService.GetYears();\n\n            case 2:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchApi.apply(this, arguments);\n  }\n\n  var handleChangeYear = function handleChangeYear(event) {\n    setSelectedYear(event.target.value);\n  };\n\n  useEffect(function () {\n    setLoading(true);\n  }, []);\n  var SignInSchema = Yup.object().shape({\n    username: Yup.string().required(translate(\"{0} is required\", \"Username\")),\n    // .required(\"Email is required\"),\n    // email: Yup.string()\n    //   .email(\"Must be a valid email\")\n    //   .required(\"Email is required\"),\n    password: Yup.string().required(translate(\"{0} is required\", \"Password\")).min(4, translate(\"Password is too short - should be {0} chars minimum\", \"4\", false))\n  });\n\n  var submitForm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              LoginService.Login({\n                email: values.username,\n                password: values.password\n              }).then(function (response) {\n                if (response.success) {\n                  localStorage.setItem(\"sa_access_token\", response.result.token);\n                  localStorage.setItem(\"logged_in_profile\", JSON.stringify(response.result));\n                  dispatch(updateProfile(response.result));\n                  dispatch(setSessionKey(response.result.token));\n                  router.push(\"/students_affairs/dashboard\");\n                } else {\n                  toast.error(response);\n                  setSubmitting(false);\n                }\n              }).catch(function (e) {\n                throw new Error(e);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitForm(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return !sessionKey && /*#__PURE__*/_jsx(CoverLayout, {\n    title: translate(\"Welcome\"),\n    description: translate(\"Enter your credentials to sign in\"),\n    image: bg7,\n    children: /*#__PURE__*/_jsx(Box, {\n      children: /*#__PURE__*/_jsx(Formik, {\n        initialValues: initialValues,\n        validationSchema: SignInSchema,\n        onSubmit: function onSubmit(values, _ref2) {\n          var setSubmitting = _ref2.setSubmitting;\n          submitForm(values, setSubmitting);\n        },\n        children: function children(formik) {\n          var values = formik.values,\n              handleChange = formik.handleChange,\n              handleSubmit = formik.handleSubmit,\n              errors = formik.errors,\n              touched = formik.touched,\n              handleBlur = formik.handleBlur,\n              isSubmitting = formik.isSubmitting,\n              isValid = formik.isValid,\n              dirty = formik.dirty;\n          return /*#__PURE__*/_jsxs(Form, {\n            children: [!isLoading && /*#__PURE__*/_jsxs(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsx(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsx(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: \"Year\"\n                })\n              }), /*#__PURE__*/_jsx(Select, {\n                labelId: \"demo-simple-select-label\",\n                id: \"demo-simple-select\",\n                value: selectedYear,\n                label: \"Year\",\n                onChange: handleChangeYear,\n                children: years.map(function (item, ind) {\n                  return /*#__PURE__*/_jsx(MenuItem, {\n                    value: item.id,\n                    children: item.year\n                  });\n                })\n              })]\n            }), /*#__PURE__*/_jsxs(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsx(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsx(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: translate(\"Username\")\n                })\n              }), /*#__PURE__*/_jsx(TextField, {\n                onChange: handleChange,\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"text\",\n                id: \"username\",\n                name: \"username\",\n                value: values.username,\n                onBlur: handleBlur,\n                error: Boolean(touched.username && errors.username),\n                helperText: touched.username && errors.username,\n                placeholder: translate(\"Username\"),\n                fullWidth: true\n              })]\n            }), /*#__PURE__*/_jsxs(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsx(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsx(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: translate(\"Password\")\n                })\n              }), /*#__PURE__*/_jsx(TextField, {\n                id: \"password\",\n                name: \"password\",\n                type: \"password\",\n                variant: \"outlined\",\n                size: \"small\",\n                placeholder: translate(\"Password\"),\n                onChange: handleChange,\n                onBlur: handleBlur,\n                error: Boolean(errors.password && touched.password),\n                helperText: touched.password && errors.password,\n                fullWidth: true\n              })]\n            }), /*#__PURE__*/_jsxs(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsx(Switch, {}), /*#__PURE__*/_jsxs(Typography, {\n                variant: \"button\",\n                style: {\n                  fontWeight: \"regular\",\n                  cursor: \"pointer\",\n                  userSelect: \"none\"\n                } // onClick={handleSetRememberMe}\n                // sx={{ cursor: \"pointer\", userSelect: \"none\" }}\n                ,\n                children: [\"\\xA0\\xA0\", translate(\"Remember me\")]\n              })]\n            }), /*#__PURE__*/_jsx(Box, {\n              mt: 4,\n              mb: 1,\n              children: isSubmitting ? /*#__PURE__*/_jsx(SuiButton, {\n                disabled: true,\n                variant: \"gradient\",\n                color: \"info\",\n                fullWidth: true,\n                children: translate(\"Signing in...\")\n              }) : /*#__PURE__*/_jsx(SuiButton, {\n                disabled: !(dirty && isValid),\n                type: \"submit\",\n                variant: \"gradient\",\n                color: \"info\",\n                fullWidth: true,\n                children: translate(\"Sign in\")\n              })\n            })]\n          });\n        }\n      })\n    })\n  });\n}\n\nexport default SignIn;","map":null,"metadata":{},"sourceType":"module"}