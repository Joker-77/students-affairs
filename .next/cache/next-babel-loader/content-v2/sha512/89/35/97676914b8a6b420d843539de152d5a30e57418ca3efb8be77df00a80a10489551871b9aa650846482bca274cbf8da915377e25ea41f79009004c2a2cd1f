{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport RegistrationDesireService from \"../../../../Services/RegistrationDesireService\";\nimport AddRegistrationDesireModal from \"../../../../components/Modals/AddRegistrationDesireModal\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\n\nconst CandidateRegistrationDesireList = ({\n  candidateId\n}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [selectedRegistrationDesire, setSelectedRegistrationDesire] = React.useState(0);\n  const [initAddRegistrationDesire, setInitAddRegistrationDesire] = React.useState({\n    id: 0,\n    order: 0,\n    desire: \"\",\n    candidate_id: +candidateId\n  });\n  const AddRegistrationDesireScheme = Yup.object().shape({\n    order: Yup.string().required(translate(\"{0} is required\", \"Order\")),\n    desire: Yup.string().required(translate(\"{0} is required\", \"Desire\")),\n    candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\"))\n  });\n  const UpdateRegistrationDesireScheme = Yup.object().shape({\n    order: Yup.string().required(translate(\"{0} is required\", \"Order\")),\n    desire: Yup.string().required(translate(\"{0} is required\", \"Desire\")),\n    candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\"))\n  });\n\n  const submitAddRegistrationDesire = async (values, setSubmitting) => {\n    setSubmitting(true);\n    RegistrationDesireService.Add(values).then(res => {\n      console.log(\"RegistrationDesire\", res);\n      const RegistrationDesireCopy = [res.result, ...RegistrationDesires];\n      setRegistrationDesires(RegistrationDesireCopy);\n      setOpen(false);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /************************** Data ****************************/\n\n\n  useEffect(() => {\n    RegistrationDesireService.GetAll(candidateId).then(res => {\n      console.log(\"RegistrationDesire\", res);\n      setRegistrationDesires(res.result);\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  /************************** Handle edit data ****************************/\n\n  const [openUpdateRegistrationDesire, setOpenUpdateRegistrationDesire] = React.useState(false);\n  const [openModalForDetails, setOpenModalForDetails] = React.useState(false);\n\n  const handleOpenUpdateRegistrationDesire = data => {\n    console.log(\"data\", data);\n    setInitUpdateRegistrationDesire({\n      id: data.id,\n      desire: data.desire,\n      order: data.order,\n      candidate_id: data.candidate_id\n    });\n    setOpenUpdateRegistrationDesire(true);\n  };\n\n  const handleCloseUpdateRegistrationDesire = () => {\n    setOpenModalForDetails(false);\n    setDisabled(false);\n    setOpenUpdateRegistrationDesire(false);\n  };\n\n  const [initUpdateRegistrationDesire, setInitUpdateRegistrationDesire] = React.useState({\n    id: 0,\n    desire: \"\",\n    order: 0,\n    candidate_id: +candidateId\n  });\n\n  const submitUpdateRegistrationDesire = async (values, setSubmitting) => {\n    setSubmitting(true);\n    console.log(\"values\", values);\n    RegistrationDesireService.Edit(values).then(res => {\n      console.log(\"RegistrationDesire\", res);\n      const RegistrationDesireCopy = [...RegistrationDesires].map(item => item.id == res.result.id ? res.result : item);\n      setRegistrationDesires(RegistrationDesireCopy);\n      setOpenUpdateRegistrationDesire(false);\n    }).catch(error => {\n      console.error(\"roles\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /************************** Finish Handle edit data ****************************/\n\n\n  const [disabled, setDisabled] = React.useState(false);\n\n  const handleDetails = data => {\n    setOpenModalForDetails(true);\n    setDisabled(true);\n    handleOpenUpdateRegistrationDesire(data);\n  };\n\n  const [RegistrationDesires, setRegistrationDesires] = React.useState(null);\n\n  const renderRegistrationDesire = () => {\n    if (RegistrationDesires != null && RegistrationDesires.length > 0) {\n      let columns = [{\n        title: translate(\"Id\"),\n        field: \"id\",\n        hidden: true\n      }, {\n        title: translate(\"Desire\"),\n        field: \"desire\",\n        render: rowData => translate(rowData.desire)\n      }, {\n        title: translate(\"Order\"),\n        field: \"order\"\n      } // {\n      //   title: \"candidate_id\",\n      //   field: \"candidate_id\",\n      // },\n      ];\n      let data = RegistrationDesires;\n      let options = {\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        maxBodyHeight: \"500px\"\n      };\n      return /*#__PURE__*/_jsx(ActionTable, {\n        Title: translate(\"Registration Desire List\"),\n        Columns: columns,\n        Data: data,\n        Options: options,\n        Actions: [{\n          tooltip: translate(\"Registration Desire Details\"),\n          icon: \"details\",\n          onClick: (evt, data) => handleDetails(data)\n        }, {\n          tooltip: translate(\"Edit Registration Desire\"),\n          icon: \"edit\",\n          onClick: (evt, data) => handleOpenUpdateRegistrationDesire(data)\n        }]\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  };\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    children: [/*#__PURE__*/_jsxs(GridItem, {\n      md: 12,\n      children: [/*#__PURE__*/_jsx(Button, {\n        disabled: false,\n        variant: \"contained\",\n        className: classes.submitBtn,\n        onClick: handleOpen,\n        children: translate(\"Add New Registration Desire\")\n      }), renderRegistrationDesire()]\n    }), /*#__PURE__*/_jsx(AddRegistrationDesireModal, {\n      disabled: disabled,\n      title: translate(\"Add Registration Desire\"),\n      open: open,\n      formScheme: AddRegistrationDesireScheme,\n      handleClose: handleClose,\n      initValues: initAddRegistrationDesire,\n      submitForm: submitAddRegistrationDesire\n    }, \"addRegistration Desire\"), /*#__PURE__*/_jsx(AddRegistrationDesireModal, {\n      disabled: disabled,\n      title: !openModalForDetails ? translate(\"Update Registration Desire\") : translate(\"Registration Desire Details\"),\n      open: openUpdateRegistrationDesire,\n      formScheme: UpdateRegistrationDesireScheme,\n      handleClose: handleCloseUpdateRegistrationDesire,\n      initValues: initUpdateRegistrationDesire,\n      submitForm: submitUpdateRegistrationDesire\n    }, \"updateRegistrationDesire\")]\n  });\n};\n\nCandidateRegistrationDesireList.auth = true;\nCandidateRegistrationDesireList.layout = Admin;\nexport default CandidateRegistrationDesireList;","map":null,"metadata":{},"sourceType":"module"}