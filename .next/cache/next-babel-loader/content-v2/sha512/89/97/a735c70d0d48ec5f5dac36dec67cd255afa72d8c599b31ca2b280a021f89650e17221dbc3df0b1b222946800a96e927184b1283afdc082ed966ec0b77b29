{"ast":null,"code":"import { useRouter } from 'next/router';\nimport dictionary from './dictionary';\nexport const useTranslation = () => {\n  const router = useRouter();\n  const locales = (router === null || router === void 0 ? void 0 : router.locales) || [];\n  const defaultLocale = (router === null || router === void 0 ? void 0 : router.defaultLocale) || 'ar';\n  const nextRouter = router;\n  const locale = locales.includes(nextRouter.locale || '') ? nextRouter.locale : defaultLocale;\n\n  const translateOrTerm = term => {\n    const translation = dictionary[locale][term];\n    return Boolean(translation) ? translation : term;\n  };\n\n  return {\n    translate: (term, param = null, translateParam = true) => {\n      let toBeReturned = translateOrTerm(term);\n\n      if (param) {\n        let toBeReplaced = translateParam ? translateOrTerm(param) : param;\n        toBeReturned = toBeReturned.replace('{0}', toBeReplaced);\n      }\n\n      return toBeReturned;\n    }\n  };\n};","map":{"version":3,"sources":["F:/StudentAffairs/students/students/Utility/Translations/useTranslation.js"],"names":["useRouter","dictionary","useTranslation","router","locales","defaultLocale","nextRouter","locale","includes","translateOrTerm","term","translation","Boolean","translate","param","translateParam","toBeReturned","toBeReplaced","replace"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,OAAO,GAAG,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,OAAR,KAAmB,EAAnC;AACA,QAAMC,aAAa,GAAG,CAAAF,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEE,aAAR,KAAyB,IAA/C;AACA,QAAMC,UAAU,GAAGH,MAAnB;AACA,QAAMI,MAAM,GAAGH,OAAO,CAACI,QAAR,CAAiBF,UAAU,CAACC,MAAX,IAAqB,EAAtC,IACXD,UAAU,CAACC,MADA,GAEXF,aAFJ;;AAIA,QAAMI,eAAe,GAAIC,IAAD,IAAU;AAChC,UAAMC,WAAW,GAAGV,UAAU,CAACM,MAAD,CAAV,CAAmBG,IAAnB,CAApB;AACA,WAAOE,OAAO,CAACD,WAAD,CAAP,GAAuBA,WAAvB,GAAqCD,IAA5C;AACD,GAHD;;AAKA,SAAO;AACLG,IAAAA,SAAS,EAAE,CAACH,IAAD,EAAOI,KAAK,GAAG,IAAf,EAAqBC,cAAc,GAAG,IAAtC,KAA+C;AACxD,UAAIC,YAAY,GAAGP,eAAe,CAACC,IAAD,CAAlC;;AACA,UAAGI,KAAH,EAAU;AACR,YAAIG,YAAY,GAAGF,cAAc,GAAGN,eAAe,CAACK,KAAD,CAAlB,GAA4BA,KAA7D;AACAE,QAAAA,YAAY,GAAGA,YAAY,CAACE,OAAb,CAAqB,KAArB,EAA4BD,YAA5B,CAAf;AACD;;AACD,aAAOD,YAAP;AACD;AARI,GAAP;AAUD,CAxBM","sourcesContent":["import { useRouter } from 'next/router'\r\nimport dictionary from './dictionary'\r\n\r\nexport const useTranslation = () => {\r\n  const router = useRouter();\r\n  const locales = router?.locales || [];\r\n  const defaultLocale = router?.defaultLocale || 'ar';\r\n  const nextRouter = router;\r\n  const locale = locales.includes(nextRouter.locale || '')\r\n    ? nextRouter.locale\r\n    : defaultLocale;\r\n\r\n  const translateOrTerm = (term) => {\r\n    const translation = dictionary[locale][term];\r\n    return Boolean(translation) ? translation : term;\r\n  }\r\n\r\n  return {\r\n    translate: (term, param = null, translateParam = true) => {\r\n      let toBeReturned = translateOrTerm(term);\r\n      if(param) {\r\n        let toBeReplaced = translateParam ? translateOrTerm(param) : param;\r\n        toBeReturned = toBeReturned.replace('{0}', toBeReplaced);\r\n      }\r\n      return toBeReturned;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}