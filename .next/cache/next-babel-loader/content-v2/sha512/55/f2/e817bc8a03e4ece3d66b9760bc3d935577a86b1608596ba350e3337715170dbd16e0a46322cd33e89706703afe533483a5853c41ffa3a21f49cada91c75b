{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useSession } from \"next-auth/react\";\nimport { useRouter } from \"next/router\";\nimport { selectSessionKey, useAppDispatch, useAppSelector } from \"../../redux\";\nexport default function AuthProvider(_ref) {\n  var children = _ref.children;\n  var router = useRouter();\n\n  var _useSession = useSession(),\n      session = _useSession.data,\n      status = _useSession.status;\n\n  var isUser = !!(session !== null && session !== void 0 && session.user);\n  var dispatch = useAppDispatch();\n  var sessionKey = useAppSelector(selectSessionKey);\n  console.log(\"session\", status, session);\n  React.useEffect(function () {\n    var _session$data, _session$data$user;\n\n    if ((session === null || session === void 0 ? void 0 : session.status) === \"unauthenticated\") router.push(\"/authentication/sign-in\");\n    localStorage.setItem(\"sa_access_token\", (_session$data = session.data) === null || _session$data === void 0 ? void 0 : (_session$data$user = _session$data.user) === null || _session$data$user === void 0 ? void 0 : _session$data$user.token);\n  });\n  if (isUser) return children;\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Loading...\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}