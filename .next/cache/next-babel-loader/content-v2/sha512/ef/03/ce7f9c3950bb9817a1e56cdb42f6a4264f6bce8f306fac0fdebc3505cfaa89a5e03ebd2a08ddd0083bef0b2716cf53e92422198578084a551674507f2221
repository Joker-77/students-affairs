{"ast":null,"code":"import axios from \"axios\";\nimport https from \"https\";\nimport { toast } from \"react-toastify\";\nconst configs = {\n  baseURL: `${process.env.BASE_URL}/api`,\n  httpsAgent: new https.Agent({\n    rejectUnauthorized: false\n  })\n};\nconst instance = axios.create(configs);\ninstance.defaults.headers.common[\"Content-Type\"] = \"application/json;charset=utf-8\"; // instance.defaults.timeout = 2500;\n\ninstance.interceptors.response.use(response => {\n  if (!response.data.success) {\n    let result = response.data;\n    return result;\n  }\n\n  return response;\n}, error => {\n  console.clear();\n  console.error(error);\n\n  if (error.response.status === 401) {\n    toast(\"You're unauthorized to do this!\", {\n      type: \"error\"\n    });\n  } else if (error.response.status === 403) {\n    toast(\"Session expired! Please login again.\", {\n      type: \"error\"\n    });\n  } else {\n    if (!error.response.data.success) {\n      let result = error.response.data;\n      toast(result.error.message, {\n        type: \"error\"\n      });\n    }\n  }\n});\nexport default instance;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/Services/ApiClient.tsx"],"names":["axios","https","toast","configs","baseURL","process","env","BASE_URL","httpsAgent","Agent","rejectUnauthorized","instance","create","defaults","headers","common","interceptors","response","use","data","success","result","error","console","clear","status","type","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,OAA2B,GAAG;AAClCC,EAAAA,OAAO,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,MADC;AAElCC,EAAAA,UAAU,EAAE,IAAIP,KAAK,CAACQ,KAAV,CAAgB;AAC1BC,IAAAA,kBAAkB,EAAE;AADM,GAAhB;AAFsB,CAApC;AAMA,MAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAaT,OAAb,CAAjB;AACAQ,QAAQ,CAACE,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiC,cAAjC,IACE,gCADF,C,CAEA;;AAEAJ,QAAQ,CAACK,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACGD,QAAD,IAAc;AACZ,MAAI,CAACA,QAAQ,CAACE,IAAT,CAAcC,OAAnB,EAA4B;AAC1B,QAAIC,MAAM,GAAGJ,QAAQ,CAACE,IAAtB;AACA,WAAOE,MAAP;AACD;;AACD,SAAOJ,QAAP;AACD,CAPH,EAQGK,KAAD,IAAW;AACTC,EAAAA,OAAO,CAACC,KAAR;AACAD,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;;AACA,MAAIA,KAAK,CAACL,QAAN,CAAeQ,MAAf,KAA0B,GAA9B,EAAmC;AACjCvB,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AAAEwB,MAAAA,IAAI,EAAE;AAAR,KAApC,CAAL;AACD,GAFD,MAEO,IAAIJ,KAAK,CAACL,QAAN,CAAeQ,MAAf,KAA0B,GAA9B,EAAmC;AACxCvB,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAAEwB,MAAAA,IAAI,EAAE;AAAR,KAAzC,CAAL;AACD,GAFM,MAEA;AACL,QAAI,CAACJ,KAAK,CAACL,QAAN,CAAeE,IAAf,CAAoBC,OAAzB,EAAkC;AAChC,UAAIC,MAAM,GAAGC,KAAK,CAACL,QAAN,CAAeE,IAA5B;AACAjB,MAAAA,KAAK,CAACmB,MAAM,CAACC,KAAP,CAAaK,OAAd,EAAuB;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAvB,CAAL;AACD;AACF;AACF,CArBH;AAwBA,eAAef,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport https from \"https\";\r\nimport { AxiosRequestConfig } from \"axios/index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst configs: AxiosRequestConfig = {\r\n  baseURL: `${process.env.BASE_URL}/api`,\r\n  httpsAgent: new https.Agent({\r\n    rejectUnauthorized: false,\r\n  }),\r\n};\r\nconst instance = axios.create(configs);\r\ninstance.defaults.headers.common[\"Content-Type\"] =\r\n  \"application/json;charset=utf-8\";\r\n// instance.defaults.timeout = 2500;\r\n\r\ninstance.interceptors.response.use(\r\n  (response) => {\r\n    if (!response.data.success) {\r\n      let result = response.data;\r\n      return result;\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.clear();\r\n    console.error(error);\r\n    if (error.response.status === 401) {\r\n      toast(\"You're unauthorized to do this!\", { type: \"error\" });\r\n    } else if (error.response.status === 403) {\r\n      toast(\"Session expired! Please login again.\", { type: \"error\" });\r\n    } else {\r\n      if (!error.response.data.success) {\r\n        let result = error.response.data;\r\n        toast(result.error.message, { type: \"error\" });\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}