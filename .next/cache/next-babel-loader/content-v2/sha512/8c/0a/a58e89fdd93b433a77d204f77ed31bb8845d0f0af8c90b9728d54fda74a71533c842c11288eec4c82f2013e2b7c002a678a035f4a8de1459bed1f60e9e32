{"ast":null,"code":"import axios from \"axios\";\nimport https from \"https\";\nimport { toast } from \"react-toastify\";\nconst configs = {\n  baseURL: `${process.env.BASE_URL}/api`,\n  httpsAgent: new https.Agent({\n    rejectUnauthorized: false\n  })\n};\nconst instance = axios.create(configs);\ninstance.defaults.headers.common[\"Content-Type\"] = \"application/json;charset=utf-8\"; // instance.defaults.timeout = 2500;\n\ninstance.interceptors.response.use(response => {\n  if (!response.data.success) {\n    let result = response.data;\n    return result;\n  }\n\n  return response;\n}, error => {\n  if (error.response.status === 401) {\n    toast('You\\'re unauthorized to do this!', {\n      type: 'error'\n    });\n  } else if (error.response.status === 403) {\n    toast('Session expired! Please login again.', {\n      type: 'error'\n    });\n  } else {\n    if (!error.response.data.success) {\n      let result = error.response.data;\n      toast(result.error.message, {\n        type: 'error'\n      });\n    }\n  }\n});\nexport default instance;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/Services/ApiClient.tsx"],"names":["axios","https","toast","configs","baseURL","process","env","BASE_URL","httpsAgent","Agent","rejectUnauthorized","instance","create","defaults","headers","common","interceptors","response","use","data","success","result","error","status","type","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,OAA2B,GAAG;AAClCC,EAAAA,OAAO,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,MADC;AAElCC,EAAAA,UAAU,EAAE,IAAIP,KAAK,CAACQ,KAAV,CAAgB;AAC1BC,IAAAA,kBAAkB,EAAE;AADM,GAAhB;AAFsB,CAApC;AAMA,MAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAaT,OAAb,CAAjB;AACAQ,QAAQ,CAACE,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiC,cAAjC,IAAmD,gCAAnD,C,CACA;;AAEAJ,QAAQ,CAACK,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACED,QAAQ,IAAI;AACR,MAAI,CAACA,QAAQ,CAACE,IAAT,CAAcC,OAAnB,EAA4B;AACxB,QAAIC,MAAM,GAAGJ,QAAQ,CAACE,IAAtB;AACA,WAAOE,MAAP;AACH;;AACD,SAAOJ,QAAP;AACH,CAPH,EAQEK,KAAK,IAAI;AACP,MAAIA,KAAK,CAACL,QAAN,CAAeM,MAAf,KAA0B,GAA9B,EAAmC;AACjCrB,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AAACsB,MAAAA,IAAI,EAAE;AAAP,KAArC,CAAL;AACD,GAFD,MAEO,IAAIF,KAAK,CAACL,QAAN,CAAeM,MAAf,KAA0B,GAA9B,EAAmC;AACtCrB,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAACsB,MAAAA,IAAI,EAAE;AAAP,KAAzC,CAAL;AACH,GAFM,MAGF;AACD,QAAI,CAACF,KAAK,CAACL,QAAN,CAAeE,IAAf,CAAoBC,OAAzB,EAAkC;AAC9B,UAAIC,MAAM,GAAGC,KAAK,CAACL,QAAN,CAAeE,IAA5B;AACAjB,MAAAA,KAAK,CAACmB,MAAM,CAACC,KAAP,CAAaG,OAAd,EAAuB;AAACD,QAAAA,IAAI,EAAE;AAAP,OAAvB,CAAL;AACH;AACJ;AACF,CApBH;AAsBA,eAAeb,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport https from \"https\";\r\nimport { AxiosRequestConfig } from \"axios/index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst configs: AxiosRequestConfig = {\r\n  baseURL: `${process.env.BASE_URL}/api`,\r\n  httpsAgent: new https.Agent({\r\n    rejectUnauthorized: false,\r\n  }),\r\n};\r\nconst instance = axios.create(configs);\r\ninstance.defaults.headers.common[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\n// instance.defaults.timeout = 2500;\r\n\r\ninstance.interceptors.response.use(\r\n  response => {\r\n      if (!response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n      }\r\n      return response;\r\n  },\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      toast('You\\'re unauthorized to do this!', {type: 'error'})\r\n    } else if (error.response.status === 403) {\r\n        toast('Session expired! Please login again.', {type: 'error'})\r\n    }\r\n    else {\r\n        if (!error.response.data.success) {\r\n            let result = error.response.data;\r\n            toast(result.error.message, {type: 'error'})\r\n        }\r\n    }\r\n  });\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}