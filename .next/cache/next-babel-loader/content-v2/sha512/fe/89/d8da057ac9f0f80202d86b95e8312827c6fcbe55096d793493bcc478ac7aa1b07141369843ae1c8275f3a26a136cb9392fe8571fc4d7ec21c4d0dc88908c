{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { Tab, Tabs, AppBar, Button } from \"@material-ui/core\";\nimport Admin from \"../../../layouts/Admin\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport TabPanel from \"../../../components/TabPanel/TabPanel\";\nimport styles from \"../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../components/Grid/GridItem.js\";\nimport Placeholder from \"../../../Utility/Placeholders\";\nimport RoleServices from \"../../../Services/RoleService\";\nimport ActionTable from \"../../../components/MaterialTable/ActionTable\";\nimport AddRoleModal from \"../../../components/Modals/AddRoleModal\";\nimport DeleteDialog from \"../../../components/Modals/DeleteDialog\";\nimport PermissionServices from \"../../../Services/PermissionService\";\n\nvar RolesMng = function RolesMng(_ref) {\n  var value = _ref.value;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openUpdate = _React$useState4[0],\n      setOpenUpdate = _React$useState4[1];\n\n  var handleOpenUpdate = function handleOpenUpdate() {\n    setOpenUpdate(true);\n  };\n\n  var handleCloseUpdate = function handleCloseUpdate() {\n    setOpenUpdate(false);\n  };\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      openDelete = _React$useState6[0],\n      setOpenDelete = _React$useState6[1];\n\n  var handleAlertDeleteOpen = function handleAlertDeleteOpen() {\n    setOpenDelete(true);\n  };\n\n  var handleAlertDeleteClose = function handleAlertDeleteClose() {\n    setOpenDelete(false);\n  };\n\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n\n  var _React$useState7 = React.useState(value),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      privatevalue = _React$useState8[0],\n      setValue = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedYear = _React$useState10[0],\n      setYear = _React$useState10[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var handleChangeIndex = function handleChangeIndex(index) {\n    setValue(index);\n  };\n\n  var a11yProps = function a11yProps(index) {\n    return {\n      id: \"full-width-tab-\".concat(index),\n      \"aria-controls\": \"full-width-tabpanel-\".concat(index)\n    };\n  };\n  /*********************************** Role name change ********************************/\n\n\n  var initialAddRoleValues = {\n    name: \"\"\n  };\n\n  var _React$useState11 = React.useState({\n    id: 0,\n    name: \"\"\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      initUpdateRole = _React$useState12[0],\n      setInitUpdateRole = _React$useState12[1];\n\n  var AddRoleSchema = Yup.object().shape({\n    name: Yup.string().required(\"name is required\")\n  });\n  var UpdateRoleSchema = Yup.object().shape({\n    id: Yup.number().required(\"id is required\"),\n    name: Yup.string().required(\"name is required\")\n  });\n\n  var submitAddRoleForm = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"values\", values);\n              setSubmitting(false);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitAddRoleForm(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var submitUpdateRole = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"values\", values);\n              setSubmitting(false);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function submitUpdateRole(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /*********************************** Data ********************************/\n\n\n  var _React$useState13 = React.useState(null),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      roles = _React$useState14[0],\n      setRoles = _React$useState14[1];\n\n  var _React$useState15 = React.useState(null),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      permissions = _React$useState16[0],\n      setPermissions = _React$useState16[1];\n\n  var metData = [\"Id\", \"Name\", \"Status\"];\n  useEffect(function () {\n    var roles = null;\n    RoleServices.GetAll().then(function (res) {\n      console.log(\"roles\", res);\n      setRoles(res.result);\n    }).catch(function (error) {\n      console.error(\"roles\", error);\n    });\n    PermissionServices.GetAll().then(function (res) {\n      console.log(\"permissions\", res);\n      setPermissions(res.result);\n    }).catch(function (error) {\n      console.error(\"permissions\", error);\n    });\n  }, []);\n\n  var handleUpdateRole = function handleUpdateRole(_id, _val) {\n    setInitUpdateRole({\n      id: _id,\n      name: _val\n    });\n    setOpenUpdate(true);\n  };\n\n  var _React$useState17 = React.useState(\"\"),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      confirmDeleteMsg = _React$useState18[0],\n      setConfirmDeleteMsg = _React$useState18[1];\n\n  var _React$useState19 = React.useState(null),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      confirmDeleteId = _React$useState20[0],\n      setConfirmDeleteId = _React$useState20[1];\n\n  var handleDeleteRole = function handleDeleteRole(id, name) {\n    setConfirmDeleteMsg(\"Are you sure you want to delete role: \".concat(name, \"?\"));\n    setConfirmDeleteId(id);\n    setOpenDelete(true);\n  };\n\n  var handleSubmitDelete = function handleSubmitDelete() {\n    setOpenDelete(false);\n    alert(confirmDeleteId);\n  };\n\n  var renderRoles = function renderRoles() {\n    if (roles != null && roles.length > 0) {\n      var columns = [{\n        title: \"Id\",\n        field: \"id\"\n      }, {\n        title: \"Name\",\n        field: \"name\"\n      } // {\n      //   title: \"Name\",\n      //   field: \"name\",\n      //   render: (rowData) => (\n      //     <TextField\n      //       value={rowData.name}\n      //       onChange={(value) => handleUpdateRole(rowData.id, value)}\n      //       disabled={updating}\n      //     />\n      //   ),\n      // },\n      ];\n      var data = roles;\n      var options = {\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        maxBodyHeight: \"500px\"\n      };\n      return /*#__PURE__*/_jsx(ActionTable, {\n        Title: \"Roles\",\n        Columns: columns,\n        Data: data,\n        Options: options,\n        Actions: [{\n          tooltip: \"Update Role\",\n          icon: \"edit\",\n          onClick: function onClick(evt, data) {\n            return handleUpdateRole(data.id, data.name);\n          }\n        }, {\n          tooltip: \"Delete Role\",\n          icon: \"delete\",\n          onClick: function onClick(evt, data) {\n            return handleDeleteRole(data.id, data.name);\n          }\n        }]\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  };\n\n  var renderPermissions = function renderPermissions() {\n    if (permissions != null && permissions.length > 0) {\n      var columns = [{\n        title: \"Id\",\n        field: \"id\"\n      }, {\n        title: \"Name\",\n        field: \"name\"\n      }];\n      var data = permissions;\n      var options = {\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        maxBodyHeight: \"500px\"\n      };\n      return /*#__PURE__*/_jsx(ActionTable, {\n        Title: \"Permissions\",\n        Columns: columns,\n        Data: data,\n        Options: options\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  }; // Return\n\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    children: [/*#__PURE__*/_jsxs(GridItem, {\n      md: 12,\n      children: [/*#__PURE__*/_jsx(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxs(Tabs, {\n          value: privatevalue,\n          onChange: handleChange,\n          indicatorColor: \"secondary\",\n          textColor: \"inherit\",\n          variant: \"fullWidth\",\n          \"aria-label\": \"full width tabs example\",\n          children: [/*#__PURE__*/_jsx(Tab, _objectSpread({\n            label: \"Roles\"\n          }, a11yProps(0))), /*#__PURE__*/_jsx(Tab, _objectSpread({\n            label: \"Permissions\"\n          }, a11yProps(1)))]\n        })\n      }), /*#__PURE__*/_jsxs(SwipeableViews, {\n        index: privatevalue,\n        onChangeIndex: handleChangeIndex,\n        children: [/*#__PURE__*/_jsxs(TabPanel, {\n          value: privatevalue,\n          index: 0\n          /* dir={theme.direction} */\n          ,\n          children: [/*#__PURE__*/_jsx(Button, {\n            disabled: false,\n            variant: \"contained\",\n            className: classes.submitBtn,\n            onClick: handleOpen,\n            children: \"Add New Role\"\n          }), renderRoles()]\n        }), /*#__PURE__*/_jsxs(TabPanel, {\n          value: privatevalue,\n          index: 1\n          /* dir={theme.direction} */\n          ,\n          children: [/*#__PURE__*/_jsx(Button, {\n            disabled: false,\n            variant: \"contained\",\n            className: classes.submitBtn,\n            onClick: handleOpen,\n            children: \"Add New Permission\"\n          }), renderPermissions()]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(AddRoleModal, {\n      title: \"Add Role\",\n      open: open,\n      formScheme: AddRoleSchema,\n      handleClose: handleClose,\n      initValues: initialAddRoleValues,\n      submitForm: submitAddRoleForm\n    }, \"addRole\"), /*#__PURE__*/_jsx(AddRoleModal, {\n      title: \"Update Role\",\n      open: openUpdate,\n      formScheme: UpdateRoleSchema,\n      handleClose: handleCloseUpdate,\n      initValues: initUpdateRole,\n      submitForm: submitUpdateRole\n    }, \"editRole\"), /*#__PURE__*/_jsx(DeleteDialog, {\n      open: openDelete,\n      confirmMsg: confirmDeleteMsg,\n      text: \"\",\n      discard: \"Discard\",\n      submitDelete: \"Delete\",\n      handleSubmitDelete: handleSubmitDelete,\n      handleClose: handleAlertDeleteClose\n    }, \"deleteRole\")]\n  });\n};\n\nRolesMng.auth = true;\nRolesMng.layout = Admin;\nexport default RolesMng;","map":null,"metadata":{},"sourceType":"module"}