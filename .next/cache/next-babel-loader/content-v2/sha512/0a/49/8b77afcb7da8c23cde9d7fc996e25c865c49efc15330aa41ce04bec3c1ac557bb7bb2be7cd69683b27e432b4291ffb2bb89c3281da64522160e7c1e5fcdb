{"ast":null,"code":"import apiConnector from \"./TokenizedApiClient\";\nexport default class ObserverService {\n  static async GetAll() {\n    const listUrl = process.env.LIST_OBSERVER_URL;\n    console.clear();\n    console.log(listUrl);\n    return await apiConnector.get(listUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Add(payload) {\n    const addUrl = process.env.ADD_OBSERVER_URL;\n    return await apiConnector.post(addUrl, payload).then(response => {\n      var _response$data;\n\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        let result = response === null || response === void 0 ? void 0 : response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Edit(payload) {\n    const editUrl = process.env.EDIT_OBSERVER_URL;\n    return await apiConnector.post(editUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Get(id) {\n    const detailUrl = process.env.LIST_OBSERVER_URL + `/${id}`;\n    return await apiConnector.get(detailUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async GetLevels() {\n    const listUrl = process.env.LIST_FUNCTIONAL_BODIES_URL;\n    console.clear();\n    console.log(listUrl);\n    return await apiConnector.get(listUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async GetActivities() {\n    const listUrl = process.env.LIST_ACTIVITIES_URL;\n    console.clear();\n    console.log(listUrl);\n    return await apiConnector.get(listUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}