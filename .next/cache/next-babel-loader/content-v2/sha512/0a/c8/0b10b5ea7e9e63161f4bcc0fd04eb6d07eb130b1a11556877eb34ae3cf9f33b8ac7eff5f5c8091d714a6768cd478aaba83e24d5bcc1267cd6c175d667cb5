{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\components\\\\AddAttachment\\\\AddAttachment.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect } from \"react\";\nimport { useTranslation } from \"../../Utility/Translations/useTranslation\";\nimport { Button, Card, Grid, IconButton, makeStyles } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport styles from \"../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport colors from \"../../assets/theme/base/colors\";\nimport * as yup from \"yup\";\nimport { AttachFile, Delete } from \"@material-ui/icons\";\nimport CardHeader from \"../Card/CardHeader\";\nimport CardBody from \"../Card/CardBody\";\nimport GridContainer from \"../Grid/GridContainer\";\nimport GridItem from \"../Grid/GridItem\";\nimport AddAttachmentModal from \"../Modals/AddAttachmentModal\";\nimport Placeholder from \"../../Utility/Placeholders\";\n\nconst AddAttachment = (_ref) => {\n  let {\n    courseId,\n    attachments\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"courseId\", \"attachments\"]);\n\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const [open, setOpen] = React.useState(false);\n  const [body, setBody] = React.useState(false);\n\n  const handleOpen = body => {\n    setOpen(true);\n    setBody(body);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const AddAttachmentScheme = yup.object().shape({\n    type: yup.string().required(translate(\"{0} is required\", \"Name\"))\n  });\n  const [initAddAttachment, setInitAddAttachment] = React.useState({\n    type: 3\n  });\n  const fileItem = {\n    padding: \"5px 20px\",\n    border: \"1px solid #cdcdcd\",\n    borderRadius: 30,\n    marginBottom: 5,\n    marginTop: 5\n  };\n  const fileContainer = {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  };\n  const fileLink = {\n    fontSize: 15,\n    color: \"#000\"\n  };\n  const icon = {\n    width: 20,\n    height: 20,\n    color: colors.error.main\n  };\n  const spacer = {\n    marginBottom: \"25px\"\n  };\n  const [submitting, setSubmitting] = React.useState(null);\n\n  const submitAddOtherAttachment = (values, setLoading) => {\n    submitAddAttachment(_objectSpread(_objectSpread({}, body), {}, {\n      name: values.name\n    }), setLoading);\n  };\n\n  const submitAddAttachment = async (values, setLoading = setSubmitting) => {// setLoading(values.type);\n    // AttachmentService.Add(values)\n    //   .then((res) => {\n    //     console.log(\"Attachment\", res);\n    //     const AttachmentCopy = [res.result, ...Attachments];\n    //     setAttachments(AttachmentCopy);\n    //     handleClose();\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"error\", error);\n    //   })\n    //   .finally(() => {\n    //     values.type !== 3 && setLoading(null);\n    //   });\n  };\n  /************************** Handle delete data ****************************/\n\n\n  const submitDeleteAttachment = async values => {// console.log(\"values\", values);\n    // AttachmentService.Delete(values)\n    //   .then((res) => {\n    //     console.log(\"Attachment\", res);\n    //     const AttachmentCopy = [...Attachments].filter(\n    //       (item) => item.id != values.id\n    //     );\n    //     setAttachments(AttachmentCopy);\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"roles\", error);\n    //   });\n  };\n\n  const getParamsByName = name => name === \"id_image\" ? {\n    type: 1,\n    name: translate(\"ID image\")\n  } : name === \"personal_image\" ? {\n    type: 2,\n    name: translate(\"Personal image\")\n  } : {\n    type: 3,\n    name: \"\"\n  };\n\n  const handleUpload = ({\n    target\n  }) => {\n    const fileReader = new FileReader();\n    const body = getParamsByName(target.name);\n    fileReader.readAsDataURL(target.files[0]);\n\n    fileReader.onload = e => {\n      if (body.type === 3) {\n        handleOpen(_objectSpread(_objectSpread({}, body), {}, {\n          file: e.target.result,\n          candidate_id: courseId\n        }));\n      } else {\n        submitAddAttachment(_objectSpread(_objectSpread({}, body), {}, {\n          file: e.target.result,\n          candidate_id: courseId\n        }));\n      }\n    };\n  };\n\n  const renderUploadButton = (type, label, name) => /*#__PURE__*/_jsxDEV(Button, {\n    disabled: submitting === type,\n    variant: \"contained\",\n    className: classes.submitBtn,\n    component: \"label\",\n    style: {\n      minWidth: 200,\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), submitting === type ? translate(\"Processing ...\") : label, /*#__PURE__*/_jsxDEV(\"input\", {\n      accept: \"image/*\",\n      type: \"file\",\n      name: name,\n      hidden: true,\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n\n  const [attachment, setAttachments] = React.useState(null);\n  useEffect(() => {\n    console.log(\"attachments\", attachments);\n    setAttachments(attachments);\n  }, [attachments]);\n\n  const renderAttachment = () => {\n    if (attachment != null) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: fileItem,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: fileContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  style: fileLink,\n                  href: `${process.env.BASE_URL}/${attachment.url}`,\n                  target: \"_blank\",\n                  children: attachment.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  style: icon,\n                  onClick: () => submitDeleteAttachment({\n                    id: attachment.id\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Delete, {\n                    style: icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {\n      loading: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"#01579b\"\n          },\n          children: translate(\"Attachments\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"certificate\",\n              style: spacer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), renderUploadButton(3, translate(\"Upload Other Attachment\"), \"other_attachment\"), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"certificate\",\n              style: spacer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), renderAttachment()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddAttachmentModal, {\n      title: translate(\"Add Attachment\"),\n      open: open,\n      handleClose: handleClose,\n      formScheme: AddAttachmentScheme,\n      initValues: initAddAttachment,\n      submitForm: submitAddOtherAttachment\n    }, \"addAttachment\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AddAttachment;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/components/AddAttachment/AddAttachment.tsx"],"names":["React","useEffect","useTranslation","Button","Card","Grid","IconButton","makeStyles","useRouter","styles","colors","yup","AttachFile","Delete","CardHeader","CardBody","GridContainer","GridItem","AddAttachmentModal","Placeholder","AddAttachment","courseId","attachments","props","translate","useStyles","classes","router","open","setOpen","useState","body","setBody","handleOpen","handleClose","AddAttachmentScheme","object","shape","type","string","required","initAddAttachment","setInitAddAttachment","fileItem","padding","border","borderRadius","marginBottom","marginTop","fileContainer","display","justifyContent","fileLink","fontSize","color","icon","width","height","error","main","spacer","submitting","setSubmitting","submitAddOtherAttachment","values","setLoading","submitAddAttachment","name","submitDeleteAttachment","getParamsByName","handleUpload","target","fileReader","FileReader","readAsDataURL","files","onload","e","file","result","candidate_id","renderUploadButton","label","submitBtn","minWidth","attachment","setAttachments","console","log","renderAttachment","process","env","BASE_URL","url","id","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { IAttachmentModel } from \"../../Models/ApiResponse/AttachmentModel\";\r\nimport { useTranslation } from \"../../Utility/Translations/useTranslation\";\r\nimport { Button, Card, Grid, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { useRouter } from \"next/router\";\r\nimport styles from \"../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport colors from \"../../assets/theme/base/colors\";\r\n\r\nimport * as yup from \"yup\";\r\nimport { AttachFile, Delete } from \"@material-ui/icons\";\r\nimport CardHeader from \"../Card/CardHeader\";\r\nimport CardBody from \"../Card/CardBody\";\r\nimport GridContainer from \"../Grid/GridContainer\";\r\nimport GridItem from \"../Grid/GridItem\";\r\nimport AddAttachmentModal from \"../Modals/AddAttachmentModal\";\r\nimport Placeholder from \"../../Utility/Placeholders\";\r\ninterface IAddAttachmentProps {\r\n  courseId?: number;\r\n  attachments?: IAttachmentModel;\r\n}\r\n\r\nconst AddAttachment: React.FC<IAddAttachmentProps> = ({\r\n  courseId,\r\n  attachments,\r\n  ...props\r\n}) => {\r\n  const { translate } = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [body, setBody] = React.useState(false);\r\n\r\n  const handleOpen = (body) => {\r\n    setOpen(true);\r\n    setBody(body);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const AddAttachmentScheme = yup.object().shape({\r\n    type: yup.string().required(translate(\"{0} is required\", \"Name\")),\r\n  });\r\n\r\n  const [initAddAttachment, setInitAddAttachment] = React.useState({\r\n    type: 3,\r\n  });\r\n\r\n  const fileItem = {\r\n    padding: \"5px 20px\",\r\n    border: \"1px solid #cdcdcd\",\r\n    borderRadius: 30,\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n  };\r\n\r\n  const fileContainer = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n\r\n  const fileLink = {\r\n    fontSize: 15,\r\n    color: \"#000\",\r\n  };\r\n  const icon = {\r\n    width: 20,\r\n    height: 20,\r\n    color: colors.error.main,\r\n  };\r\n\r\n  const spacer = {\r\n    marginBottom: \"25px\",\r\n  };\r\n\r\n  const [submitting, setSubmitting] = React.useState(null);\r\n\r\n  const submitAddOtherAttachment = (values: any, setLoading) => {\r\n    submitAddAttachment({ ...body, name: values.name }, setLoading);\r\n  };\r\n\r\n  const submitAddAttachment = async (\r\n    values: any,\r\n    setLoading = setSubmitting\r\n  ) => {\r\n    // setLoading(values.type);\r\n    // AttachmentService.Add(values)\r\n    //   .then((res) => {\r\n    //     console.log(\"Attachment\", res);\r\n    //     const AttachmentCopy = [res.result, ...Attachments];\r\n    //     setAttachments(AttachmentCopy);\r\n    //     handleClose();\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error(\"error\", error);\r\n    //   })\r\n    //   .finally(() => {\r\n    //     values.type !== 3 && setLoading(null);\r\n    //   });\r\n  };\r\n\r\n  /************************** Handle delete data ****************************/\r\n\r\n  const submitDeleteAttachment = async (values: any) => {\r\n    // console.log(\"values\", values);\r\n    // AttachmentService.Delete(values)\r\n    //   .then((res) => {\r\n    //     console.log(\"Attachment\", res);\r\n    //     const AttachmentCopy = [...Attachments].filter(\r\n    //       (item) => item.id != values.id\r\n    //     );\r\n    //     setAttachments(AttachmentCopy);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error(\"roles\", error);\r\n    //   });\r\n  };\r\n\r\n  const getParamsByName = (name) =>\r\n    name === \"id_image\"\r\n      ? { type: 1, name: translate(\"ID image\") }\r\n      : name === \"personal_image\"\r\n      ? { type: 2, name: translate(\"Personal image\") }\r\n      : { type: 3, name: \"\" };\r\n  const handleUpload = ({ target }) => {\r\n    const fileReader = new FileReader();\r\n    const body = getParamsByName(target.name);\r\n\r\n    fileReader.readAsDataURL(target.files[0]);\r\n    fileReader.onload = (e) => {\r\n      if (body.type === 3) {\r\n        handleOpen({\r\n          ...body,\r\n          file: e.target.result,\r\n          candidate_id: courseId,\r\n        });\r\n      } else {\r\n        submitAddAttachment({\r\n          ...body,\r\n          file: e.target.result,\r\n          candidate_id: courseId,\r\n        });\r\n      }\r\n    };\r\n  };\r\n\r\n  const renderUploadButton = (type, label, name) => (\r\n    <Button\r\n      disabled={submitting === type}\r\n      variant=\"contained\"\r\n      className={classes.submitBtn}\r\n      component=\"label\"\r\n      style={{ minWidth: 200, color: \"white\" }}\r\n    >\r\n      <AttachFile />\r\n      {submitting === type ? translate(\"Processing ...\") : label}\r\n      <input\r\n        accept=\"image/*\"\r\n        type=\"file\"\r\n        name={name}\r\n        hidden\r\n        onChange={handleUpload}\r\n      />\r\n    </Button>\r\n  );\r\n\r\n  const [attachment, setAttachments] = React.useState<IAttachmentModel>(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"attachments\", attachments);\r\n    setAttachments(attachments);\r\n  }, [attachments]);\r\n\r\n  const renderAttachment = () => {\r\n    if (attachment != null) {\r\n      return (\r\n        <React.Fragment>\r\n          <GridContainer>\r\n            <GridItem sm={8}>\r\n              <Card style={fileItem}>\r\n                <div style={fileContainer}>\r\n                  <a\r\n                    style={fileLink}\r\n                    href={`${process.env.BASE_URL}/${attachment.url}`}\r\n                    target={\"_blank\"}\r\n                  >\r\n                    {attachment.name}\r\n                  </a>\r\n                  <IconButton\r\n                    style={icon}\r\n                    onClick={() =>\r\n                      submitDeleteAttachment({ id: attachment.id })\r\n                    }\r\n                  >\r\n                    <Delete style={icon} />\r\n                  </IconButton>\r\n                </div>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </React.Fragment>\r\n      );\r\n    } else return <Placeholder loading={false} />;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <h4 style={{ fontWeight: \"bold\", color: \"#01579b\" }}>\r\n            {translate(\"Attachments\")}\r\n          </h4>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <GridContainer>\r\n            <GridItem md={12}>\r\n              <Grid container></Grid>\r\n              <div id={\"certificate\"} style={spacer} />\r\n              {renderUploadButton(\r\n                3,\r\n                translate(\"Upload Other Attachment\"),\r\n                \"other_attachment\"\r\n              )}\r\n              <div id={\"certificate\"} style={spacer} />\r\n              {renderAttachment()}\r\n            </GridItem>\r\n          </GridContainer>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <AddAttachmentModal\r\n        key={\"addAttachment\"}\r\n        title={translate(\"Add Attachment\")}\r\n        open={open}\r\n        handleClose={handleClose}\r\n        formScheme={AddAttachmentScheme}\r\n        initValues={initAddAttachment}\r\n        submitForm={submitAddOtherAttachment}\r\n      ></AddAttachmentModal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddAttachment;\r\n"]},"metadata":{},"sourceType":"module"}