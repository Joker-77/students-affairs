{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport Admin from \"../../../../layouts/Admin\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport { Button, Typography, makeStyles } from \"@material-ui/core\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { Add } from \"@material-ui/icons\";\nimport Properties from \"./peroperties\";\nimport ConfirmProperties from \"./confirmProperties\";\nimport InitPlanTabs from \"./tabbedView\";\nimport SpecialityService from \"../../../../Services/SpecialityService\";\nimport YearsService from \"../../../../Services/SpecYearsService\";\nimport EduYearService from \"../../../../Services/EduYearService\";\n\nconst InitializeYear = () => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles(); // --------------- Show Modal --------------------\n\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: showConfirm,\n    1: setShowConfirm\n  } = useState(false); // --------------- Data --------------------------\n\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const {\n    0: alertMsg,\n    1: setAlertMessage\n  } = useState(\"\");\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: success,\n    1: SetSuccess\n  } = useState(false);\n  const {\n    0: specialities,\n    1: SetSpecialities\n  } = useState([]);\n  const {\n    0: initYears,\n    1: setInitYears\n  } = useState([]);\n  const {\n    0: latestYear,\n    1: setLatestYear\n  } = useState(\"\");\n  useEffect(() => {\n    EduYearService.GetYears(`${new Date().getFullYear()}`).then(resp => {\n      let result = resp.result;\n      console.clear();\n      console.log(result);\n      if (result.length > 0) setLatestYear(result[0]);\n    }).catch(error => {});\n    SpecialityService.GetAll().then(response => {\n      if (response.result.length > 0) {\n        console.log(response.result);\n        YearsService.GetWhereSpeciality(response.result[0].id).then(res => {\n          console.log(res.result);\n\n          if (res.result.length > 0) {\n            let specs = response.result.map(data => {\n              return {\n                id: data.id,\n                en_name: data.en_name,\n                ar_name: data.ar_name,\n                code: data.code\n              };\n            });\n            let initYears = res.result.map(data => {\n              return {\n                id: data.id,\n                en_name: data.en_name,\n                ar_name: data.ar_name,\n                code: data.code\n              };\n            });\n            SetSpecialities(specs);\n            setInitYears(initYears);\n          }\n        }).catch(error => {});\n      }\n    }).catch(error => {});\n  }, []);\n\n  const closeProperties = () => {\n    setShow(false);\n  };\n\n  const handleInit = () => {\n    setShow(true);\n  };\n\n  const confirmOpenYear = (value, message) => {\n    let alertMessage = (message === null || message === void 0 ? void 0 : message.split(\"%\")[0]) + \" 2022-2023\";\n    let confirmMessage = message === null || message === void 0 ? void 0 : message.split(\"%\")[1];\n    setValue(value);\n    setAlertMessage(alertMessage);\n    setMessage(confirmMessage);\n    setShowConfirm(true);\n  };\n\n  const handleSubmitConfirm = () => {\n    console.log(value);\n\n    if (!!value) {\n      EduYearService.checkYear(latestYear === null || latestYear === void 0 ? void 0 : latestYear.year).then(resp => {\n        var _resp$result;\n\n        if ((_resp$result = resp.result) !== null && _resp$result !== void 0 && _resp$result.success) {\n          EduYearService.InitYears({\n            year: latestYear.year,\n            type: value\n          }).then(response => {\n            let result = response === null || response === void 0 ? void 0 : response.result;\n\n            if (result && result.success) {\n              setShowConfirm(false);\n              setShow(false);\n              SetSuccess(true);\n            }\n\n            setShowConfirm(false);\n            setShow(false);\n            SetSuccess(true);\n          }).catch(error => {\n            setShowConfirm(false);\n            setShow(false);\n            SetSuccess(true);\n          });\n        } else {\n          alert('else');\n          setShowConfirm(false);\n          setShow(false);\n          SetSuccess(true);\n        }\n      }).catch(error => {});\n    }\n  };\n\n  const closeConfirmProperties = () => {\n    setShowConfirm(false);\n  };\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    children: [/*#__PURE__*/_jsx(GridItem, {\n      style: {\n        margin: \"0 0 1em 0\"\n      },\n      md: 12,\n      className: classes.typography,\n      children: /*#__PURE__*/_jsx(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: translate(`You're in the year`) + ` ${latestYear.year}`\n      })\n    }), /*#__PURE__*/_jsx(GridItem, {\n      md: 12,\n      children: /*#__PURE__*/_jsx(GridItem, {\n        md: 7,\n        children: /*#__PURE__*/_jsxs(Button, {\n          style: {\n            margin: \"0px 5px\"\n          },\n          disabled: success,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleInit,\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            style: {\n              padding: \"0px 0px 0px 10px\"\n            },\n            children: translate(\"Open new educational year\")\n          }), /*#__PURE__*/_jsx(Add, {})]\n        })\n      })\n    }), success && /*#__PURE__*/_jsx(GridItem, {\n      style: {\n        marginTop: \"2em\"\n      },\n      children: /*#__PURE__*/_jsx(GridItem, {\n        md: 12,\n        children: /*#__PURE__*/_jsx(InitPlanTabs, {\n          latestYear: latestYear,\n          message: message,\n          specialties: specialities,\n          initYears: initYears\n        })\n      })\n    }), /*#__PURE__*/_jsx(Properties, {\n      open: show,\n      title: \"\\u0641\\u062A\\u062D \\u0639\\u0627\\u0645 \\u062F\\u0631\\u0627\\u0633\\u064A \\u062C\\u062F\\u064A\\u062F\",\n      handleClose: closeProperties,\n      handleConfirm: confirmOpenYear\n    }, \"properties\"), /*#__PURE__*/_jsx(ConfirmProperties, {\n      open: showConfirm,\n      alert: alertMsg,\n      message: message,\n      handleClose: closeConfirmProperties,\n      handleConfirm: handleSubmitConfirm\n    })]\n  });\n};\n\nInitializeYear.layout = Admin;\nInitializeYear.auth = false;\nexport default InitializeYear;","map":null,"metadata":{},"sourceType":"module"}