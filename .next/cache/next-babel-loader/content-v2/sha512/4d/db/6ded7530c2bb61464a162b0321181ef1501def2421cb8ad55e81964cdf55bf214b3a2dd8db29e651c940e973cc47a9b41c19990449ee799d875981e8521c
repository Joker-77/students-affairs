{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\courses\\\\course-details.tsx\";\nimport React, { useState } from \"react\";\nimport Card from \"../../../../components/Card/Card\";\nimport { Box, CardActions, Divider, Grid, MenuItem, TextField, Typography } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport * as yup from \"yup\";\nimport { FieldArray, Form, Formik, ErrorMessage } from \"formik\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { Add, ArrowBack, AttachFile } from \"@material-ui/icons\";\nimport { toast } from \"react-toastify\";\n\nconst CourseDetail = ({\n  show,\n  details,\n  isEditable,\n  setShow,\n  activateEdit\n}) => {\n  var _course$current_descr, _course$current_descr2, _course$current_descr3, _course$current_descr4, _course$current_descr5, _course$current_descr6, _details$ar_name;\n\n  const methodTypes = [{\n    id: 1,\n    name: \"مذاكرة\"\n  }, {\n    id: 2,\n    name: \"عملي\"\n  }, {\n    id: 3,\n    name: \"امتحان\"\n  }];\n  const {\n    translate\n  } = useTranslation();\n  const {\n    0: course,\n    1: setDetails\n  } = useState(details);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState(course === null || course === void 0 ? void 0 : (_course$current_descr = course.current_description) === null || _course$current_descr === void 0 ? void 0 : _course$current_descr.attachement);\n  const initialValues = {\n    en_name: course === null || course === void 0 ? void 0 : course.en_name,\n    ar_name: course === null || course === void 0 ? void 0 : course.ar_name,\n    fr_name: course === null || course === void 0 ? void 0 : course.fr_name,\n    code: course === null || course === void 0 ? void 0 : course.code,\n    theoretical_hours: (_course$current_descr2 = course.current_description.hours.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"theoretic\")) === null || _course$current_descr2 === void 0 ? void 0 : _course$current_descr2.hours,\n    practical_hours: (_course$current_descr3 = course.current_description.hours.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"practical\")) === null || _course$current_descr3 === void 0 ? void 0 : _course$current_descr3.hours,\n    mixed_hours: (_course$current_descr4 = course.current_description.hours.find(hour => (hour === null || hour === void 0 ? void 0 : hour.type) == \"mixed\")) === null || _course$current_descr4 === void 0 ? void 0 : _course$current_descr4.hours,\n    evaluation_methods: (_course$current_descr5 = course.current_description) === null || _course$current_descr5 === void 0 ? void 0 : _course$current_descr5.evaluation_methods.map((ev, idx) => {\n      return {\n        id: ev.id,\n        name: ev.name,\n        percentage: ev.percentage * 100\n      };\n    }),\n    attachement: course === null || course === void 0 ? void 0 : (_course$current_descr6 = course.current_description) === null || _course$current_descr6 === void 0 ? void 0 : _course$current_descr6.attachement\n  }; // const [submitting, setSubmitting] = useState(false);\n\n  const courseSchema = yup.object({\n    en_name: yup.string(translate(\"English Name\")).required(translate(\"Field is required\")),\n    ar_name: yup.string(translate(\"Arabic Name\")).required(translate(\"Field is required\")),\n    fr_name: yup.string(translate(\"French Name\")).required(translate(\"Field is required\")),\n    code: yup.string(translate(\"Course Code\")).required(translate(\"Field is required\")),\n    theoretical_hours: yup.number(\"Theoretical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    practical_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    mixed_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    evaluation_methods: yup.array().of(yup.object().shape({\n      name: yup.string(),\n      percentage: yup.number().min(0, translate(\"Field must be greater than 0\")).max(100, translate(\"Field must be less than 100\")).transform(value => isNaN(value) ? undefined : value).required(\"Percentage is required\")\n    })).min(1, translate(\"Need at least one evaluation method\")).test(methods => {\n      const sum = methods === null || methods === void 0 ? void 0 : methods.reduce((acc, curr) => acc + curr.percentage, 0);\n\n      if (sum != 100) {\n        isNaN(sum) ? setErrorPercentageMsg(translate(\"Percentage should be 100%, but you have:\") + \"0%\") : setErrorPercentageMsg(translate(\"Percentage should be 100%, but you have:\") + sum + \"%\");\n        return new yup.ValidationError(translate(`Percentage should be 100%, but you have ${sum}%`, undefined, translate(\"Evaluation Methods\")));\n      } else {\n        setErrorPercentageMsg(\"\");\n        return true;\n      }\n    }),\n    attachement: yup.mixed().required(translate(\"Need an attachment for this course\"))\n  });\n  const {\n    0: errorPercentageMsg,\n    1: setErrorPercentageMsg\n  } = useState(\"\");\n\n  const submitForm = (values, setSubmitting) => {\n    console.clear();\n    console.log(values);\n  };\n\n  const hiddenInput = React.useRef(null);\n\n  const handleClick = event => {\n    var _hiddenInput$current;\n\n    (_hiddenInput$current = hiddenInput.current) === null || _hiddenInput$current === void 0 ? void 0 : _hiddenInput$current.click();\n  };\n\n  const convertToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      setFileName(file === null || file === void 0 ? void 0 : file.name);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const handleFile = async (e, setFieldValue) => {\n    const file = e.target.files[0]; //check the size of image\n\n    if ((file === null || file === void 0 ? void 0 : file.size) / 1024 / 1024 < 2) {\n      const base64 = await convertToBase64(file);\n      setFieldValue(\"attachement\", base64);\n    } else {\n      toast.error(\"File size must be of 5MB or less\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    md: 12,\n    sm: 12,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      md: 12,\n      sm: 12,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"1em 4em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            item: true,\n            md: 9,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: [translate(\"Course Name\"), \":\", \" \", (_details$ar_name = details === null || details === void 0 ? void 0 : details.ar_name) !== null && _details$ar_name !== void 0 ? _details$ar_name : \"التحليل الرياضي\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mb: 1.5\n              },\n              color: \"text.secondary\",\n              children: translate(\"Course Details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            md: 3,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(SuiButton, {\n              onClick: setShow,\n              color: \"warning\",\n              children: [/*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), translate(\"Back To Previous Page\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"3em 3em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: courseSchema,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting); // console.clear();\n            // console.log(values);\n          },\n          children: formik => {\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty,\n              setFieldValue\n            } = formik;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  style: {\n                    margin: \"1em 0em\",\n                    color: \"red\",\n                    display: errors && // 👈 null and undefined check\n                    Object.keys(errors).length === 0 && Object.getPrototypeOf(errors) === Object.prototype ? \"none\" : \"block\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 3,\n                    md: 3,\n                    style: {\n                      color: \"red\"\n                    },\n                    children: JSON.stringify(errors)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"ar_name\",\n                      name: \"ar_name\",\n                      value: values.ar_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.ar_name && errors.ar_name),\n                      helperText: touched.ar_name && errors.ar_name,\n                      placeholder: translate(\"Arabic Name\"),\n                      label: translate(\"Arabic Name\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"en_name\",\n                      name: \"en_name\",\n                      value: values.en_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.en_name && errors.en_name),\n                      helperText: touched.en_name && errors.en_name,\n                      placeholder: translate(\"English Name\"),\n                      label: translate(\"English Name\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"fr_name\",\n                      name: \"fr_name\",\n                      value: values.fr_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.fr_name && errors.fr_name),\n                      helperText: touched.fr_name && errors.fr_name,\n                      placeholder: translate(\"French Name\"),\n                      label: translate(\"French Name\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"theoretical_hours\",\n                      name: \"theoretical_hours\",\n                      value: values.theoretical_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.theoretical_hours && errors.theoretical_hours),\n                      helperText: touched.theoretical_hours && errors.theoretical_hours,\n                      placeholder: translate(\"Theoretical Hours\"),\n                      label: translate(\"Theoretical Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"practical_hours\",\n                      name: \"practical_hours\",\n                      value: values.practical_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.practical_hours && errors.practical_hours),\n                      helperText: touched.practical_hours && errors.practical_hours,\n                      placeholder: translate(\"Practical Hours\"),\n                      label: translate(\"Practical Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"mixed_hours\",\n                      name: \"mixed_hours\",\n                      value: values.mixed_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.mixed_hours && errors.mixed_hours),\n                      helperText: touched.mixed_hours && errors.mixed_hours,\n                      placeholder: translate(\"Mixed Hours\"),\n                      label: translate(\"Mixed Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"code\",\n                      name: \"code\",\n                      value: values.code,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.code && errors.code),\n                      helperText: touched.code && errors.code,\n                      placeholder: translate(\"Course Code\"),\n                      label: translate(\"Course Code\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                style: {\n                  margin: \"2em 0em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: translate(\"Evaluations Method\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                my: 1,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: errorPercentageMsg && /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      color: \"rgb(234, 6, 6)\"\n                    },\n                    children: errorPercentageMsg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                name: \"evaluation_methods\",\n                render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: values !== null && values !== void 0 && values.evaluation_methods && (values === null || values === void 0 ? void 0 : values.evaluation_methods.length) > 0 ? values === null || values === void 0 ? void 0 : values.evaluation_methods.map((method, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          disabled: !isEditable,\n                          variant: \"outlined\",\n                          size: \"small\",\n                          type: \"select\",\n                          id: `evaluation_methods.${index}.id`,\n                          name: `evaluation_methods.${index}.id`,\n                          select: true,\n                          value: method.id,\n                          onChange: handleChange(`evaluation_methods.${index}.id`),\n                          onBlur: handleBlur,\n                          fullWidth: true,\n                          children: methodTypes === null || methodTypes === void 0 ? void 0 : methodTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: type.id,\n                            children: type.name\n                          }, type.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 455,\n                            columnNumber: 39\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        style: {\n                          display: \"flex\",\n                          flexDirection: \"column\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          disabled: !isEditable,\n                          onChange: handleChange(`evaluation_methods.${index}.percentage`),\n                          variant: \"outlined\",\n                          size: \"small\",\n                          type: \"number\",\n                          id: `$evaluation_methods.${index}.percentage`,\n                          name: `evaluation_methods.${index}.percentage`,\n                          value: method.percentage,\n                          onBlur: handleBlur,\n                          error: Boolean(errors && errors.evaluation_methods && errors.evaluation_methods[index] && errors.evaluation_methods[index].percentage && touched && touched.evaluation_methods && touched.evaluation_methods[index] && touched.evaluation_methods[index].percentage),\n                          helperText: errors && errors.evaluation_methods && errors.evaluation_methods[index] && errors.evaluation_methods[index].percentage && touched && touched.evaluation_methods && touched.evaluation_methods[index] && touched.evaluation_methods[index].percentage,\n                          placeholder: translate(\"Percentage\") //fullWidth\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 469,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          style: {\n                            color: \"rgb(234, 6, 6)\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            name: `evaluation_methods.${index}.percentage`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 509,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 508,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        style: {\n                          display: isEditable ? \"\" : \"none\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(SuiButton, {\n                          style: {\n                            margin: 5\n                          },\n                          color: \"error\",\n                          onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                          ,\n                          children: \"-\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 519,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n                          style: {\n                            margin: 5\n                          },\n                          color: \"primary\",\n                          onClick: () => arrayHelpers.push({\n                            name: \"\",\n                            percentage: 0\n                          }) // insert an empty string at a position\n                          ,\n                          children: \"+\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 526,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 31\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 29\n                  }, this)) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(SuiButton, {\n                      style: {\n                        display: isEditable ? \"\" : \"none\"\n                      },\n                      color: \"primary\",\n                      onClick: () => arrayHelpers.push({\n                        name: \"\",\n                        percentage: 0\n                      }),\n                      children: [translate(\"Add an evaluation method\"), /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                style: {\n                  margin: \"2em 0em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: translate(\"Attachments\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(SuiButton, {\n                  disabled: !isEditable,\n                  color: \"primary\",\n                  onClick: handleClick,\n                  children: [translate(\"Upload a file\"), /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"attachement\",\n                  name: \"attachement\",\n                  type: \"file\",\n                  ref: hiddenInput,\n                  style: {\n                    display: \"none\"\n                  },\n                  onChange: event => {\n                    handleFile(event, setFieldValue);\n                  },\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  md: 6,\n                  style: {\n                    marginTop: \"1em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    helperText: (touched === null || touched === void 0 ? void 0 : touched.attachement) && (errors === null || errors === void 0 ? void 0 : errors.attachement),\n                    error: Boolean((errors === null || errors === void 0 ? void 0 : errors.attachement) && (touched === null || touched === void 0 ? void 0 : touched.attachement)),\n                    variant: \"outlined\",\n                    type: \"text\",\n                    size: \"small\",\n                    disabled: true,\n                    placeholder: \"\",\n                    value: fileName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 4,\n                mb: 1,\n                children: isEditable ? isSubmitting ? /*#__PURE__*/_jsxDEV(SuiButton, {\n                  type: \"button\",\n                  disabled: true,\n                  variant: \"gradient\",\n                  color: \"info\",\n                  fullWidth: true,\n                  children: translate(\"Processing ...\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                  style: {\n                    color: \"rgb(255, 255, 255)\",\n                    background: \"rgb(23, 193, 232)\",\n                    width: \"100%\"\n                  },\n                  disabled: !isValid && isSubmitting,\n                  type: \"submit\",\n                  children: translate(\"Save\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                  onClick: activateEdit,\n                  type: \"button\",\n                  variant: \"gradient\",\n                  color: \"info\",\n                  fullWidth: true,\n                  children: translate(\"Edit Course\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\nCourseDetail.layout = Admin;\nCourseDetail.auth = false;\nexport default CourseDetail;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/courses/course-details.tsx"],"names":["React","useState","Card","Box","CardActions","Divider","Grid","MenuItem","TextField","Typography","Admin","useTranslation","GridItem","yup","FieldArray","Form","Formik","ErrorMessage","SuiButton","Add","ArrowBack","AttachFile","toast","CourseDetail","show","details","isEditable","setShow","activateEdit","methodTypes","id","name","translate","course","setDetails","fileName","setFileName","current_description","attachement","initialValues","en_name","ar_name","fr_name","code","theoretical_hours","hours","find","hour","type","practical_hours","mixed_hours","evaluation_methods","map","ev","idx","percentage","courseSchema","object","string","required","number","min","array","of","shape","max","transform","value","isNaN","undefined","test","methods","sum","reduce","acc","curr","setErrorPercentageMsg","ValidationError","mixed","errorPercentageMsg","submitForm","values","setSubmitting","console","clear","log","hiddenInput","useRef","handleClick","event","current","click","convertToBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","handleFile","e","setFieldValue","target","files","size","base64","padding","margin","mb","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","color","display","Object","keys","length","getPrototypeOf","prototype","JSON","stringify","Boolean","arrayHelpers","method","index","flexDirection","remove","push","marginTop","background","width","layout","auth"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport {\r\n  ICourseModel,\r\n  IEvaluationMethod,\r\n} from \"../../../../Models/Courses/CourseModel\";\r\nimport Card from \"../../../../components/Card/Card\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport GridItem from \"../../../../components/Grid/GridItem\";\r\nimport * as yup from \"yup\";\r\nimport { Field, FieldArray, Form, Formik, getIn, ErrorMessage } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport { Add, ArrowBack, AttachFile, Backspace } from \"@material-ui/icons\";\r\nimport AddAttachment from \"../../../../components/AddAttachment/AddAttachment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface ICourseDetailProps {\r\n  show: boolean;\r\n  details: ICourseModel;\r\n  isEditable: boolean;\r\n  setShow(): void;\r\n  activateEdit(): void;\r\n}\r\n\r\nconst CourseDetail: FC<ICourseDetailProps> = ({\r\n  show,\r\n  details,\r\n  isEditable,\r\n  setShow,\r\n  activateEdit,\r\n}) => {\r\n  const methodTypes = [\r\n    {\r\n      id: 1,\r\n      name: \"مذاكرة\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"عملي\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"امتحان\",\r\n    },\r\n  ];\r\n\r\n  const { translate } = useTranslation();\r\n  const [course, setDetails] = useState<ICourseModel>(details);\r\n  const [fileName, setFileName] = useState<string>(\r\n    course?.current_description?.attachement\r\n  );\r\n  const initialValues = {\r\n    en_name: course?.en_name,\r\n    ar_name: course?.ar_name,\r\n    fr_name: course?.fr_name,\r\n    code: course?.code,\r\n    theoretical_hours: course.current_description.hours.find(\r\n      (hour) => hour?.type == \"theoretic\"\r\n    )?.hours,\r\n    practical_hours: course.current_description.hours.find(\r\n      (hour) => hour?.type == \"practical\"\r\n    )?.hours,\r\n    mixed_hours: course.current_description.hours.find(\r\n      (hour) => hour?.type == \"mixed\"\r\n    )?.hours,\r\n    evaluation_methods: course.current_description?.evaluation_methods.map(\r\n      (ev, idx) => {\r\n        return {\r\n          id: ev.id,\r\n          name: ev.name,\r\n          percentage: ev.percentage * 100,\r\n        };\r\n      }\r\n    ),\r\n    attachement: course?.current_description?.attachement,\r\n  };\r\n  // const [submitting, setSubmitting] = useState(false);\r\n  const courseSchema = yup.object({\r\n    en_name: yup\r\n      .string(translate(\"English Name\"))\r\n      .required(translate(\"Field is required\")),\r\n    ar_name: yup\r\n      .string(translate(\"Arabic Name\"))\r\n      .required(translate(\"Field is required\")),\r\n    fr_name: yup\r\n      .string(translate(\"French Name\"))\r\n      .required(translate(\"Field is required\")),\r\n    code: yup\r\n      .string(translate(\"Course Code\"))\r\n      .required(translate(\"Field is required\")),\r\n    theoretical_hours: yup\r\n      .number(\"Theoretical Hours\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    practical_hours: yup\r\n      .number(\"Practical Hours\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    mixed_hours: yup\r\n      .number(\"Practical Hours\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    evaluation_methods: yup\r\n      .array()\r\n      .of(\r\n        yup.object().shape({\r\n          name: yup.string(),\r\n          percentage: yup\r\n            .number()\r\n            .min(0, translate(\"Field must be greater than 0\"))\r\n            .max(100, translate(\"Field must be less than 100\"))\r\n            .transform((value) => (isNaN(value) ? undefined : value))\r\n            .required(\"Percentage is required\"),\r\n        })\r\n      )\r\n      .min(1, translate(\"Need at least one evaluation method\"))\r\n      .test((methods: Array<{ percentage: number }>) => {\r\n        const sum = methods?.reduce((acc, curr) => acc + curr.percentage, 0);\r\n        if (sum != 100) {\r\n          isNaN(sum)\r\n            ? setErrorPercentageMsg(\r\n                translate(\"Percentage should be 100%, but you have:\") + \"0%\"\r\n              )\r\n            : setErrorPercentageMsg(\r\n                translate(\"Percentage should be 100%, but you have:\") +\r\n                  sum +\r\n                  \"%\"\r\n              );\r\n          return new yup.ValidationError(\r\n            translate(\r\n              `Percentage should be 100%, but you have ${sum}%`,\r\n              undefined,\r\n              translate(\"Evaluation Methods\")\r\n            )\r\n          );\r\n        } else {\r\n          setErrorPercentageMsg(\"\");\r\n          return true;\r\n        }\r\n      }),\r\n    attachement: yup\r\n      .mixed()\r\n      .required(translate(\"Need an attachment for this course\")),\r\n  });\r\n  const [errorPercentageMsg, setErrorPercentageMsg] = useState(\"\");\r\n  const submitForm = (values, setSubmitting) => {\r\n    console.clear();\r\n    console.log(values);\r\n  };\r\n\r\n  const hiddenInput = React.useRef(null);\r\n  const handleClick = (event) => {\r\n    hiddenInput.current?.click();\r\n  };\r\n  const convertToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      setFileName(file?.name);\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleFile = async (e, setFieldValue) => {\r\n    const file = e.target.files[0];\r\n    //check the size of image\r\n    if (file?.size / 1024 / 1024 < 2) {\r\n      const base64 = await convertToBase64(file);\r\n      setFieldValue(\"attachement\", base64);\r\n    } else {\r\n      toast.error(\"File size must be of 5MB or less\");\r\n    }\r\n  };\r\n  return (\r\n    <Grid container md={12} sm={12}>\r\n      <Grid md={12} sm={12} xs={12}>\r\n        <Card style={{ padding: \"1em 4em\", margin: \"5px 0px\" }}>\r\n          <Grid container>\r\n            <GridItem item md={9} xs={12} sm={12}>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                {translate(\"Course Name\")}:{\" \"}\r\n                {details?.ar_name ?? \"التحليل الرياضي\"}\r\n              </Typography>\r\n              <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                {translate(\"Course Details\")}\r\n              </Typography>\r\n            </GridItem>\r\n            <GridItem md={3} xs={12} sm={12}>\r\n              <SuiButton onClick={setShow} color={\"warning\"}>\r\n                <ArrowBack />\r\n                {translate(\"Back To Previous Page\")}\r\n              </SuiButton>\r\n            </GridItem>\r\n          </Grid>\r\n        </Card>\r\n        <Card style={{ padding: \"3em 3em\", margin: \"5px 0px\" }}>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={courseSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              submitForm(values, setSubmitting);\r\n              // console.clear();\r\n              // console.log(values);\r\n            }}\r\n          >\r\n            {(formik) => {\r\n              const {\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                isSubmitting,\r\n                isValid,\r\n                dirty,\r\n                setFieldValue,\r\n              } = formik;\r\n              return (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Grid container md={12} xs={12} style={{ margin: \"1em 0em\" }}>\r\n                    <Grid\r\n                      container\r\n                      md={12}\r\n                      style={{\r\n                        margin: \"1em 0em\",\r\n                        color: \"red\",\r\n                        display:\r\n                          errors && // 👈 null and undefined check\r\n                          Object.keys(errors).length === 0 &&\r\n                          Object.getPrototypeOf(errors) === Object.prototype\r\n                            ? \"none\"\r\n                            : \"block\",\r\n                      }}\r\n                    >\r\n                      <Grid item xs={3} md={3} style={{ color: \"red\" }}>\r\n                        {JSON.stringify(errors)}\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          disabled={!isEditable}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"ar_name\"\r\n                          name=\"ar_name\"\r\n                          value={values.ar_name}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.ar_name && errors.ar_name)}\r\n                          helperText={touched.ar_name && errors.ar_name}\r\n                          placeholder={translate(\"Arabic Name\")}\r\n                          label={translate(\"Arabic Name\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          disabled={!isEditable}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"en_name\"\r\n                          name=\"en_name\"\r\n                          value={values.en_name}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.en_name && errors.en_name)}\r\n                          helperText={touched.en_name && errors.en_name}\r\n                          placeholder={translate(\"English Name\")}\r\n                          label={translate(\"English Name\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          disabled={!isEditable}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"fr_name\"\r\n                          name=\"fr_name\"\r\n                          value={values.fr_name}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.fr_name && errors.fr_name)}\r\n                          helperText={touched.fr_name && errors.fr_name}\r\n                          placeholder={translate(\"French Name\")}\r\n                          label={translate(\"French Name\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container md={12} xs={12}>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          disabled={!isEditable}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"theoretical_hours\"\r\n                          name=\"theoretical_hours\"\r\n                          value={values.theoretical_hours}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.theoretical_hours &&\r\n                              errors.theoretical_hours\r\n                          )}\r\n                          helperText={\r\n                            touched.theoretical_hours &&\r\n                            errors.theoretical_hours\r\n                          }\r\n                          placeholder={translate(\"Theoretical Hours\")}\r\n                          label={translate(\"Theoretical Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          disabled={!isEditable}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"practical_hours\"\r\n                          name=\"practical_hours\"\r\n                          value={values.practical_hours}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.practical_hours && errors.practical_hours\r\n                          )}\r\n                          helperText={\r\n                            touched.practical_hours && errors.practical_hours\r\n                          }\r\n                          placeholder={translate(\"Practical Hours\")}\r\n                          label={translate(\"Practical Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          disabled={!isEditable}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"mixed_hours\"\r\n                          name=\"mixed_hours\"\r\n                          value={values.mixed_hours}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.mixed_hours && errors.mixed_hours\r\n                          )}\r\n                          helperText={touched.mixed_hours && errors.mixed_hours}\r\n                          placeholder={translate(\"Mixed Hours\")}\r\n                          label={translate(\"Mixed Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container md={12} xs={12} style={{ margin: \"1em 0em\" }}>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          disabled={!isEditable}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"code\"\r\n                          name=\"code\"\r\n                          value={values.code}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.code && errors.code)}\r\n                          helperText={touched.code && errors.code}\r\n                          placeholder={translate(\"Course Code\")}\r\n                          label={translate(\"Course Code\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Divider style={{ margin: \"2em 0em\" }} />\r\n                  <Box mb={1} ml={0.5}>\r\n                    <Typography component=\"label\" variant=\"caption\">\r\n                      <h5>{translate(\"Evaluations Method\")}</h5>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box my={1}>\r\n                    <Typography component=\"label\" variant=\"caption\">\r\n                      {errorPercentageMsg && (\r\n                        <label style={{ color: \"rgb(234, 6, 6)\" }}>\r\n                          {errorPercentageMsg}\r\n                        </label>\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                  <FieldArray\r\n                    name={\"evaluation_methods\"}\r\n                    render={(arrayHelpers) => (\r\n                      <div>\r\n                        {values?.evaluation_methods &&\r\n                        values?.evaluation_methods.length > 0 ? (\r\n                          values?.evaluation_methods.map((method, index) => (\r\n                            <div key={index}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={4}>\r\n                                  <TextField\r\n                                    disabled={!isEditable}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type=\"select\"\r\n                                    id={`evaluation_methods.${index}.id`}\r\n                                    name={`evaluation_methods.${index}.id`}\r\n                                    select={true}\r\n                                    value={method.id}\r\n                                    onChange={handleChange(\r\n                                      `evaluation_methods.${index}.id`\r\n                                    )}\r\n                                    onBlur={handleBlur}\r\n                                    fullWidth\r\n                                  >\r\n                                    {methodTypes?.map((type) => (\r\n                                      <MenuItem key={type.id} value={type.id}>\r\n                                        {type.name}\r\n                                      </MenuItem>\r\n                                    ))}\r\n                                  </TextField>\r\n                                </Grid>\r\n                                <Grid\r\n                                  item\r\n                                  xs={4}\r\n                                  style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                  }}\r\n                                >\r\n                                  <TextField\r\n                                    disabled={!isEditable}\r\n                                    onChange={handleChange(\r\n                                      `evaluation_methods.${index}.percentage`\r\n                                    )}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type=\"number\"\r\n                                    id={`$evaluation_methods.${index}.percentage`}\r\n                                    name={`evaluation_methods.${index}.percentage`}\r\n                                    value={method.percentage}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(\r\n                                      errors &&\r\n                                        errors.evaluation_methods &&\r\n                                        errors.evaluation_methods[index] &&\r\n                                        errors.evaluation_methods[index]\r\n                                          .percentage &&\r\n                                        touched &&\r\n                                        touched.evaluation_methods &&\r\n                                        touched.evaluation_methods[index] &&\r\n                                        touched.evaluation_methods[index]\r\n                                          .percentage\r\n                                    )}\r\n                                    helperText={\r\n                                      errors &&\r\n                                      errors.evaluation_methods &&\r\n                                      errors.evaluation_methods[index] &&\r\n                                      errors.evaluation_methods[index]\r\n                                        .percentage &&\r\n                                      touched &&\r\n                                      touched.evaluation_methods &&\r\n                                      touched.evaluation_methods[index] &&\r\n                                      touched.evaluation_methods[index]\r\n                                        .percentage\r\n                                    }\r\n                                    placeholder={translate(\"Percentage\")}\r\n                                    //fullWidth\r\n                                  />\r\n                                  <label style={{ color: \"rgb(234, 6, 6)\" }}>\r\n                                    <ErrorMessage\r\n                                      name={`evaluation_methods.${index}.percentage`}\r\n                                    />\r\n                                  </label>\r\n                                </Grid>\r\n                                <Grid\r\n                                  item\r\n                                  xs={4}\r\n                                  style={{ display: isEditable ? \"\" : \"none\" }}\r\n                                >\r\n                                  <SuiButton\r\n                                    style={{ margin: 5 }}\r\n                                    color=\"error\"\r\n                                    onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                  >\r\n                                    -\r\n                                  </SuiButton>\r\n                                  <SuiButton\r\n                                    style={{ margin: 5 }}\r\n                                    color=\"primary\"\r\n                                    onClick={() =>\r\n                                      arrayHelpers.push({\r\n                                        name: \"\",\r\n                                        percentage: 0,\r\n                                      })\r\n                                    } // insert an empty string at a position\r\n                                  >\r\n                                    +\r\n                                  </SuiButton>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n                          ))\r\n                        ) : (\r\n                          <React.Fragment>\r\n                            <SuiButton\r\n                              style={{ display: isEditable ? \"\" : \"none\" }}\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                arrayHelpers.push({\r\n                                  name: \"\",\r\n                                  percentage: 0,\r\n                                })\r\n                              }\r\n                            >\r\n                              {/* show this when user has removed all phones from the list */}\r\n                              {translate(\"Add an evaluation method\")}\r\n                              <Add />\r\n                            </SuiButton>\r\n                          </React.Fragment>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  />\r\n                  <Divider style={{ margin: \"2em 0em\" }} />\r\n                  <Box mb={1} ml={0.5}>\r\n                    <Typography component=\"label\" variant=\"caption\">\r\n                      <h5>{translate(\"Attachments\")}</h5>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <SuiButton\r\n                      disabled={!isEditable}\r\n                      color=\"primary\"\r\n                      onClick={handleClick}\r\n                    >\r\n                      {translate(\"Upload a file\")}\r\n                      <AttachFile />\r\n                    </SuiButton>\r\n                    <input\r\n                      id=\"attachement\"\r\n                      name=\"attachement\"\r\n                      type=\"file\"\r\n                      ref={hiddenInput}\r\n                      style={{ display: \"none\" }}\r\n                      onChange={(event) => {\r\n                        handleFile(event, setFieldValue);\r\n                      }}\r\n                      className=\"form-control\"\r\n                    />\r\n                    <Grid md={6} style={{ marginTop: \"1em\" }}>\r\n                      <TextField\r\n                        helperText={touched?.attachement && errors?.attachement}\r\n                        error={Boolean(\r\n                          errors?.attachement && touched?.attachement\r\n                        )}\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        size=\"small\"\r\n                        disabled\r\n                        placeholder=\"\"\r\n                        value={fileName}\r\n                      />\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box mt={4} mb={1}>\r\n                    {isEditable ? (\r\n                      isSubmitting ? (\r\n                        <SuiButton\r\n                          type=\"button\"\r\n                          disabled={true}\r\n                          variant=\"gradient\"\r\n                          color=\"info\"\r\n                          fullWidth\r\n                        >\r\n                          {translate(\"Processing ...\")}\r\n                        </SuiButton>\r\n                      ) : (\r\n                        <SuiButton\r\n                          style={{\r\n                            color: \"rgb(255, 255, 255)\",\r\n                            background: \"rgb(23, 193, 232)\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          disabled={!isValid && isSubmitting}\r\n                          type=\"submit\"\r\n                        >\r\n                          {translate(\"Save\")}\r\n                        </SuiButton>\r\n                      )\r\n                    ) : (\r\n                      <SuiButton\r\n                        onClick={activateEdit}\r\n                        type=\"button\"\r\n                        variant=\"gradient\"\r\n                        color=\"info\"\r\n                        fullWidth\r\n                      >\r\n                        {translate(\"Edit Course\")}\r\n                      </SuiButton>\r\n                    )}\r\n                  </Box>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Card>\r\n        <CardActions></CardActions>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n(CourseDetail as any).layout = Admin;\r\n(CourseDetail as any).auth = false;\r\n\r\nexport default CourseDetail;\r\n"]},"metadata":{},"sourceType":"module"}