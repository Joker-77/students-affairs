{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\initialize-year\\\\assign-teachers\\\\AssignTeacher.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport Admin from \"../../../../../layouts/Admin\";\nimport { Box, Card, Grid, MenuItem, TextField, Typography } from \"@material-ui/core\";\nimport GridItem from \"../../../../../components/Grid/GridItem\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../../Utility/Translations/useTranslation\";\nimport { toast } from \"react-toastify\";\nimport { Close } from \"@material-ui/icons\";\nimport SuiButton from \"../../../../../components/SuiButton\";\nimport TeacherService from \"../../../../../Services/TeacherService\";\n\nconst AssignTeacher = ({\n  title,\n  setShow\n}) => {\n  _s();\n\n  const router = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const {\n    0: teachers,\n    1: setTeachers\n  } = useState([]);\n  useEffect(() => {\n    TeacherService.GetAll().then(res => {\n      setTeachers(res.result);\n    }).catch(err => {\n      toast.error(err.message);\n    });\n  });\n  let asssignTeacherSchema = yup.object({\n    teacher_id: yup.number(translate(\"Teacher\")).required(translate(\"Field is required\")),\n    theoretical_hours: yup.number(translate(\"Theoretical Hours\")).positive(translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    practical_hours: yup.number(\"Practical Hours\").positive(translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    mixed_hours: yup.number(\"Practical Hours\").positive(translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    theoretical_classes: yup.number(translate(\"Theoretical Classes\")).positive(translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    practical_classes: yup.number(\"Practical Classes\").positive(translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    mixed_classes: yup.number(\"Mixed Classes\").positive(translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    notes: yup.string().nullable()\n  });\n  let initialValues = {\n    teacher_id: -1,\n    theoretical_hours: 0,\n    practical_hours: 0,\n    mixed_hours: 0,\n    theoretical_classes: 0,\n    practical_classes: 0,\n    mixed_classes: 0,\n    notes: \"\"\n  };\n\n  const submitForm = (values, setSubmitting) => {\n    // CourseService.Add(payload)\n    //   .then((response) => {\n    //     if (response.success) {\n    //       toast.success(\"Course Added Successfully\");\n    //     } else {\n    //       console.log(response.error);\n    //       toast.error(response.error.message);\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(error.message);\n    //     toast.error(error.message);\n    //     throw new Error(error);\n    //   });\n    setSubmitting(false); // CourseService.Add(payload)\n    //   .then(() => {})\n    //   .catch((e) => console.error(e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    md: 12,\n    sm: 12,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      md: 12,\n      sm: 12,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"1em 4em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            item: true,\n            md: 9,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: [translate(\"Course Name\"), \":\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            md: 3,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(SuiButton, {\n              onClick: setShow,\n              style: {\n                color: \"#dc3545\",\n                backgroundColor: \"transparent\",\n                border: \"1px solid #dc3545\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), translate(\"Cancel\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"3em 3em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: asssignTeacherSchema,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting); // console.clear();\n            // console.log(values);\n          },\n          children: formik => {\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty,\n              setFieldValue\n            } = formik;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: \"teacher_id\",\n                      name: \"teacher_id\",\n                      select: true,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      fullWidth: true,\n                      children: teachers === null || teachers === void 0 ? void 0 : teachers.map(t => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: t.id,\n                        children: \"``\"\n                      }, t.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"theoretical_hours\",\n                      name: \"theoretical_hours\",\n                      onBlur: handleBlur,\n                      error: Boolean(touched.theoretical_hours && errors.theoretical_hours),\n                      helperText: touched.theoretical_hours && errors.theoretical_hours,\n                      placeholder: translate(\"Theoretical Hours\"),\n                      label: translate(\"Theoretical Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"theoretical_classes\",\n                      name: \"theoretical_classes\",\n                      onBlur: handleBlur,\n                      error: Boolean(touched.theoretical_classes && errors.theoretical_classes),\n                      helperText: touched.theoretical_classes && errors.theoretical_classes,\n                      placeholder: translate(\"Theoretical Classes\"),\n                      label: translate(\"Theoretical Classes\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"mixed_hours\",\n                      name: \"mixed_hours\",\n                      onBlur: handleBlur,\n                      error: Boolean(touched.mixed_hours && errors.mixed_hours),\n                      helperText: touched.mixed_hours && errors.mixed_hours,\n                      placeholder: translate(\"Mixed Hours\"),\n                      label: translate(\"Mixed Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 4,\n                mb: 1,\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"space-between\"\n                },\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(SuiButton, {\n                  type: \"button\",\n                  disabled: true,\n                  variant: \"gradient\",\n                  color: \"info\",\n                  children: translate(\"Processing ...\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                  style: {\n                    color: \"rgb(255, 255, 255)\",\n                    background: \"rgb(23, 193, 232)\"\n                  },\n                  disabled: !isValid && isSubmitting,\n                  type: \"submit\",\n                  children: translate(\"Save\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AssignTeacher, \"px4C5UahrKcZOCa4oMeQxHCXJgA=\", false, function () {\n  return [useRouter, useTranslation];\n});\n\n_c = AssignTeacher;\nAssignTeacher.layout = Admin;\nAssignTeacher.auth = false;\nexport default AssignTeacher;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignTeacher\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/initialize-year/assign-teachers/AssignTeacher.tsx"],"names":["Form","Formik","React","useState","useEffect","yup","Admin","Box","Card","Grid","MenuItem","TextField","Typography","GridItem","useRouter","useTranslation","toast","Close","SuiButton","TeacherService","AssignTeacher","title","setShow","router","translate","teachers","setTeachers","GetAll","then","res","result","catch","err","error","message","asssignTeacherSchema","object","teacher_id","number","required","theoretical_hours","positive","practical_hours","mixed_hours","theoretical_classes","practical_classes","mixed_classes","notes","string","nullable","initialValues","submitForm","values","setSubmitting","padding","margin","color","backgroundColor","border","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","setFieldValue","map","t","id","Boolean","display","justifyContent","background","layout","auth"],"mappings":"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","sourcesContent":["import { Form, Formik } from \"formik\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport Admin from \"../../../../../layouts/Admin\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport GridItem from \"../../../../../components/Grid/GridItem\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"../../../../../Utility/Translations/useTranslation\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IAssignTeacherModel } from \"../../../../../Models/Teachers/TeacherModel\";\r\nimport { ArrowBack, Close } from \"@material-ui/icons\";\r\nimport SuiButton from \"../../../../../components/SuiButton\";\r\nimport TeacherService from \"../../../../../Services/TeacherService\";\r\n\r\ninterface IAssignTeacherProps {\r\n  title: string;\r\n  setShow(): void;\r\n}\r\nconst AssignTeacher: React.FC<IAssignTeacherProps> = ({ title, setShow }) => {\r\n  const router = useRouter();\r\n  const { translate } = useTranslation();\r\n\r\n  const [teachers, setTeachers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    TeacherService.GetAll()\r\n      .then((res) => {\r\n        setTeachers(res.result);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.message);\r\n      });\r\n  });\r\n\r\n  let asssignTeacherSchema = yup.object({\r\n    teacher_id: yup\r\n      .number(translate(\"Teacher\"))\r\n      .required(translate(\"Field is required\")),\r\n    theoretical_hours: yup\r\n      .number(translate(\"Theoretical Hours\"))\r\n      .positive(translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    practical_hours: yup\r\n      .number(\"Practical Hours\")\r\n      .positive(translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    mixed_hours: yup\r\n      .number(\"Practical Hours\")\r\n      .positive(translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    theoretical_classes: yup\r\n      .number(translate(\"Theoretical Classes\"))\r\n      .positive(translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    practical_classes: yup\r\n      .number(\"Practical Classes\")\r\n      .positive(translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    mixed_classes: yup\r\n      .number(\"Mixed Classes\")\r\n      .positive(translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    notes: yup.string().nullable(),\r\n  });\r\n  let initialValues = {\r\n    teacher_id: -1,\r\n    theoretical_hours: 0,\r\n    practical_hours: 0,\r\n    mixed_hours: 0,\r\n    theoretical_classes: 0,\r\n    practical_classes: 0,\r\n    mixed_classes: 0,\r\n    notes: \"\",\r\n  };\r\n  const submitForm = (values, setSubmitting) => {\r\n    // CourseService.Add(payload)\r\n    //   .then((response) => {\r\n    //     if (response.success) {\r\n    //       toast.success(\"Course Added Successfully\");\r\n    //     } else {\r\n    //       console.log(response.error);\r\n    //       toast.error(response.error.message);\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error.message);\r\n    //     toast.error(error.message);\r\n    //     throw new Error(error);\r\n    //   });\r\n    setSubmitting(false);\r\n    // CourseService.Add(payload)\r\n    //   .then(() => {})\r\n    //   .catch((e) => console.error(e));\r\n  };\r\n  return (\r\n    <Grid container md={12} sm={12}>\r\n      <Grid md={12} sm={12} xs={12}>\r\n        <Card style={{ padding: \"1em 4em\", margin: \"5px 0px\" }}>\r\n          <Grid container>\r\n            <GridItem item md={9} xs={12} sm={12}>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                {translate(\"Course Name\")}:{\" \"}\r\n              </Typography>\r\n            </GridItem>\r\n            <GridItem md={3} xs={12} sm={12}>\r\n              <SuiButton\r\n                onClick={setShow}\r\n                style={{\r\n                  color: \"#dc3545\",\r\n                  backgroundColor: \"transparent\",\r\n                  border: \"1px solid #dc3545\",\r\n                }}\r\n              >\r\n                <Close />\r\n                {translate(\"Cancel\")}\r\n              </SuiButton>\r\n            </GridItem>\r\n          </Grid>\r\n        </Card>\r\n        <Card style={{ padding: \"3em 3em\", margin: \"5px 0px\" }}>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={asssignTeacherSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              submitForm(values, setSubmitting);\r\n              // console.clear();\r\n              // console.log(values);\r\n            }}\r\n          >\r\n            {(formik) => {\r\n              const {\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                isSubmitting,\r\n                isValid,\r\n                dirty,\r\n                setFieldValue,\r\n              } = formik;\r\n              return (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Grid container md={12} xs={12} style={{ margin: \"1em 0em\" }}>\r\n                    {/* <Grid\r\n                      container\r\n                      md={12}\r\n                      style={{\r\n                        margin: \"1em 0em\",\r\n                        color: \"red\",\r\n                        display:\r\n                          errors && // 👈 null and undefined check\r\n                          Object.keys(errors).length === 0 &&\r\n                          Object.getPrototypeOf(errors) === Object.prototype\r\n                            ? \"none\"\r\n                            : \"block\",\r\n                      }}\r\n                    >\r\n                      <Grid item xs={3} md={3} style={{ color: \"red\" }}>\r\n                        {JSON.stringify(errors)}\r\n                      </Grid>\r\n                    </Grid> */}\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"select\"\r\n                          id=\"teacher_id\"\r\n                          name=\"teacher_id\"\r\n                          select={true}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          fullWidth\r\n                        >\r\n                          {teachers?.map((t) => (\r\n                            <MenuItem key={t.id} value={t.id}>\r\n                             ``\r\n                            </MenuItem>\r\n                          ))}\r\n                        </TextField>\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"theoretical_hours\"\r\n                          name=\"theoretical_hours\"\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.theoretical_hours &&\r\n                              errors.theoretical_hours\r\n                          )}\r\n                          helperText={\r\n                            touched.theoretical_hours &&\r\n                            errors.theoretical_hours\r\n                          }\r\n                          placeholder={translate(\"Theoretical Hours\")}\r\n                          label={translate(\"Theoretical Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"theoretical_classes\"\r\n                          name=\"theoretical_classes\"\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.theoretical_classes &&\r\n                              errors.theoretical_classes\r\n                          )}\r\n                          helperText={\r\n                            touched.theoretical_classes &&\r\n                            errors.theoretical_classes\r\n                          }\r\n                          placeholder={translate(\"Theoretical Classes\")}\r\n                          label={translate(\"Theoretical Classes\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"mixed_hours\"\r\n                          name=\"mixed_hours\"\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.mixed_hours && errors.mixed_hours\r\n                          )}\r\n                          helperText={touched.mixed_hours && errors.mixed_hours}\r\n                          placeholder={translate(\"Mixed Hours\")}\r\n                          label={translate(\"Mixed Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container md={12} xs={12} style={{ margin: \"1em 0em\" }}>\r\n                    <Grid item xs={3} md={3}></Grid>\r\n                  </Grid>\r\n                  <Box\r\n                    mt={4}\r\n                    mb={1}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    {isSubmitting ? (\r\n                      <SuiButton\r\n                        type=\"button\"\r\n                        disabled={true}\r\n                        variant=\"gradient\"\r\n                        color=\"info\"\r\n                      >\r\n                        {translate(\"Processing ...\")}\r\n                      </SuiButton>\r\n                    ) : (\r\n                      <SuiButton\r\n                        style={{\r\n                          color: \"rgb(255, 255, 255)\",\r\n                          background: \"rgb(23, 193, 232)\",\r\n                        }}\r\n                        disabled={!isValid && isSubmitting}\r\n                        type=\"submit\"\r\n                      >\r\n                        {translate(\"Save\")}\r\n                      </SuiButton>\r\n                    )}\r\n                  </Box>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n(AssignTeacher as any).layout = Admin;\r\n(AssignTeacher as any).auth = false;\r\n\r\nexport default AssignTeacher;\r\n"]},"metadata":{},"sourceType":"module"}