{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Select, MenuItem, Box, FormControl, InputLabel, TextField, InputAdornment, OutlinedInput, Dialog, DialogTitle, DialogActions, Accordion, Typography, AccordionDetails, IconButton } from \"@material-ui/core\";\nimport { FilterList, Sort, Search, Print, Description, FileCopy, Close, Assignment } from \"@material-ui/icons\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { ExportToCsv } from \"export-to-csv\";\nimport { useReactToPrint } from \"react-to-print\";\nimport _ from \"lodash\";\nimport PlanService from \"../../../../Services/PlanService\";\nimport { toast } from \"react-toastify\";\nimport CourseShallow from \"./courseShallow\";\nimport AssignTeacher from \"./assign-teachers/AssignTeacher\";\n\nconst PlanCourses = ({\n  programCourses,\n  nofilter,\n  type\n}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const [showCourseDetail, setshowCourseDetail] = React.useState(false);\n  const [course, setCourse] = React.useState();\n  const [searchResult, setSearchResult] = React.useState(null); // data\n\n  const {\n    0: data,\n    1: setData\n  } = useState(programCourses);\n  const [filteredData, setFilteredData] = React.useState(null);\n  useEffect(() => {\n    setData(programCourses);\n    setFilteredData(programCourses);\n  }, [programCourses]);\n\n  const setShow = () => {\n    setshowCourseDetail(!showCourseDetail);\n  };\n  /********************** Filter && Sort *********/\n\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    var _inputLabel$current;\n\n    setLabelWidth(inputLabel === null || inputLabel === void 0 ? void 0 : (_inputLabel$current = inputLabel.current) === null || _inputLabel$current === void 0 ? void 0 : _inputLabel$current.offsetWidth);\n  }, []);\n  const inputSortLabel = React.useRef(null);\n  const [sortLabelWidth, setSortLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    var _inputSortLabel$curre;\n\n    setSortLabelWidth(inputSortLabel === null || inputSortLabel === void 0 ? void 0 : (_inputSortLabel$curre = inputSortLabel.current) === null || _inputSortLabel$curre === void 0 ? void 0 : _inputSortLabel$curre.offsetWidth);\n  }, []);\n  const filters = [{\n    value: 0,\n    label: translate(\"None\")\n  }, {\n    value: \"1\",\n    label: translate(\"Name\")\n  }, {\n    value: \"2\",\n    label: translate(\"Course Code\")\n  }, {\n    value: \"3\",\n    label: translate(\"Year\")\n  }, {\n    value: \"4\",\n    label: translate(\"Speciality\")\n  }, {\n    value: \"5\",\n    label: translate(\"Semester\")\n  }]; // Handle Api Data\n  // Specialities\n\n  const [filter, setFilter] = React.useState(0);\n  const [search, setSearch] = React.useState(\"\"); // ---- Handle File --------------------------------\n\n  const filterData = () => {\n    let _filteredCourses = Courses;\n    let _value = search;\n\n    if (filter == 0) {\n      _filteredCourses = Courses.filter((course, index) => {\n        var _course$current_descr, _course$current_descr2;\n\n        return course.ar_name.includes(_value) || course.en_name.includes(_value) || course.fr_name.includes(_value) || ((_course$current_descr = course.current_description) === null || _course$current_descr === void 0 ? void 0 : _course$current_descr.total_hours.toString().includes(_value)) || ((_course$current_descr2 = course.current_description) === null || _course$current_descr2 === void 0 ? void 0 : _course$current_descr2.credit.toString().includes(_value));\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (filter == 1) {\n      _filteredCourses = Courses.filter((course, index) => {\n        return course.ar_name.includes(_value) || course.en_name.includes(_value) || course.fr_name.includes(_value);\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (filter == 2) {\n      _filteredCourses = Courses.filter((course, index) => {\n        var _course$current_descr3;\n\n        return (_course$current_descr3 = course.current_description) === null || _course$current_descr3 === void 0 ? void 0 : _course$current_descr3.total_hours.toString().includes(_value);\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (filter == 3) {\n      _filteredCourses = Courses.filter((course, index) => {\n        var _course$current_descr4;\n\n        return (_course$current_descr4 = course.current_description) === null || _course$current_descr4 === void 0 ? void 0 : _course$current_descr4.credit.toString().includes(_value);\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n  };\n\n  const handleChangeFilter = event => {\n    setFilter(event.target.value);\n    filterData();\n  };\n\n  const handleSearch = event => {\n    var _event$target;\n\n    let _value = event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;\n\n    setSearch(_value);\n    filterData();\n  }; // ---- Handle Sort --------------------------------\n\n\n  const [sortBy, setSortBy] = React.useState(0);\n\n  const handleSortBy = event => {\n    var _event$target2;\n\n    let _value = event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.value;\n\n    setSortBy(_value);\n    let _filteredCourses = Courses;\n\n    if (sortBy == 1) {\n      _filteredCourses = Courses.sort((a, b) => {\n        if (a.ar_name > b.ar_name) {\n          return 1;\n        } else if (a.ar_name < b.ar_name) {\n          return -1;\n        }\n\n        if (a.en_name > b.en_name) {\n          return 1;\n        } else if (a.en_name < b.en_name) {\n          return -1;\n        }\n\n        if (a.fr_name > b.fr_name) {\n          return 1;\n        } else if (a.fr_name < b.fr_name) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (sortBy == 2) {\n      _filteredCourses = Courses.sort((a, b) => {\n        var _a$current_descriptio, _b$current_descriptio, _a$current_descriptio2, _b$current_descriptio2;\n\n        if (((_a$current_descriptio = a.current_description) === null || _a$current_descriptio === void 0 ? void 0 : _a$current_descriptio.total_hours) > ((_b$current_descriptio = b.current_description) === null || _b$current_descriptio === void 0 ? void 0 : _b$current_descriptio.total_hours)) {\n          return 1;\n        } else if (((_a$current_descriptio2 = a.current_description) === null || _a$current_descriptio2 === void 0 ? void 0 : _a$current_descriptio2.total_hours) < ((_b$current_descriptio2 = b.current_description) === null || _b$current_descriptio2 === void 0 ? void 0 : _b$current_descriptio2.total_hours)) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (sortBy == 3) {\n      _filteredCourses = Courses.sort((a, b) => {\n        var _a$current_descriptio3, _b$current_descriptio3, _a$current_descriptio4, _b$current_descriptio4;\n\n        if (((_a$current_descriptio3 = a.current_description) === null || _a$current_descriptio3 === void 0 ? void 0 : _a$current_descriptio3.credit) > ((_b$current_descriptio3 = b.current_description) === null || _b$current_descriptio3 === void 0 ? void 0 : _b$current_descriptio3.credit)) {\n          return 1;\n        } else if (((_a$current_descriptio4 = a.current_description) === null || _a$current_descriptio4 === void 0 ? void 0 : _a$current_descriptio4.credit) < ((_b$current_descriptio4 = b.current_description) === null || _b$current_descriptio4 === void 0 ? void 0 : _b$current_descriptio4.credit)) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n  };\n  /**************************  Handle Export data ****************************/\n\n\n  const [showExportColumns, setShowExportColumns] = React.useState(false);\n  const {\n    0: checked,\n    1: setChecked\n  } = useState([]);\n  const {\n    0: selectedColumns,\n    1: setSelectedColumns\n  } = useState([]);\n\n  const handleCheck = event => {\n    var updatedList = [...checked];\n\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n\n    setChecked(updatedList);\n    setSelectedColumns(columns.filter(item => {\n      return updatedList.includes(item.field);\n    }));\n  };\n\n  const csvOptions = {\n    fieldSeparator: \";\",\n    quoteStrings: '\"',\n    decimalSeparator: \".\",\n    showLabels: true,\n    useBom: true,\n    useKeysAsHeaders: false,\n    headers: selectedColumns.map(c => c.title)\n  };\n  const csvExporter = new ExportToCsv(csvOptions);\n\n  const handleExportData = () => {\n    setShowExportColumns(!showExportColumns);\n  };\n\n  const generateExcel = () => {\n    csvExporter.generateCsv(data.map(course => {\n      let object = {};\n      selectedColumns.forEach((item, index) => {\n        var _$get;\n\n        _.set(object, `col ${index}`, (_$get = _.get(course, item.field)) !== null && _$get !== void 0 ? _$get : \"\");\n      });\n      console.log(object);\n      return object;\n    }));\n  };\n  /************************** Handle Delete Course ****************************/\n\n\n  const tableRef = useRef();\n  const generatePDF = useReactToPrint({\n    content: () => tableRef.current,\n    documentTitle: translate(\"Courses\")\n  });\n  const columns = [{\n    title: translate(\"Id\"),\n    field: \"id\",\n    hidden: true\n  }, {\n    title: translate(\"Program\"),\n    field: \"program_id\"\n  }, {\n    title: translate(\"Course Code\"),\n    field: \"edu_course.course.code\"\n  }, {\n    title: translate(\"Course Name\"),\n    field: \"edu_course.course.ar_name\"\n  }, {\n    title: translate(\"Year\"),\n    field: \"year.ar_name\"\n  }, {\n    title: translate(\"Speciality\"),\n    field: \"year.speciality.ar_name\"\n  }, {\n    title: translate(\"Semester\"),\n    field: \"semester\",\n    lookup: {\n      1: \"الأول\",\n      2: \"الثاني\"\n    }\n  }]; // Confirm Delete\n\n  const [confirmDelete, setConfirmDelete] = React.useState(false);\n  const [deleteId, setDeleteId] = React.useState(null);\n\n  const handleDeleteCourse = () => {\n    if (deleteId) {\n      PlanService.DeleteCourse(deleteId).then(resp => {\n        if (resp.success) {\n          toast.success(translate(\"Course removed from plan successfully\"));\n\n          let _data = data.filter(item => {\n            return item.id != deleteId;\n          });\n\n          setData(_data);\n          setFilteredData(_data);\n          setConfirmDelete(false);\n        }\n      }).catch(err => {});\n    } else toast.success(\"يجب تحديد معرّف المقرّر ضمن البرنامج\");\n  }; // Handle Show Confirm Dialog\n\n\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n\n  const handleConfirmDialog = data => {\n    setDeleteId(data.id);\n    setName(data.edu_course.course.ar_name);\n    setConfirmDelete(true);\n  };\n\n  const handleCloseConfirmDialog = () => {\n    setDeleteId(null);\n    setConfirmDelete(false);\n  };\n  /************************** Course Detail ****************************/\n\n\n  const {\n    0: showCoursedetail,\n    1: setShowCourseDetail\n  } = useState(false);\n  const {\n    0: courseDetail,\n    1: setCourseDetail\n  } = useState(null);\n  /************************** Handle Assign Teacher ****************************/\n\n  /************************** Handle Course Detail ****************************/\n\n  const handleCourseDetail = data => {\n    setCourseDetail(data);\n    setShowCourseDetail(true);\n  };\n\n  const handleCloseCourseDetail = () => {\n    setShowCourseDetail(false);\n  }; // Render Program Courses\n\n\n  const renderPlanCourses = () => {\n    if (filteredData != null && filteredData.length > 0) {\n      let options = {\n        // exportAllData: true,\n        // exportButton: true,\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\",\n        search: false,\n        tableLayout: \"auto\"\n      };\n      let actions = [{\n        icon: () => /*#__PURE__*/_jsxs(SuiButton, {\n          style: {\n            minWidth: 140,\n            width: 140\n          },\n          color: \"primary\",\n          children: [translate(\"Details\"), /*#__PURE__*/_jsx(FileCopy, {})]\n        }),\n        onClick: (evt, data) => handleCourseDetail(data)\n      }, {\n        icon: () => /*#__PURE__*/_jsx(SuiButton, {\n          style: {\n            minWidth: 80,\n            color: \"#dc3545\",\n            backgroundColor: \"transparent\",\n            border: \"1px solid #dc3545\"\n          },\n          color: \"danger\",\n          children: translate(\"Delete\")\n        }),\n        onClick: (evt, data) => handleConfirmDialog(data)\n      }];\n\n      if (type == \"teachers\") {\n        actions.splice(1, 0, {\n          icon: () => /*#__PURE__*/_jsxs(SuiButton, {\n            style: {\n              minWidth: 140,\n              width: 140\n            },\n            color: \"primary\",\n            children: [translate(\"Assign Teacher\"), /*#__PURE__*/_jsx(Assignment, {})]\n          }),\n          onClick: (evt, data) => Assign(data)\n        });\n      }\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        ref: tableRef,\n        children: /*#__PURE__*/_jsx(ActionTable, {\n          Title: `${translate(\"All\")} ${data.length}`,\n          Columns: columns,\n          Data: data,\n          Options: options,\n          Actions: actions\n        })\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {\n      loading: false\n    });\n  };\n\n  const ConfirmDialog = ({\n    id,\n    show,\n    handleClose,\n    handleDeleteCourse\n  }) => {\n    return /*#__PURE__*/_jsxs(Dialog, {\n      open: show,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(DialogTitle, {\n        children: /*#__PURE__*/_jsx(Typography, {\n          children: `هل تريد تأكيد حذف المقرر ${name}`\n        })\n      }), /*#__PURE__*/_jsx(Box, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        children: /*#__PURE__*/_jsx(IconButton, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsx(Close, {})\n        })\n      }), /*#__PURE__*/_jsxs(DialogActions, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          variant: \"contained\",\n          children: translate(\"Cancel\")\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: () => handleDeleteCourse(id),\n          color: \"primary\",\n          variant: \"contained\",\n          children: translate(\"Confirm\")\n        })]\n      })]\n    });\n  };\n\n  const {\n    0: showAssignTeacher,\n    1: setShowAssignTeacher\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: pdata,\n    1: setPdata\n  } = useState(null);\n\n  const Assign = data => {\n    var _data$edu_course, _data$edu_course$cour, _data$edu_course2, _data$edu_course2$cou, _data$edu_year, _data$year, _data$year$speciality, _data$year2;\n\n    console.clear();\n    console.log(data);\n    const _title = `تكليف مدرّس ضمن المقرّر: \n    (${data === null || data === void 0 ? void 0 : (_data$edu_course = data.edu_course) === null || _data$edu_course === void 0 ? void 0 : (_data$edu_course$cour = _data$edu_course.course) === null || _data$edu_course$cour === void 0 ? void 0 : _data$edu_course$cour.code}) \n    (${data === null || data === void 0 ? void 0 : (_data$edu_course2 = data.edu_course) === null || _data$edu_course2 === void 0 ? void 0 : (_data$edu_course2$cou = _data$edu_course2.course) === null || _data$edu_course2$cou === void 0 ? void 0 : _data$edu_course2$cou.ar_name}) \n    (${data === null || data === void 0 ? void 0 : (_data$edu_year = data.edu_year) === null || _data$edu_year === void 0 ? void 0 : _data$edu_year.year}) \n    (${data === null || data === void 0 ? void 0 : (_data$year = data.year) === null || _data$year === void 0 ? void 0 : (_data$year$speciality = _data$year.speciality) === null || _data$year$speciality === void 0 ? void 0 : _data$year$speciality.ar_name})\n    (${data === null || data === void 0 ? void 0 : (_data$year2 = data.year) === null || _data$year2 === void 0 ? void 0 : _data$year2.ar_name})\n    `;\n    setTitle(_title);\n    setPdata(data);\n    setShowAssignTeacher(true);\n  };\n\n  const setHide = () => {\n    setShowAssignTeacher(!showAssignTeacher);\n  };\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    children: [!showAssignTeacher && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(GridItem, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxs(GridItem, {\n          container: true,\n          md: 12,\n          style: {\n            margin: \"0px 0px 10px 0\"\n          },\n          children: [/*#__PURE__*/_jsx(GridItem, {\n            md: 7\n          }), /*#__PURE__*/_jsx(GridItem, {})]\n        }), /*#__PURE__*/_jsxs(GridItem, {\n          style: {\n            marginBottom: \"1em\",\n            marginTop: \"2em\"\n          },\n          children: [/*#__PURE__*/_jsxs(FormControl, {\n            size: \"small\",\n            variant: \"outlined\",\n            style: {\n              minWidth: 150,\n              margin: \"0 0 0 1em\"\n            },\n            children: [/*#__PURE__*/_jsxs(InputLabel, {\n              style: {\n                display: \"flex\"\n              },\n              shrink: true,\n              ref: inputLabel,\n              htmlFor: \"outlined-filter\",\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: translate(\"Filter\")\n              }), /*#__PURE__*/_jsx(FilterList, {})]\n            }), /*#__PURE__*/_jsx(Select, {\n              id: \"select-filter\",\n              value: filter,\n              onChange: handleChangeFilter,\n              label: filters[filter].label,\n              input: /*#__PURE__*/_jsx(OutlinedInput, {\n                notched: true,\n                labelWidth: labelWidth,\n                name: \"filter\",\n                id: \"outlined-filter\"\n              }),\n              children: filters.map(option => /*#__PURE__*/_jsx(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value))\n            })]\n          }), /*#__PURE__*/_jsx(FormControl, {\n            children: /*#__PURE__*/_jsx(TextField, {\n              onKeyUp: handleSearch,\n              size: \"small\",\n              id: \"outlined-basic\",\n              label: \"\\u0628\\u062D\\u062B\",\n              variant: \"outlined\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsx(Search, {})\n                })\n              }\n            })\n          }), /*#__PURE__*/_jsxs(FormControl, {\n            size: \"small\",\n            variant: \"outlined\",\n            style: {\n              minWidth: 150,\n              margin: \"0 1em 0 1em\"\n            },\n            children: [/*#__PURE__*/_jsxs(InputLabel, {\n              style: {\n                display: \"flex\"\n              },\n              shrink: true,\n              ref: inputSortLabel,\n              htmlFor: \"outlined-sort\",\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: translate(\"Sort By\")\n              }), /*#__PURE__*/_jsx(Sort, {})]\n            }), /*#__PURE__*/_jsx(Select, {\n              displayEmpty: true,\n              fullWidth: true,\n              labelId: \"autowidth-label\",\n              id: \"select-sort\",\n              value: sortBy,\n              onChange: handleSortBy,\n              autoWidth: true,\n              input: /*#__PURE__*/_jsx(OutlinedInput, {\n                notched: true,\n                labelWidth: sortLabelWidth,\n                name: \"sort\",\n                id: \"outlined-sort\"\n              }),\n              label: filters[sortBy].label,\n              children: filters.map(option => /*#__PURE__*/_jsx(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value))\n            })]\n          }), /*#__PURE__*/_jsxs(Button, {\n            style: {\n              margin: \"0px 5px\"\n            },\n            disabled: false,\n            variant: \"contained\",\n            className: classes.submitBtn,\n            onClick: generatePDF,\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              style: {\n                padding: \"0px 0px 0px 10px\"\n              },\n              children: translate(\"Print\")\n            }), /*#__PURE__*/_jsx(Print, {})]\n          }), /*#__PURE__*/_jsxs(Button, {\n            style: {\n              margin: \"0px 5px\"\n            },\n            disabled: false,\n            variant: \"contained\",\n            className: classes.submitBtn,\n            onClick: handleExportData,\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              style: {\n                padding: \"0px 0px 0px 10px\"\n              },\n              children: translate(\"Export to excel\")\n            }), /*#__PURE__*/_jsx(Description, {})]\n          })]\n        }), showExportColumns && /*#__PURE__*/_jsx(GridItem, {\n          children: /*#__PURE__*/_jsx(Accordion, {\n            children: /*#__PURE__*/_jsx(AccordionDetails, {\n              children: /*#__PURE__*/_jsxs(GridItem, {\n                container: true,\n                children: [/*#__PURE__*/_jsx(GridItem, {\n                  md: 12,\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsx(Typography, {\n                    style: {\n                      backgroundColor: \"lightgray\",\n                      boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n                      padding: \"0em 1.2em\",\n                      margin: \"0em 0em .5em 0em\"\n                    },\n                    children: translate(\"Select Columns\")\n                  })\n                }), /*#__PURE__*/_jsxs(GridItem, {\n                  md: 12,\n                  children: [/*#__PURE__*/_jsx(GridItem, {\n                    className: \"list-container\",\n                    style: {\n                      display: \"flex\",\n                      justifyContent: \"space-between\"\n                    },\n                    children: columns // .filter((item) => !item.hidden)\n                    .map((item, index) => /*#__PURE__*/_jsxs(GridItem, {\n                      children: [/*#__PURE__*/_jsx(\"input\", {\n                        value: item.field,\n                        type: \"checkbox\",\n                        onChange: handleCheck\n                      }), /*#__PURE__*/_jsx(\"span\", {\n                        children: item.title\n                      })]\n                    }, index))\n                  }), /*#__PURE__*/_jsx(GridItem, {\n                    md: 12,\n                    style: {\n                      display: \"flex\",\n                      justifyContent: \"center\"\n                    },\n                    children: /*#__PURE__*/_jsxs(Button, {\n                      style: {\n                        margin: \"0px 5px\"\n                      },\n                      disabled: false,\n                      variant: \"contained\",\n                      className: classes.successText,\n                      onClick: generateExcel,\n                      children: [/*#__PURE__*/_jsx(\"span\", {\n                        style: {\n                          padding: \"0px 0px 0px 10px\"\n                        },\n                        children: translate(\"Export\")\n                      }), /*#__PURE__*/_jsx(Description, {})]\n                    })\n                  })]\n                })]\n              })\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsx(GridItem, {\n        md: 12,\n        style: {\n          marginTop: \"1em\"\n        },\n        children: renderPlanCourses()\n      }), /*#__PURE__*/_jsx(ConfirmDialog, {\n        id: deleteId,\n        show: confirmDelete,\n        handleClose: handleCloseConfirmDialog,\n        handleDeleteCourse: handleDeleteCourse\n      }, \"Confirm Delete Course\"), /*#__PURE__*/_jsx(CourseShallow, {\n        show: showCoursedetail,\n        course: courseDetail,\n        close: handleCloseCourseDetail\n      }, \"Shallow Course\")]\n    }), showAssignTeacher && /*#__PURE__*/_jsx(AssignTeacher, {\n      data: pdata,\n      title: title,\n      setShow: setHide\n    }, \"AssignTeacher\")]\n  });\n};\n\nexport default PlanCourses;","map":null,"metadata":{},"sourceType":"module"}