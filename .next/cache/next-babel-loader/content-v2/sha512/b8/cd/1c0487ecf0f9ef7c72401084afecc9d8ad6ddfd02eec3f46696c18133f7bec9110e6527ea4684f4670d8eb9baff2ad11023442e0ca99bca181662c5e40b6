{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\components\\\\CoverLayout\\\\index.js\",\n    _s = $RefreshSig$();\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Grid from \"@material-ui/core/Grid\"; // Soft UI Dashboard React components\n\nimport { Box, Typography } from \"@material-ui/core\"; // Soft UI Dashboard React examples\n\nimport PageLayout from \"../PageLayout/index\";\nimport { useRouter } from \"next/router\";\n\nfunction CoverLayout({\n  color,\n  header,\n  title,\n  description,\n  image,\n  top,\n  children\n}) {\n  _s();\n\n  const {\n    locale\n  } = useRouter();\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    background: \"white\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        justifyContent: \"center\",\n        direction: locale === 'ar' ? 'rtl' : 'ltr'\n      },\n      sx: {\n        minHeight: \"75vh\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 11,\n        sm: 8,\n        md: 5,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: top,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            pt: 3,\n            px: 3,\n            children: !header ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h3\",\n                  fontWeight: \"bold\",\n                  color: color,\n                  textGradient: true,\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                fontWeight: \"regular\",\n                color: \"text\",\n                children: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 3,\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          height: \"100%\",\n          display: {\n            xs: \"none\",\n            md: \"block\"\n          },\n          position: \"relative\" // right={{ md: \"-12rem\", xl: \"-16rem\" }}\n          ,\n          left: {\n            md: \"-15rem\",\n            xl: \"-20rem\"\n          },\n          mr: -16,\n          sx: {\n            transform: `skewX(${locale === 'ar' ? '+' : '-'}10deg)`,\n            overflow: \"hidden\",\n            borderBottomLeftRadius: ({\n              borders: {\n                borderRadius\n              }\n            }) => borderRadius.lg\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            ml: -8,\n            height: \"100%\",\n            sx: {\n              backgroundImage: `url(${image})`,\n              backgroundSize: \"cover\",\n              transform: locale === 'ar' ? \"skewX(0deg)\" : \"skewX(10deg)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of CoverLayout\n\n\n_s(CoverLayout, \"8NqG7Oj4xICngQpoOytAK34hitI=\", false, function () {\n  return [useRouter];\n});\n\n_c = CoverLayout;\nCoverLayout.defaultProps = {\n  header: \"\",\n  title: \"\",\n  description: \"\",\n  color: \"info\",\n  top: 20\n}; // Typechecking props for the CoverLayout\n\nCoverLayout.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\"]),\n  header: PropTypes.node,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string.isRequired,\n  top: PropTypes.number,\n  children: PropTypes.node.isRequired\n};\nexport default CoverLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoverLayout\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/components/CoverLayout/index.js"],"names":["PropTypes","Grid","Box","Typography","PageLayout","useRouter","CoverLayout","color","header","title","description","image","top","children","locale","justifyContent","direction","minHeight","margin","xs","md","xl","transform","overflow","borderBottomLeftRadius","borders","borderRadius","lg","backgroundImage","backgroundSize","defaultProps","propTypes","oneOf","node","string","isRequired","number"],"mappings":"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","sourcesContent":["// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// Soft UI Dashboard React components\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\n// Soft UI Dashboard React examples\r\nimport PageLayout from \"../PageLayout/index\";\r\nimport {useRouter} from \"next/router\";\r\n\r\nfunction CoverLayout({\r\n  color,\r\n  header,\r\n  title,\r\n  description,\r\n  image,\r\n  top,\r\n  children,\r\n}) {\r\n  const { locale } = useRouter();\r\n\r\n  return (\r\n    <PageLayout background=\"white\">\r\n      <Grid\r\n        container\r\n        style={{ justifyContent: \"center\", direction: locale === 'ar' ? 'rtl' : 'ltr' }}\r\n        sx={{\r\n          minHeight: \"75vh\",\r\n          margin: 0,\r\n        }}\r\n      >\r\n        <Grid item xs={11} sm={8} md={5} xl={3}>\r\n          <Box mt={top}>\r\n            <Box pt={3} px={3}>\r\n              {!header ? (\r\n                <>\r\n                  <Box mb={1}>\r\n                    <Typography\r\n                      variant=\"h3\"\r\n                      fontWeight=\"bold\"\r\n                      color={color}\r\n                      textGradient\r\n                    >\r\n                      {title}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" fontWeight=\"regular\" color=\"text\">\r\n                    {description}\r\n                  </Typography>\r\n                </>\r\n              ) : (\r\n                header\r\n              )}\r\n            </Box>\r\n            <Box p={3}>{children}</Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          <Box\r\n            height=\"100%\"\r\n            display={{ xs: \"none\", md: \"block\" }}\r\n            position=\"relative\"\r\n            // right={{ md: \"-12rem\", xl: \"-16rem\" }}\r\n            left={{ md: \"-15rem\", xl: \"-20rem\" }}\r\n            mr={-16}\r\n            sx={{\r\n              transform: `skewX(${locale === 'ar' ? '+' : '-'}10deg)`,\r\n              overflow: \"hidden\",\r\n              borderBottomLeftRadius: ({ borders: { borderRadius } }) =>\r\n                borderRadius.lg,\r\n            }}\r\n          >\r\n            <Box\r\n              ml={-8}\r\n              height=\"100%\"\r\n              sx={{\r\n                backgroundImage: `url(${image})`,\r\n                backgroundSize: \"cover\",\r\n                transform: locale === 'ar' ? \"skewX(0deg)\" : \"skewX(10deg)\",\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\n// Setting default values for the props of CoverLayout\r\nCoverLayout.defaultProps = {\r\n  header: \"\",\r\n  title: \"\",\r\n  description: \"\",\r\n  color: \"info\",\r\n  top: 20,\r\n};\r\n\r\n// Typechecking props for the CoverLayout\r\nCoverLayout.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"dark\",\r\n    \"light\",\r\n  ]),\r\n  header: PropTypes.node,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string.isRequired,\r\n  top: PropTypes.number,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CoverLayout;\r\n"]},"metadata":{},"sourceType":"module"}