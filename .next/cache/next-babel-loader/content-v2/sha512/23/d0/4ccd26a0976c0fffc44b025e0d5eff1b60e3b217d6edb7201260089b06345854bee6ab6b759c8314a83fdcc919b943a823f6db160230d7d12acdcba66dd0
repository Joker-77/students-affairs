{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport DesireService from \"../../../../Services/DesireService\";\nimport AddDesireModal from \"../../../../components/Modals/AddDesireModal\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\";\nimport SpecialityService from \"../../../../Services/SpecialityService\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardBody from \"../../../../components/Card/CardBody\";\n\nconst CandidateDesireList = ({\n  candidateId\n}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const [open, setOpen] = React.useState(false);\n  const [specialities, setSpecialities] = React.useState([]);\n  useEffect(() => {\n    SpecialityService.GetAll().then(res => {\n      console.log(\"Speciality\", res);\n      setSpecialities(res.result);\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  }, []);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [selectedDesire, setSelectedDesire] = React.useState(0);\n  const [initAddDesire, setInitAddDesire] = React.useState({\n    id: 0,\n    order: 0,\n    speciality_id: 0,\n    candidate_id: +candidateId\n  });\n  const AddDesireScheme = Yup.object().shape({\n    order: Yup.string().required(translate(\"{0} is required\", \"Order\")),\n    speciality_id: Yup.string().required(translate(\"{0} is required\", \"Speciality\")),\n    candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\"))\n  });\n  const UpdateDesireScheme = Yup.object().shape({\n    order: Yup.string().required(translate(\"{0} is required\", \"Order\")),\n    speciality_id: Yup.string().required(translate(\"{0} is required\", \"Speciality\")),\n    candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\"))\n  });\n\n  const submitAddDesire = async (values, setSubmitting) => {\n    setSubmitting(true);\n    DesireService.Save(values).then(res => {\n      console.log(\"Desire\", res);\n      const DesireCopy = [res.result, ...Desires];\n      setDesires(DesireCopy);\n      setOpen(false);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /************************** Data ****************************/\n\n\n  useEffect(() => {\n    DesireService.GetAll(candidateId).then(res => {\n      console.log(\"Desire\", res);\n      setDesires(res.result);\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  /************************** Handle edit data ****************************/\n\n  const [openUpdateDesire, setOpenUpdateDesire] = React.useState(false);\n  const [openModalForDetails, setOpenModalForDetails] = React.useState(false);\n\n  const handleOpenUpdateDesire = data => {\n    console.log(\"data\", data);\n    setInitUpdateDesire({\n      id: data.id,\n      speciality_id: data.speciality_id,\n      order: data.order,\n      candidate_id: data.candidate_id\n    });\n    setOpenUpdateDesire(true);\n  };\n\n  const handleCloseUpdateDesire = () => {\n    setOpenModalForDetails(false);\n    setDisabled(false);\n    setOpenUpdateDesire(false);\n  };\n\n  const [initUpdateDesire, setInitUpdateDesire] = React.useState({\n    id: 0,\n    speciality_id: 0,\n    order: 0,\n    candidate_id: +candidateId\n  });\n\n  const submitUpdateDesire = async (values, setSubmitting) => {\n    setSubmitting(true);\n    console.log(\"values\", values);\n    DesireService.Edit(values).then(res => {\n      console.log(\"Desire\", res);\n      const DesireCopy = [...Desires].map(item => item.id == res.result.id ? res.result : item);\n      setDesires(DesireCopy);\n      setOpenUpdateDesire(false);\n    }).catch(error => {\n      console.error(\"roles\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /************************** Finish Handle edit data ****************************/\n\n\n  const [disabled, setDisabled] = React.useState(false);\n\n  const handleDetails = data => {\n    setOpenModalForDetails(true);\n    setDisabled(true);\n    handleOpenUpdateDesire(data);\n  };\n\n  const [Desires, setDesires] = React.useState(null);\n\n  const renderDesire = () => {\n    if (Desires != null && Desires.length > 0) {\n      let columns = [{\n        title: translate(\"Id\"),\n        field: \"id\",\n        hidden: true\n      }, {\n        title: translate(\"Speciality\"),\n        field: (router === null || router === void 0 ? void 0 : router.locale) === 'ar' ? \"speciality.ar_name\" : \"speciality.en_name\"\n      }, {\n        title: translate(\"Order\"),\n        field: \"order\"\n      } // {\n      //   title: \"candidate_id\",\n      //   field: \"candidate_id\",\n      // },\n      ];\n      let data = Desires;\n      let options = {\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        maxBodyHeight: \"500px\"\n      };\n      return /*#__PURE__*/_jsx(ActionTable, {\n        Title: translate(\"Desire List\"),\n        Columns: columns,\n        Data: data,\n        Options: options,\n        Actions: [{\n          tooltip: translate(\"Desire Details\"),\n          icon: \"details\",\n          onClick: (evt, data) => handleDetails(data)\n        }, {\n          tooltip: translate(\"Edit Desire\"),\n          icon: \"edit\",\n          onClick: (evt, data) => handleOpenUpdateDesire(data)\n        }]\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  };\n\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(CardHeader, {\n      children: /*#__PURE__*/_jsx(\"h4\", {\n        style: {\n          fontWeight: \"bold\",\n          color: \"#01579b\"\n        },\n        children: translate('Desires')\n      })\n    }), /*#__PURE__*/_jsx(CardBody, {\n      children: /*#__PURE__*/_jsxs(GridContainer, {\n        children: [/*#__PURE__*/_jsxs(GridItem, {\n          md: 12,\n          children: [/*#__PURE__*/_jsx(Button, {\n            disabled: false,\n            variant: \"contained\",\n            className: classes.submitBtn,\n            onClick: handleOpen,\n            children: translate(\"Add New Desire\")\n          }), renderDesire()]\n        }), /*#__PURE__*/_jsx(AddDesireModal, {\n          disabled: disabled,\n          title: translate(\"Add Desire\"),\n          open: open,\n          formScheme: AddDesireScheme,\n          handleClose: handleClose,\n          initValues: initAddDesire,\n          submitForm: submitAddDesire,\n          specialities: specialities\n        }, \"addDesire\"), /*#__PURE__*/_jsx(AddDesireModal, {\n          disabled: disabled,\n          title: !openModalForDetails ? translate(\"Update Desire\") : translate(\"Desire Details\"),\n          open: openUpdateDesire,\n          formScheme: UpdateDesireScheme,\n          handleClose: handleCloseUpdateDesire,\n          initValues: initUpdateDesire,\n          submitForm: submitUpdateDesire,\n          specialities: specialities\n        }, \"updateDesire\")]\n      })\n    })]\n  });\n};\n\nCandidateDesireList.auth = true;\nCandidateDesireList.layout = Admin;\nexport default CandidateDesireList;","map":null,"metadata":{},"sourceType":"module"}