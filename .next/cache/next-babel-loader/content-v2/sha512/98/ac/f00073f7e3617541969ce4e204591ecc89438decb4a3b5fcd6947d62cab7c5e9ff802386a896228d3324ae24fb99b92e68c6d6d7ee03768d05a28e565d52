{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\students_courses\\\\list-students-course.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\n\nconst StudentListCourses = ({\n  courses\n}) => {\n  _s();\n\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const [confirm, setConfirm] = React.useState(false);\n  const [deleteTeacher, setDeleteTeacher] = React.useState(false);\n\n  const handleConfirmOpen = () => {\n    setConfirm(true);\n  };\n\n  const handleConfirmClose = () => {\n    setConfirm(false);\n  };\n\n  const handleDeleteTeacher = () => {};\n\n  const ConfirmDialog = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: confirm,\n      onClose: handleConfirmClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: translate(\"Delete a teacher\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: translate(\"Are you sure you want to delete this teacher\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteTeacher,\n          children: translate(\"Yes\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmClose,\n          autoFocus: true,\n          children: translate(\"No\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  const renderTeachers = () => {\n    let columns = [{\n      title: translate(\"Id\"),\n      field: \"id\",\n      hidden: true\n    }, {\n      title: translate(\"en_name\"),\n      field: \"en_name\"\n    }, {\n      title: translate(\"ar_name Name\"),\n      field: \"ar_name\"\n    }, {\n      title: translate(\"code\"),\n      field: \"code\"\n    }];\n\n    if (courses != null && courses.length > 0) {\n      let data = courses;\n      let options = {\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\",\n        search: false,\n        tableLayout: \"auto\"\n      };\n      let actions = [{\n        icon: () => /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            minWidth: 80,\n            color: \"#dc3545\",\n            backgroundColor: \"transparent\",\n            border: \"1px solid #dc3545\"\n          },\n          color: \"danger\",\n          children: translate(\"Delete\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this),\n        onClick: (evt, data) => handleConfirmDialog(data)\n      }];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: tableRef,\n        children: /*#__PURE__*/_jsxDEV(ActionTable, {\n          Title: translate(\"Teachers List\"),\n          Columns: columns,\n          Data: data.map(item => {\n            var _item$edu_course, _item$edu_course$cour, _item$edu_course2, _item$edu_course2$cou, _item$edu_course3, _item$edu_course3$cou;\n\n            return _objectSpread(_objectSpread({}, item), {}, {\n              en_name: `${(_item$edu_course = item.edu_course) === null || _item$edu_course === void 0 ? void 0 : (_item$edu_course$cour = _item$edu_course.course) === null || _item$edu_course$cour === void 0 ? void 0 : _item$edu_course$cour.en_name}`,\n              ar_name: `${(_item$edu_course2 = item.edu_course) === null || _item$edu_course2 === void 0 ? void 0 : (_item$edu_course2$cou = _item$edu_course2.course) === null || _item$edu_course2$cou === void 0 ? void 0 : _item$edu_course2$cou.ar_name}`,\n              code: `${(_item$edu_course3 = item.edu_course) === null || _item$edu_course3 === void 0 ? void 0 : (_item$edu_course3$cou = _item$edu_course3.course) === null || _item$edu_course3$cou === void 0 ? void 0 : _item$edu_course3$cou.code}`\n            });\n          }),\n          Options: options,\n          Actions: actions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {\n      loading: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: renderCourses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StudentListCourses, \"H73BPS5L5t4QN0e9dNlL+qzaIWA=\", true, function () {\n  return [useTranslation, useRouter];\n});\n\n_c = StudentListCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentListCourses\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/students_courses/list-students-course.tsx"],"names":["React","GridContainer","styles","useTranslation","useRouter","makeStyles","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","StudentListCourses","courses","translate","useStyles","classes","router","confirm","setConfirm","useState","deleteTeacher","setDeleteTeacher","handleConfirmOpen","handleConfirmClose","handleDeleteTeacher","ConfirmDialog","renderTeachers","columns","title","field","hidden","length","data","options","actionsColumnIndex","headerStyle","backgroundColor","color","fontWeight","filtering","paging","pageSize","maxBodyHeight","search","tableLayout","actions","icon","minWidth","border","onClick","evt","handleConfirmDialog","tableRef","map","item","en_name","edu_course","course","ar_name","code","renderCourses"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport { useRouter } from \"next/router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  TextField,\r\n  InputAdornment,\r\n  OutlinedInput,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Accordion,\r\n  Typography,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  FilterList,\r\n  Sort,\r\n  Search,\r\n  Print,\r\n  Add,\r\n  FilterListSharp,\r\n  AddComment,\r\n  AddBox,\r\n  Folder,\r\n  PostAdd,\r\n  Description,\r\n  ExpandMore,\r\n} from \"@material-ui/icons\";\r\ninterface IListCourses {\r\n    courses: any;\r\n}\r\nconst StudentListCourses = ({ courses }) => {\r\n  const { translate } = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const [confirm, setConfirm] = React.useState(false);\r\n  const [deleteTeacher, setDeleteTeacher] = React.useState(false);\r\n  const handleConfirmOpen = () => {\r\n    setConfirm(true);\r\n  };\r\n\r\n  const handleConfirmClose = () => {\r\n    setConfirm(false);\r\n  };\r\n  const handleDeleteTeacher = () => {};\r\n\r\n  const ConfirmDialog = () => (\r\n    <div>\r\n      <Dialog\r\n        open={confirm}\r\n        onClose={handleConfirmClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {translate(\"Delete a teacher\")}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {translate(\"Are you sure you want to delete this teacher\")}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteTeacher}>{translate(\"Yes\")}</Button>\r\n          <Button onClick={handleConfirmClose} autoFocus>\r\n            {translate(\"No\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n\r\n  const renderTeachers = () => {\r\n    let columns = [\r\n      {\r\n        title: translate(\"Id\"),\r\n        field: \"id\",\r\n        hidden: true,\r\n      },\r\n      {\r\n        title: translate(\"en_name\"),\r\n        field: \"en_name\",\r\n      },\r\n      {\r\n        title: translate(\"ar_name Name\"),\r\n        field: \"ar_name\",\r\n      },\r\n      {\r\n        title: translate(\"code\"),\r\n        field: \"code\",\r\n      },\r\n    ];\r\n    if (courses != null && courses.length > 0) {\r\n      let data = courses;\r\n      let options = {\r\n        actionsColumnIndex: -1,\r\n        headerStyle: {\r\n          backgroundColor: \"#01579b\",\r\n          color: \"#FFF\",\r\n          fontWeight: \"bold\",\r\n        },\r\n        filtering: false,\r\n        paging: true,\r\n        pageSize: 10,\r\n        maxBodyHeight: \"500px\",\r\n        search: false,\r\n        tableLayout: \"auto\",\r\n      };\r\n      let actions = [\r\n        {\r\n          icon: () => (\r\n            <SuiButton\r\n              style={{\r\n                minWidth: 80,\r\n                color: \"#dc3545\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"1px solid #dc3545\",\r\n              }}\r\n              color={\"danger\"}\r\n            >\r\n              {translate(\"Delete\")}\r\n            </SuiButton>\r\n          ),\r\n          onClick: (evt, data) => handleConfirmDialog(data),\r\n        },\r\n      ];\r\n      return (\r\n        <div ref={tableRef}>\r\n          <ActionTable\r\n            Title={translate(\"Teachers List\")}\r\n            Columns={columns}\r\n            Data={data.map((item) => {\r\n              return {\r\n                ...item,\r\n                en_name: `${item.edu_course?.course?.en_name}`,\r\n                ar_name: `${item.edu_course?.course?.ar_name}`,\r\n                code: `${item.edu_course?.course?.code}`,\r\n              };\r\n            })}\r\n            Options={options}\r\n            Actions={actions}\r\n          />\r\n        </div>\r\n      );\r\n    } else return <Placeholder loading={false} />;\r\n  };\r\n  return <GridContainer>\r\n    {\r\n        renderCourses\r\n    }\r\n  </GridContainer>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}