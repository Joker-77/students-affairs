{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\exams\\\\exams-list.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Admin from \"layouts/Admin.js\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, Typography, makeStyles, TextField } from \"@material-ui/core\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport PlanService from \"../../../../Services/PlanService\";\nimport EduYearService from \"../../../../Services/EduYearService\";\nimport ExamService from \"../../../../Services/ExamService\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport styles from \"assets/jss/nextjs-material-dashboard/views/dashboardStyle.js\";\nimport { KeyboardDatePicker, TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { arSA } from \"date-fns/locale\";\nimport { toast } from \"react-toastify\";\nimport \"./exams-list-style.css\";\nimport { Card } from \"@material-ui/core\";\nimport SuiButton from \"../../../../components/SuiButton\";\n\nconst ExamsList = ({}) => {\n  _s();\n\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles(); // Programs\n\n  const {\n    0: programs,\n    1: setPrograms\n  } = useState([]);\n  const {\n    0: program,\n    1: setProgram\n  } = useState(null); // Courses\n\n  const {\n    0: courses,\n    1: setCourses\n  } = useState([]);\n  const {\n    0: course,\n    1: setCourse\n  } = useState(null); // Edu Year\n\n  const {\n    0: eduYears,\n    1: setEduYears\n  } = useState([]);\n  const {\n    0: eduYear,\n    1: setEduYear\n  } = useState(null); // Exam Type\n\n  const {\n    0: examsTypes,\n    1: setExamsType\n  } = useState([]);\n  const {\n    0: examType,\n    1: setExamType\n  } = useState(null);\n  useEffect(() => {\n    PlanService.GetAll().then(programs => {\n      EduYearService.GetYears(\"\").then(eduYears => {\n        setPrograms(programs.result);\n        setEduYears(eduYears.result);\n      }).catch(err => {\n        console.error(\"Error\", err);\n      });\n    }).catch(err => {\n      console.error(\"Error\", err);\n    });\n  }, []);\n\n  const changeProgram = val => {\n    setProgram(val);\n  };\n\n  const changeEduYear = val => {\n    setEduYear(val);\n    setLoadCourses(true);\n    ExamService.GetAllCourses(program, val.toString()).then(resp => {\n      console.log(resp.result);\n      setCourses(resp.result);\n    }).catch(error => {});\n    setLoadCourses(false);\n  };\n\n  const {\n    0: loadCourses,\n    1: setLoadCourses\n  } = useState(false);\n  const {\n    0: loadExamsType,\n    1: setLoadExamsType\n  } = useState(false);\n  const {\n    0: plans,\n    1: setPlans\n  } = useState([]); // Get Exams\n\n  useEffect(() => {}, []);\n\n  const addInputField = () => {\n    if (inputFields.length >= halls.length) toast.error(\"لايمكنك الإضافة! لايوجد سوى قاعتين\");else setInputFields([...inputFields, {\n      hall: 0,\n      date: getFullDate(),\n      from: getFullTime(startTime),\n      to: getFullTime(endTime),\n      planId: 0,\n      num_studs: 0\n    }]);\n  };\n\n  const removeInputFields = index => {\n    const rows = [...inputFields];\n    rows.splice(index, 1);\n    setInputFields(rows);\n  };\n\n  const handleChange = (index, evnt) => {\n    const {\n      name,\n      value\n    } = evnt.target;\n    const list = [...inputFields];\n    list[index][name] = value;\n    setInputFields(list);\n    console.log(list);\n  }; //\n\n\n  const getFullDate = () => {\n    let day = selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.getDate();\n    let month = (selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.getMonth()) + 1;\n    let year = selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.getFullYear(); // This arrangement can be altered based on how we want the date's format to appear.\n\n    return `${(\"0\" + day).slice(-2)}-${(\"0\" + month).slice(-2)}-${year}`;\n  }; //\n\n\n  const getFullTime = date => {\n    return date.toLocaleTimeString();\n  }; // ------------------------\n\n\n  const clear = () => {\n    setSelectedNewStds(0);\n    setSelectedOldStds(0);\n    setSelectedPlans([]);\n    setPlans([]);\n    setSelectedPlanData([]);\n    setInputFields([{\n      hall: 0,\n      date: getFullDate(),\n      from: getFullTime(startTime),\n      to: getFullTime(endTime),\n      num_studs: 0\n    }]);\n  };\n\n  const changeCourse = val => {\n    clear();\n    setCourse(val);\n    setLoadExamsType(true);\n\n    let _course = courses.find(e => e.id === val);\n\n    setExamsType(_course.evaluation_methods);\n    setLoadExamsType(false);\n  };\n\n  const changeExamType = val => {\n    clear();\n\n    let _course = courses.find(e => e.id == course);\n\n    setExamType(val);\n    ExamService.GetAllPlans(program, eduYear, _course.edu_course_id, val.toString()).then(resp => setPlans(resp.result)).catch(error => {});\n  }; // Halls\n  // const [halls, setHalls] = useState([]);\n  // handle add coursse to program\n\n\n  const {\n    0: selectedPlanData,\n    1: setSelectedPlanData\n  } = useState([]);\n  const {\n    0: selectedPlans,\n    1: setSelectedPlans\n  } = useState([]);\n  const {\n    0: selectedNewStds,\n    1: setSelectedNewStds\n  } = useState(0);\n  const {\n    0: selectedOldStds,\n    1: setSelectedOldStds\n  } = useState(0);\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState(new Date());\n  const {\n    0: startTime,\n    1: setStartTime\n  } = useState(new Date());\n  const {\n    0: endTime,\n    1: setEndTime\n  } = useState(new Date());\n  console.log(\"selectedDate\", selectedDate.getDay()); // Dynamic Halls\n\n  const {\n    0: inputFields,\n    1: setInputFields\n  } = useState([{\n    hall: 0,\n    date: getFullDate(),\n    from: getFullTime(startTime),\n    to: getFullTime(endTime),\n    planId: 0,\n    num_studs: 0\n  }]);\n  console.log(inputFields);\n  const _halls = [{\n    id: 1,\n    name: \"ق1\",\n    selected: false\n  }, {\n    id: 2,\n    name: \"ق2\",\n    selected: false\n  }];\n  const {\n    0: halls,\n    1: setHalls\n  } = useState(_halls);\n\n  const handleDateChange = e => {\n    setSelectedDate(e);\n\n    let _inptFilds = inputFields.slice().map(dd => {\n      return {\n        hall: dd.hall,\n        date: getFullDate(e),\n        from: getFullTime(startTime),\n        to: getFullTime(endTime),\n        planId: dd.planId,\n        num_studs: dd.num_studs\n      };\n    });\n\n    console.clear();\n    console.log(_inptFilds);\n    setInputFields(_inptFilds);\n  };\n\n  const handleStartTime = e => {\n    setStartTime(e);\n  };\n\n  const handleEndTime = e => {\n    setEndTime(e);\n    const startHour = startTime.getHours();\n    const startMinute = startTime.getMinutes();\n    const endHour = e.getHours();\n    const endMinute = e.getMinutes();\n    if (e < startTime) toast.error(\"وقت الانتهاء يجب أن يكون بعد وقت البدء\");\n  }; // Select Plan\n\n\n  const selectPlan = id => {\n    let valAsNum = parseInt(id);\n    ExamService.getExams(id).then(resp => {\n      console.clear();\n      console.log(resp);\n    }).catch(error => {});\n\n    let _arr = selectedPlans.slice();\n\n    if (_arr.includes(valAsNum)) {\n      let index = _arr.findIndex(e => e == valAsNum);\n\n      _arr.splice(index, 1);\n\n      setSelectedPlans(_arr);\n      let sel = _arr.length > 0 ? plans.map(e => {\n        if (_arr.includes(parseInt(e.id))) return e;\n      }) : [];\n      setSelectedPlanData(sel);\n\n      if (sel.length > 0) {\n        const sumOld = sel.reduce((partialSum, a) => partialSum + a.old_students_num, 0);\n        const sumNew = sel.reduce((partialSum, a) => partialSum + a.new_students_num, 0);\n        setSelectedNewStds(sumNew);\n        setSelectedOldStds(sumOld);\n      } else {\n        setSelectedNewStds(0);\n        setSelectedOldStds(0);\n      }\n    } else {\n      _arr.push(valAsNum);\n\n      setSelectedPlans(_arr);\n      let sel = _arr.length > 0 ? plans.map(e => {\n        if (_arr.includes(parseInt(e.id))) return e;\n      }) : [];\n      setSelectedPlanData(sel);\n      const sumOld = sel.reduce((partialSum, a) => partialSum + a.old_students_num, 0);\n      const sumNew = sel.reduce((partialSum, a) => partialSum + a.new_students_num, 0);\n      setSelectedNewStds(sumNew);\n      setSelectedOldStds(sumOld);\n    }\n  };\n\n  const handleAddExam = () => {\n    const payLoad = {\n      plan_ids: [...selectedPlans],\n      type: `${examsTypes.filter(e => e.id == examType)[0].name}`,\n      date: getFullDate(),\n      from: getFullTime(startTime),\n      to: getFullTime(endTime),\n      halls: inputFields.map(dd => {\n        return {\n          id: dd.hall,\n          plan_id: dd.planId,\n          students_num: parseInt(`${dd.num_studs}`)\n        };\n      })\n    };\n    console.log(payLoad); // PlanService.AddCourse(payLoad)\n    //   .then((result) => {\n    //     if (result.success) {\n    //       toast.success(translate(\"Course Added To Plan Successfully\"));\n    //       PlanService.GetProgramCourses(program, specYear, year)\n    //         .then((resp) => {\n    //           if (resp.success) {\n    //             setProgramCourses(resp.result);\n    //           }\n    //         })\n    //         .catch((err) => {});\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     toast.error(error.message);\n    //   });\n  };\n\n  const renderPlans = plans => {\n    if (plans.length > 0) {\n      return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        locale: arSA,\n        utils: DateFnsUtils,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            margin: \"5px 0px\",\n            width: \"100%\",\n            paddingRight: \"1em\",\n            paddingBottom: \"1em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              height: \"7em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0633\\u0646\\u0629\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0627\\u062E\\u062A\\u0635\\u0627\\u0635\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0641\\u0635\\u0644\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\",\n                  marginBottom: \"0\"\n                },\n                children: [\"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0637\\u0644\\u0627\\u0628\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  fontWeight: \"bold\",\n                  marginTop: \"0\"\n                },\n                children: [\"\\u0645\\u0633\\u062A\\u062C\\u062F | \\u0645\\u0639\\u064A\\u062F\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              margin: \"2em 0em\"\n            },\n            children: plans.map(e => {\n              var _e$year, _e$year2, _e$year2$speciality;\n\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: (_e$year = e.year) === null || _e$year === void 0 ? void 0 : _e$year.ar_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: (_e$year2 = e.year) === null || _e$year2 === void 0 ? void 0 : (_e$year2$speciality = _e$year2.speciality) === null || _e$year2$speciality === void 0 ? void 0 : _e$year2$speciality.ar_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: e.semester\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 1,\n                  children: [e.new_students_num, \" | \", e.old_students_num]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 1,\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedPlans.includes(e.id),\n                    value: e.id,\n                    onChange: p => selectPlan(p.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              md: 1,\n              children: \"\\u0627\\u0644\\u062A\\u0627\\u0631\\u064A\\u062E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                clearable: true,\n                value: selectedDate,\n                onChange: date => handleDateChange(date),\n                minDate: new Date(),\n                format: \"MM/dd/yyyy\" // inputVariant=\"outlined\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              marginTop: \"3em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              style: {\n                display: \"flex\",\n                marginTop: \"1em\"\n              },\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" \\u0627\\u0644\\u0648\\u0642\\u062A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                clearable: true,\n                label: \"\\u0645\\u0646\",\n                value: startTime,\n                onChange: handleStartTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                showTodayButton: true,\n                todayLabel: \"now\",\n                label: \"\\u0625\\u0644\\u0649\",\n                value: endTime,\n                minutesStep: 5,\n                onChange: handleEndTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              md: 4,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 5,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0627\\u0644\\u0645\\u062C\\u0645\\u0648\\u0639 \\u0627\\u0644\\u0643\\u0644\\u064A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0645\\u0633\\u062A\\u062C\\u062F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0645\\u0639\\u064A\\u062F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: `${selectedNewStds + selectedOldStds}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: selectedNewStds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: selectedOldStds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          md: 12,\n          style: {\n            marginTop: \"1em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              margin: \"5px 0px\",\n              width: \"100%\",\n              paddingRight: \"1em\",\n              paddingBottom: \"1em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  margin: \"10px 5px\"\n                },\n                variant: \"contained\",\n                className: classes.submitBtn,\n                onClick: addInputField,\n                children: \"\\u062A\\u062E\\u0635\\u064A\\u0635 \\u0642\\u0627\\u0639\\u0629\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), inputFields.map((data, index) => {\n              console.log(data);\n              console.log(selectedPlanData);\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                style: {\n                  marginTop: \"1em\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    variant: \"filled\",\n                    size: \"small\",\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"demo-simple-select-label\",\n                      children: \"\\u0627\\u0644\\u0642\\u0627\\u0639\\u0629\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      fullWidth: true,\n                      labelId: \"demo-simple-select-label\",\n                      id: \"demo-simple-select\",\n                      value: data.hall,\n                      label: \"halls\",\n                      name: \"hall\",\n                      onChange: evnt => handleChange(index, evnt),\n                      children: halls.map(hall => !hall.selected && /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: hall.id,\n                        children: hall.name\n                      }, hall.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    variant: \"filled\",\n                    size: \"small\",\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"demo-simple-select-label\",\n                      children: \"\\u0627\\u0644\\u0633\\u0646\\u0629 \\u0648\\u0627\\u0644\\u0627\\u062E\\u062A\\u0635\\u0627\\u0635\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      fullWidth: true,\n                      labelId: \"demo-simple-select-label\",\n                      id: \"demo-simple-select\",\n                      value: data.planId,\n                      label: \"halls\",\n                      name: \"planId\",\n                      onChange: evnt => handleChange(index, evnt),\n                      children: selectedPlanData.map(data => {\n                        var _data$year, _data$year2, _data$year2$specialit;\n\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: data.id,\n                          children: `${(_data$year = data.year) === null || _data$year === void 0 ? void 0 : _data$year.ar_name} - ${(_data$year2 = data.year) === null || _data$year2 === void 0 ? void 0 : (_data$year2$specialit = _data$year2.speciality) === null || _data$year2$specialit === void 0 ? void 0 : _data$year2$specialit.ar_name}`\n                        }, data.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 533,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.date,\n                    label: translate(\"التاريخ\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.from,\n                    label: translate(\"من\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.to,\n                    label: translate(\"إلى\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    onChange: evnt => handleChange(index, evnt),\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    name: \"num_studs\",\n                    value: data.num_studs,\n                    label: translate(\"عدد الطلّاب\"),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 3,\n                  children: inputFields.length !== 1 ? /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    style: {\n                      width: \"10%\",\n                      color: \"white\",\n                      background: \"red\"\n                    },\n                    variant: \"outlined\",\n                    className: classes.closeBtn,\n                    onClick: removeInputFields,\n                    children: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 25\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(SuiButton, {\n              onClick: handleAddExam,\n              style: {\n                margin: \"2em 0\",\n                color: \"rgb(255, 255, 255)\",\n                background: \"rgb(23, 193, 232)\"\n              },\n              type: \"button\",\n              children: `إضافة واقعة امتحانية`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        md: 12,\n        style: {\n          margin: \"2em 0em\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            textAlign: \"center\"\n          },\n          variant: \"h5\",\n          component: \"div\",\n          children: `لاتوجد بيانات لعرضها`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    md: 12,\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        style: {\n          margin: \"-1em 0 1em 0\"\n        },\n        md: 12,\n        className: classes.typography,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: `إضافة واقعة امتحانية`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      md: 12,\n      style: {\n        margin: \"2em 0em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"\\u0627\\u0644\\u0628\\u0631\\u0646\\u0627\\u0645\\u062C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: program,\n            label: \"programs\",\n            onChange: e => changeProgram(e.target.value),\n            children: programs === null || programs === void 0 ? void 0 : programs.map(program => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: program.id,\n              children: program.name\n            }, program.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"\\u0627\\u0644\\u0633\\u0646\\u0629\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: eduYear,\n            label: \"specYears\",\n            onChange: e => changeEduYear(e.target.value),\n            children: eduYears.map(spYear => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: spYear.id,\n              children: spYear.year\n            }, spYear.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"\\u0627\\u0644\\u0645\\u0642\\u0631\\u0651\\u0631\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disabled: loadCourses,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: course,\n            label: \"courses\",\n            onChange: e => changeCourse(e.target.value),\n            children: courses.map(course => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: course.id,\n              children: course.ar_name\n            }, course.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0648\\u0627\\u0642\\u0639\\u0629\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disabled: loadExamsType,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: examType,\n            label: \"examTypes\",\n            onChange: e => changeExamType(e.target.value),\n            children: examsTypes.map(exam => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: exam.id,\n              children: exam.name\n            }, exam.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 7\n    }, this), renderPlans(plans)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 645,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExamsList, \"Z/RbvG1GKn2DcWXuVkB0bxbv/xs=\", true, function () {\n  return [useTranslation];\n});\n\n_c = ExamsList;\nExamsList.auth = true;\nExamsList.layout = Admin;\nexport default ExamsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExamsList\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/exams/exams-list.tsx"],"names":["React","useEffect","useState","Admin","GridContainer","Button","FormControl","Grid","InputLabel","MenuItem","Select","Typography","makeStyles","TextField","GridItem","PlanService","EduYearService","ExamService","useTranslation","styles","KeyboardDatePicker","TimePicker","MuiPickersUtilsProvider","DateFnsUtils","arSA","toast","Card","SuiButton","ExamsList","translate","useStyles","classes","programs","setPrograms","program","setProgram","courses","setCourses","course","setCourse","eduYears","setEduYears","eduYear","setEduYear","examsTypes","setExamsType","examType","setExamType","GetAll","then","GetYears","result","catch","err","console","error","changeProgram","val","changeEduYear","setLoadCourses","GetAllCourses","toString","resp","log","loadCourses","loadExamsType","setLoadExamsType","plans","setPlans","addInputField","inputFields","length","halls","setInputFields","hall","date","getFullDate","from","getFullTime","startTime","to","endTime","planId","num_studs","removeInputFields","index","rows","splice","handleChange","evnt","name","value","target","list","day","selectedDate","getDate","month","getMonth","year","getFullYear","slice","toLocaleTimeString","clear","setSelectedNewStds","setSelectedOldStds","setSelectedPlans","setSelectedPlanData","changeCourse","_course","find","e","id","evaluation_methods","changeExamType","GetAllPlans","edu_course_id","selectedPlanData","selectedPlans","selectedNewStds","selectedOldStds","setSelectedDate","Date","setStartTime","setEndTime","getDay","_halls","selected","setHalls","handleDateChange","_inptFilds","map","dd","handleStartTime","handleEndTime","startHour","getHours","startMinute","getMinutes","endHour","endMinute","selectPlan","valAsNum","parseInt","getExams","_arr","includes","findIndex","sel","sumOld","reduce","partialSum","a","old_students_num","sumNew","new_students_num","push","handleAddExam","payLoad","plan_ids","type","filter","plan_id","students_num","renderPlans","margin","width","paddingRight","paddingBottom","height","fontWeight","marginBottom","marginTop","ar_name","speciality","semester","p","display","submitBtn","data","color","background","closeBtn","justifyContent","textAlign","typography","spYear","exam","auth","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Admin from \"layouts/Admin.js\";\r\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\r\nimport { Add, ArrowBack, Backspace, ZoomIn } from \"@material-ui/icons\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n  makeStyles,\r\n  Input,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport GridItem from \"../../../../components/Grid/GridItem\";\r\nimport PlanService from \"../../../../Services/PlanService\";\r\nimport CourseService from \"../../../../Services/CourseService\";\r\nimport EduYearService from \"../../../../Services/EduYearService\";\r\nimport ExamService from \"../../../../Services/ExamService\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport styles from \"assets/jss/nextjs-material-dashboard/views/dashboardStyle.js\";\r\nimport { type } from \"../../../../components/Privilege/Privilege\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  TimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { arSA } from \"date-fns/locale\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./exams-list-style.css\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\n\r\ninterface IExamsListProps {}\r\nconst ExamsList: React.FC<IExamsListProps> = ({}) => {\r\n  const { translate } = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n\r\n  // Programs\r\n  const [programs, setPrograms] = useState([]);\r\n  const [program, setProgram] = useState(null);\r\n\r\n  // Courses\r\n  const [courses, setCourses] = useState([]);\r\n  const [course, setCourse] = useState(null);\r\n\r\n  // Edu Year\r\n  const [eduYears, setEduYears] = useState([]);\r\n  const [eduYear, setEduYear] = useState(null);\r\n\r\n  // Exam Type\r\n  const [examsTypes, setExamsType] = useState([]);\r\n  const [examType, setExamType] = useState(null);\r\n\r\n  useEffect(() => {\r\n    PlanService.GetAll()\r\n      .then((programs) => {\r\n        EduYearService.GetYears(\"\")\r\n          .then((eduYears) => {\r\n            setPrograms(programs.result);\r\n            setEduYears(eduYears.result);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error\", err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error\", err);\r\n      });\r\n  }, []);\r\n\r\n  const changeProgram = (val: number) => {\r\n    setProgram(val);\r\n  };\r\n\r\n  const changeEduYear = (val: number) => {\r\n    setEduYear(val);\r\n    setLoadCourses(true);\r\n    ExamService.GetAllCourses(program, val.toString())\r\n      .then((resp) => {\r\n        console.log(resp.result);\r\n        setCourses(resp.result);\r\n      })\r\n      .catch((error) => {});\r\n    setLoadCourses(false);\r\n  };\r\n\r\n  const [loadCourses, setLoadCourses] = useState(false);\r\n  const [loadExamsType, setLoadExamsType] = useState(false);\r\n\r\n  const [plans, setPlans] = useState([]);\r\n\r\n  // Get Exams\r\n  useEffect(() => {}, []);\r\n\r\n  const addInputField = () => {\r\n    if (inputFields.length >= halls.length)\r\n      toast.error(\"لايمكنك الإضافة! لايوجد سوى قاعتين\");\r\n    else\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n          hall: 0,\r\n          date: getFullDate(),\r\n          from: getFullTime(startTime),\r\n          to: getFullTime(endTime),\r\n          planId: 0,\r\n          num_studs: 0,\r\n        },\r\n      ]);\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    rows.splice(index, 1);\r\n    setInputFields(rows);\r\n  };\r\n  const handleChange = (index, evnt) => {\r\n    const { name, value } = evnt.target;\r\n    const list = [...inputFields];\r\n    list[index][name] = value;\r\n    setInputFields(list);\r\n    console.log(list);\r\n  };\r\n  //\r\n  const getFullDate = () => {\r\n    let day = selectedDate?.getDate();\r\n    let month = selectedDate?.getMonth() + 1;\r\n    let year = selectedDate?.getFullYear();\r\n    // This arrangement can be altered based on how we want the date's format to appear.\r\n    return `${(\"0\" + day).slice(-2)}-${(\"0\" + month).slice(-2)}-${year}`;\r\n  };\r\n  //\r\n  const getFullTime = (date) => {\r\n    return date.toLocaleTimeString();\r\n  };\r\n  // ------------------------\r\n  const clear = () => {\r\n    setSelectedNewStds(0);\r\n    setSelectedOldStds(0);\r\n    setSelectedPlans([]);\r\n    setPlans([]);\r\n    setSelectedPlanData([]);\r\n    setInputFields([\r\n      {\r\n        hall: 0,\r\n        date: getFullDate(),\r\n        from: getFullTime(startTime),\r\n        to: getFullTime(endTime),\r\n        num_studs: 0,\r\n      },\r\n    ]);\r\n  };\r\n  const changeCourse = (val: number) => {\r\n    clear();\r\n    setCourse(val);\r\n    setLoadExamsType(true);\r\n    let _course = courses.find((e) => e.id === val);\r\n    setExamsType(_course.evaluation_methods);\r\n    setLoadExamsType(false);\r\n  };\r\n  const changeExamType = (val: number) => {\r\n    clear();\r\n    let _course = courses.find((e) => e.id == course);\r\n    setExamType(val);\r\n    ExamService.GetAllPlans(\r\n      program,\r\n      eduYear,\r\n      _course.edu_course_id,\r\n      val.toString()\r\n    )\r\n      .then((resp) => setPlans(resp.result))\r\n      .catch((error) => {});\r\n  };\r\n  // Halls\r\n  // const [halls, setHalls] = useState([]);\r\n  // handle add coursse to program\r\n\r\n  const [selectedPlanData, setSelectedPlanData] = useState([]);\r\n  const [selectedPlans, setSelectedPlans] = useState<number[]>([]);\r\n  const [selectedNewStds, setSelectedNewStds] = useState(0);\r\n  const [selectedOldStds, setSelectedOldStds] = useState(0);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [startTime, setStartTime] = useState(new Date());\r\n  const [endTime, setEndTime] = useState(new Date());\r\n  console.log(\"selectedDate\", selectedDate.getDay());\r\n  // Dynamic Halls\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      hall: 0,\r\n      date: getFullDate(),\r\n      from: getFullTime(startTime),\r\n      to: getFullTime(endTime),\r\n      planId: 0,\r\n      num_studs: 0,\r\n    },\r\n  ]);\r\n  console.log(inputFields);\r\n  const _halls = [\r\n    {\r\n      id: 1,\r\n      name: \"ق1\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"ق2\",\r\n      selected: false,\r\n    },\r\n  ];\r\n  const [halls, setHalls] = useState(_halls);\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e);\r\n    let _inptFilds = inputFields.slice().map((dd) => {\r\n      return {\r\n        hall: dd.hall,\r\n        date: getFullDate(e),\r\n        from: getFullTime(startTime),\r\n        to: getFullTime(endTime),\r\n        planId: dd.planId,\r\n        num_studs: dd.num_studs,\r\n      };\r\n    });\r\n    console.clear();\r\n    console.log(_inptFilds);\r\n    setInputFields(_inptFilds);\r\n  };\r\n  const handleStartTime = (e) => {\r\n    setStartTime(e);\r\n  };\r\n  const handleEndTime = (e) => {\r\n    setEndTime(e);\r\n    const startHour = startTime.getHours();\r\n    const startMinute = startTime.getMinutes();\r\n    const endHour = e.getHours();\r\n    const endMinute = e.getMinutes();\r\n    if (e < startTime) toast.error(\"وقت الانتهاء يجب أن يكون بعد وقت البدء\");\r\n  };\r\n\r\n  // Select Plan\r\n  const selectPlan = (id) => {\r\n    let valAsNum = parseInt(id);\r\n    ExamService.getExams(id)\r\n      .then((resp) => {\r\n        console.clear();\r\n        console.log(resp);\r\n      })\r\n      .catch((error) => {});\r\n    let _arr = selectedPlans.slice();\r\n    if (_arr.includes(valAsNum)) {\r\n      let index = _arr.findIndex((e) => e == valAsNum);\r\n      _arr.splice(index, 1);\r\n      setSelectedPlans(_arr);\r\n      let sel =\r\n        _arr.length > 0\r\n          ? plans.map((e) => {\r\n              if (_arr.includes(parseInt(e.id))) return e;\r\n            })\r\n          : [];\r\n      setSelectedPlanData(sel);\r\n      if (sel.length > 0) {\r\n        const sumOld = sel.reduce(\r\n          (partialSum, a) => partialSum + a.old_students_num,\r\n          0\r\n        );\r\n        const sumNew = sel.reduce(\r\n          (partialSum, a) => partialSum + a.new_students_num,\r\n          0\r\n        );\r\n        setSelectedNewStds(sumNew);\r\n        setSelectedOldStds(sumOld);\r\n      } else {\r\n        setSelectedNewStds(0);\r\n        setSelectedOldStds(0);\r\n      }\r\n    } else {\r\n      _arr.push(valAsNum);\r\n      setSelectedPlans(_arr);\r\n      let sel =\r\n        _arr.length > 0\r\n          ? plans.map((e) => {\r\n              if (_arr.includes(parseInt(e.id))) return e;\r\n            })\r\n          : [];\r\n      setSelectedPlanData(sel);\r\n      const sumOld = sel.reduce(\r\n        (partialSum, a) => partialSum + a.old_students_num,\r\n        0\r\n      );\r\n      const sumNew = sel.reduce(\r\n        (partialSum, a) => partialSum + a.new_students_num,\r\n        0\r\n      );\r\n      setSelectedNewStds(sumNew);\r\n      setSelectedOldStds(sumOld);\r\n    }\r\n  };\r\n\r\n  const handleAddExam = () => {\r\n    const payLoad = {\r\n      plan_ids: [...selectedPlans],\r\n      type: `${examsTypes.filter((e) => e.id == examType)[0].name}`,\r\n      date: getFullDate(),\r\n      from: getFullTime(startTime),\r\n      to: getFullTime(endTime),\r\n      halls: inputFields.map((dd) => {\r\n        return {\r\n          id: dd.hall,\r\n          plan_id: dd.planId,\r\n          students_num: parseInt(`${dd.num_studs}`),\r\n        };\r\n      }),\r\n    };\r\n    console.log(payLoad);\r\n    // PlanService.AddCourse(payLoad)\r\n    //   .then((result) => {\r\n    //     if (result.success) {\r\n    //       toast.success(translate(\"Course Added To Plan Successfully\"));\r\n    //       PlanService.GetProgramCourses(program, specYear, year)\r\n    //         .then((resp) => {\r\n    //           if (resp.success) {\r\n    //             setProgramCourses(resp.result);\r\n    //           }\r\n    //         })\r\n    //         .catch((err) => {});\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     toast.error(error.message);\r\n    //   });\r\n  };\r\n  const renderPlans = (plans) => {\r\n    if (plans.length > 0) {\r\n      return (\r\n        <MuiPickersUtilsProvider locale={arSA} utils={DateFnsUtils}>\r\n          <Card\r\n            style={{\r\n              margin: \"5px 0px\",\r\n              width: \"100%\",\r\n              paddingRight: \"1em\",\r\n              paddingBottom: \"1em\",\r\n            }}\r\n          >\r\n            <Grid container md={12} style={{ height: \"7em\" }}>\r\n              <GridItem md={2}>\r\n                <h5 style={{ fontWeight: \"bold\" }}>السنة</h5>\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <h5 style={{ fontWeight: \"bold\" }}>الاختصاص</h5>\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <h5 style={{ fontWeight: \"bold\" }}>الفصل</h5>\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <h5 style={{ fontWeight: \"bold\", marginBottom: \"0\" }}>\r\n                  عدد الطلاب{\" \"}\r\n                </h5>\r\n                <h5 style={{ fontWeight: \"bold\", marginTop: \"0\" }}>\r\n                  مستجد | معيد{\" \"}\r\n                </h5>\r\n              </GridItem>\r\n            </Grid>\r\n            <Grid container md={12} style={{ margin: \"2em 0em\" }}>\r\n              {plans.map((e) => (\r\n                <>\r\n                  <GridItem md={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled\r\n                      value={e.year?.ar_name}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem md={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled\r\n                      value={e.year?.speciality?.ar_name}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem md={2}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      disabled\r\n                      value={e.semester}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem md={1}>\r\n                    {e.new_students_num} | {e.old_students_num}\r\n                  </GridItem>\r\n                  <GridItem md={1}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedPlans.includes(e.id)}\r\n                      value={e.id}\r\n                      onChange={(p) => selectPlan(p.target.value)}\r\n                    />\r\n                  </GridItem>\r\n                </>\r\n              ))}\r\n            </Grid>\r\n            <Grid container md={12}>\r\n              <GridItem md={1}>التاريخ</GridItem>\r\n              <GridItem md={3}>\r\n                <KeyboardDatePicker\r\n                  clearable\r\n                  value={selectedDate}\r\n                  onChange={(date) => handleDateChange(date)}\r\n                  minDate={new Date()}\r\n                  format=\"MM/dd/yyyy\"\r\n                  // inputVariant=\"outlined\"\r\n                />\r\n              </GridItem>\r\n            </Grid>\r\n            <Grid container md={12} style={{ marginTop: \"3em\" }}>\r\n              <GridItem style={{ display: \"flex\", marginTop: \"1em\" }} md={1}>\r\n                <span> الوقت</span>\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <TimePicker\r\n                  clearable\r\n                  label=\"من\"\r\n                  value={startTime}\r\n                  onChange={handleStartTime}\r\n                />\r\n              </GridItem>\r\n              <GridItem md={2}>\r\n                <TimePicker\r\n                  showTodayButton\r\n                  todayLabel=\"now\"\r\n                  label=\"إلى\"\r\n                  value={endTime}\r\n                  minutesStep={5}\r\n                  onChange={handleEndTime}\r\n                />\r\n              </GridItem>\r\n              <GridItem md={1}></GridItem>\r\n              <Grid container md={4}>\r\n                <Grid item md={5}>\r\n                  <p style={{ margin: \"0\" }}>المجموع الكلي</p>\r\n                  <p style={{ margin: \"0\" }}>مستجد</p>\r\n                  <p style={{ margin: \"0\" }}>معيد</p>\r\n                </Grid>\r\n                <Grid item md={3}>\r\n                  <p style={{ margin: \"0\" }}>{`${\r\n                    selectedNewStds + selectedOldStds\r\n                  }`}</p>\r\n                  <p style={{ margin: \"0\" }}>{selectedNewStds}</p>\r\n                  <p style={{ margin: \"0\" }}>{selectedOldStds}</p>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n          <Grid container md={12} style={{ marginTop: \"1em\" }}>\r\n            <Card\r\n              style={{\r\n                margin: \"5px 0px\",\r\n                width: \"100%\",\r\n                paddingRight: \"1em\",\r\n                paddingBottom: \"1em\",\r\n              }}\r\n            >\r\n              <Grid container>\r\n                <Button\r\n                  style={{ margin: \"10px 5px\" }}\r\n                  variant=\"contained\"\r\n                  className={classes.submitBtn}\r\n                  onClick={addInputField}\r\n                >\r\n                  تخصيص قاعة\r\n                </Button>\r\n              </Grid>\r\n              {inputFields.map((data, index) => {\r\n                console.log(data);\r\n                console.log(selectedPlanData);\r\n                return (\r\n                  <Grid container md={12} style={{ marginTop: \"1em\" }}>\r\n                    <GridItem md={2}>\r\n                      <FormControl\r\n                        fullWidth\r\n                        variant=\"filled\"\r\n                        size=\"small\"\r\n                        size=\"small\"\r\n                      >\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          القاعة\r\n                        </InputLabel>\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={data.hall}\r\n                          label=\"halls\"\r\n                          name=\"hall\"\r\n                          onChange={(evnt) => handleChange(index, evnt)}\r\n                        >\r\n                          {halls.map(\r\n                            (hall) =>\r\n                              !hall.selected && (\r\n                                <MenuItem key={hall.id} value={hall.id}>\r\n                                  {hall.name}\r\n                                </MenuItem>\r\n                              )\r\n                          )}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <FormControl\r\n                        fullWidth\r\n                        variant=\"filled\"\r\n                        size=\"small\"\r\n                        size=\"small\"\r\n                      >\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          السنة والاختصاص\r\n                        </InputLabel>\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={data.planId}\r\n                          label=\"halls\"\r\n                          name=\"planId\"\r\n                          onChange={(evnt) => handleChange(index, evnt)}\r\n                        >\r\n                          {selectedPlanData.map((data) => (\r\n                            <MenuItem key={data.id} value={data.id}>\r\n                              {`${data.year?.ar_name} - ${data.year?.speciality?.ar_name}`}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <TextField\r\n                        disabled={true}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        value={data.date}\r\n                        label={translate(\"التاريخ\")}\r\n                        fullWidth\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <TextField\r\n                        disabled={true}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        value={data.from}\r\n                        label={translate(\"من\")}\r\n                        fullWidth\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <TextField\r\n                        disabled={true}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        value={data.to}\r\n                        label={translate(\"إلى\")}\r\n                        fullWidth\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem md={2}>\r\n                      <TextField\r\n                        onChange={(evnt) => handleChange(index, evnt)}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        name=\"num_studs\"\r\n                        value={data.num_studs}\r\n                        label={translate(\"عدد الطلّاب\")}\r\n                        fullWidth\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem md={3}>\r\n                      {inputFields.length !== 1 ? (\r\n                        <Button\r\n                          type=\"button\"\r\n                          style={{\r\n                            width: \"10%\",\r\n                            color: \"white\",\r\n                            background: \"red\",\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          className={classes.closeBtn}\r\n                          onClick={removeInputFields}\r\n                        >\r\n                          x\r\n                        </Button>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </GridItem>\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <SuiButton\r\n                onClick={handleAddExam}\r\n                style={{\r\n                  margin: \"2em 0\",\r\n                  color: \"rgb(255, 255, 255)\",\r\n                  background: \"rgb(23, 193, 232)\",\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                {`إضافة واقعة امتحانية`}\r\n              </SuiButton>\r\n            </Card>\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n      );\r\n    } else {\r\n      return (\r\n        <Grid\r\n          container\r\n          md={12}\r\n          style={{\r\n            margin: \"2em 0em\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{ textAlign: \"center\" }}\r\n            variant=\"h5\"\r\n            component=\"div\"\r\n          >\r\n            {`لاتوجد بيانات لعرضها`}\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <GridContainer md={12}>\r\n      <GridContainer md={12}>\r\n        <GridItem\r\n          style={{ margin: \"-1em 0 1em 0\" }}\r\n          md={12}\r\n          className={classes.typography}\r\n        >\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {`إضافة واقعة امتحانية`}\r\n          </Typography>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <Grid container md={12} style={{ margin: \"2em 0em\" }}>\r\n        <GridItem md={2}>\r\n          <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n            <InputLabel id=\"demo-simple-select-label\">البرنامج</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={program}\r\n              label=\"programs\"\r\n              onChange={(e) => changeProgram(e.target.value)}\r\n            >\r\n              {programs?.map((program) => (\r\n                <MenuItem key={program.id} value={program.id}>\r\n                  {program.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </GridItem>\r\n        <GridItem md={2}>\r\n          <FormControl fullWidth variant=\"filled\" size=\"small\">\r\n            <InputLabel id=\"demo-simple-select-label\">السنة</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={eduYear}\r\n              label=\"specYears\"\r\n              onChange={(e) => changeEduYear(e.target.value)}\r\n            >\r\n              {eduYears.map((spYear) => (\r\n                <MenuItem key={spYear.id} value={spYear.id}>\r\n                  {spYear.year}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </GridItem>\r\n        <GridItem md={2}>\r\n          <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n            <InputLabel id=\"demo-simple-select-label\">المقرّر</InputLabel>\r\n            <Select\r\n              disabled={loadCourses}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={course}\r\n              label=\"courses\"\r\n              onChange={(e) => changeCourse(e.target.value)}\r\n            >\r\n              {courses.map((course) => (\r\n                <MenuItem key={course.id} value={course.id}>\r\n                  {course.ar_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </GridItem>\r\n        <GridItem md={2}>\r\n          <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n            <InputLabel id=\"demo-simple-select-label\">نوع الواقعة</InputLabel>\r\n            <Select\r\n              disabled={loadExamsType}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={examType}\r\n              label=\"examTypes\"\r\n              onChange={(e) => changeExamType(e.target.value)}\r\n            >\r\n              {examsTypes.map((exam) => (\r\n                <MenuItem key={exam.id} value={exam.id}>\r\n                  {exam.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </GridItem>\r\n      </Grid>\r\n      {renderPlans(plans)}\r\n    </GridContainer>\r\n  );\r\n};\r\n\r\n(ExamsList as any).auth = true;\r\n(ExamsList as any).layout = Admin;\r\nexport default ExamsList;\r\n"]},"metadata":{},"sourceType":"module"}