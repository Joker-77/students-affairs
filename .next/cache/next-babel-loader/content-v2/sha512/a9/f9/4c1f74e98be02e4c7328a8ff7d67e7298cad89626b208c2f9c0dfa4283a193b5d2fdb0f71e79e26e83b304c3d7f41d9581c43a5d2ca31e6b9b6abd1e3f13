{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Paper, Button } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\n\nvar MTable = function MTable(_ref) {\n  var metaData = _ref.metaData,\n      metDataCount = _ref.metDataCount,\n      data = _ref.data,\n      dataEachPropsCount = _ref.dataEachPropsCount,\n      hasActions = _ref.hasActions,\n      actions = _ref.actions;\n\n  var _React$useState = React.useState(data),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(metaData),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      _metaData = _React$useState4[0],\n      setMetaData = _React$useState4[1];\n\n  var _React$useState5 = React.useState(dataEachPropsCount),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      _dataEachPropsCount = _React$useState6[0],\n      setDataEachPropsCount = _React$useState6[1];\n\n  var calcWidth = 100 / _dataEachPropsCount;\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      page = _React$useState8[0],\n      setPage = _React$useState8[1];\n\n  var _React$useState9 = React.useState(10),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      rowsPerPage = _React$useState10[0],\n      setRowsPerPage = _React$useState10[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(function () {\n    console.log(data);\n    setData(data);\n    setMetaData(metaData);\n    setDataEachPropsCount(dataEachPropsCount);\n  }, [data]);\n\n  var dataRow = function dataRow(row) {\n    return /*#__PURE__*/_jsxs(TableRow, {\n      children: [Object.entries(row).map(function (_ref2, index) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            rowId = _ref3[0],\n            rowData = _ref3[1];\n\n        return /*#__PURE__*/_jsx(TableCell, {\n          align: \"center\",\n          style: {\n            width: \"\".concat(calcWidth, \"%\")\n          },\n          children: rowData\n        }, index);\n      }), /*#__PURE__*/_jsx(TableCell, {\n        align: \"center\",\n        style: {\n          width: \"\".concat(calcWidth, \"%\")\n        },\n        children: hasActions && actions != null && actions.length > 0 && actions.map(function (action, index) {\n          return /*#__PURE__*/_jsx(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsx(Edit, {}),\n            onClick: action.onClick(row),\n            children: \"Edit\"\n          });\n        })\n      }, actions != null && actions.length > 0 ? actions.length.toString() : \"0\")]\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxs(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsx(TableHead, {\n          children: /*#__PURE__*/_jsx(TableRow, {\n            children: _metaData.map(function (item, index) {\n              return /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: item\n              });\n            })\n          })\n        }), /*#__PURE__*/_jsx(TableBody, {\n          children: _data != null && _data.length > 0 && _data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {\n            return dataRow(row);\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: _data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    })]\n  });\n};\n\nexport default MTable;","map":null,"metadata":{},"sourceType":"module"}