{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Admin from \"../../../layouts/Admin\";\nimport styles from \"../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../Utility/Placeholders\";\nimport PersonService from \"../../../Services/PersonService\";\nimport AddPersonModal from \"../../../components/Modals/AddPersonModal\";\nimport * as Yup from \"yup\";\nimport AddPhoneModal from \"../../../components/Modals/AddPhoneModal\";\n\nconst PeopleList = ({}) => {\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [selectedPerson, setSelectedPerson] = React.useState(0);\n  const [initAddPerson, setInitAddPerson] = React.useState({\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    gender: \"male\",\n    nationalId: \"\",\n    nationality: \"\",\n    passportFirstName: \"\",\n    passportLastName: \"\",\n    passportNumber: \"\"\n  });\n  const AddPersonScheme = Yup.object().shape({\n    firstName: Yup.string().required(\"First name is required\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n    gender: Yup.string().required(\"Gender is required\"),\n    passportFirstName: Yup.string().required(\"Passport First Name is required\"),\n    passportLastName: Yup.string().required(\"Passport Last Name is required\"),\n    nationality: Yup.string().required(\"Nationality is required\"),\n    nationalId: Yup.string().required(\"NationalId is required\"),\n    passportNumber: Yup.string().required(\"Passport Number is required\")\n  });\n  const UpdatePersonScheme = Yup.object().shape({\n    firstName: Yup.string().required(\"First name is required\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n    gender: Yup.string().required(\"Gender is required\"),\n    passportFirstName: Yup.string().required(\"Passport First Name is required\"),\n    passportLastName: Yup.string().required(\"Passport Last Name is required\"),\n    nationality: Yup.string().required(\"Nationality is required\"),\n    nationalId: Yup.string().required(\"NationalId is required\"),\n    passportNumber: Yup.string().required(\"Passport Number is required\")\n  });\n\n  const submitAddPerson = async (values, setSubmitting) => {\n    console.log(\"values\", values);\n    setSubmitting(false);\n  };\n  /************************** Phone ****************************/\n\n\n  const [openPhone, setOpenPhone] = React.useState(false);\n\n  const handleOpenPhone = () => {\n    setOpenPhone(true);\n  };\n\n  const handleClosePhone = () => {\n    setOpenPhone(false);\n  };\n\n  const [initAddPhone, setInitAddPhone] = React.useState({\n    id: 0,\n    name: \"\",\n    type: \"\"\n  });\n  const AddPhoneScheme = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    type: Yup.string().required(\"Type is required\")\n  });\n\n  const submitAddPhone = async (values, setSubmitting) => {\n    console.log(\"values\", values);\n    setSubmitting(false);\n  };\n  /************************** Phone Update ****************************/\n\n\n  const [openPhoneUpdate, setOpenPhoneUpdate] = React.useState(false);\n\n  const handleOpenPhoneUpdate = () => {\n    setOpenPhoneUpdate(true);\n  };\n\n  const handleClosePhoneUpdate = () => {\n    setOpenPhoneUpdate(false);\n  };\n\n  const [initUpdatePhone, setInitUpdatePhone] = React.useState({\n    id: 0,\n    name: \"\",\n    type: \"\"\n  });\n  const UpdatePhoneScheme = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    type: Yup.string().required(\"Type is required\")\n  });\n\n  const submitUpdatePhone = async (values, setSubmitting) => {\n    console.log(\"values\", values);\n    setSubmitting(false);\n  };\n  /************************** Data ****************************/\n\n\n  useEffect(() => {\n    PersonService.GetAll().then(res => {\n      console.log(\"people\", res);\n      setPeople(res.result);\n    }).catch(error => {\n      console.error(\"roles\", error);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  /************************** Handle edit data ****************************/\n\n  const [openUpdatePerson, setOpenUpdatePerson] = React.useState(false);\n\n  const handleOpenUpdatePerson = data => {\n    console.log(\"data\", data);\n    setInitUpdatePerson({\n      id: data.id,\n      firstName: data.firstName,\n      gender: data.gender,\n      lastName: data.lastName,\n      nationalId: data.nationalId,\n      nationality: data.nationality,\n      passportFirstName: data.passportFirstName,\n      passportLastName: data.passportLastName,\n      passportNumber: data.passportNumber\n    });\n    setOpenUpdatePerson(true);\n  };\n\n  const handleCloseUpdatePerson = () => {\n    setDisabled(false);\n    setOpenUpdatePerson(false);\n  };\n\n  const [initUpdatePerson, setInitUpdatePerson] = React.useState({\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    gender: \"male\",\n    nationalId: \"\",\n    nationality: \"\",\n    passportFirstName: \"\",\n    passportLastName: \"\",\n    passportNumber: \"\"\n  });\n\n  const submitUpdatePerson = async (values, setSubmitting) => {\n    console.log(\"values\", values);\n    setSubmitting(false);\n  };\n  /************************** Finish Handle edit data ****************************/\n\n\n  const [disabled, setDisabled] = React.useState(false);\n\n  const handleDetails = data => {\n    setDisabled(true);\n    setOpenUpdatePerson(true);\n  };\n\n  const handleEdit = data => {\n    throw new Error(\"Function not implemented.\");\n  };\n\n  const handleAddPhone = id => {\n    throw new Error(\"Function not implemented.\");\n  };\n\n  const [people, setPeople] = React.useState(null);\n\n  const renderPeople = () => {\n    if (people != null && people.length > 0) {\n      let columns = [{\n        title: \"Id\",\n        field: \"id\",\n        hidden: true\n      }, {\n        title: \"First Name\",\n        field: \"firstName\"\n      }, {\n        title: \"Last Name\",\n        field: \"lastName\"\n      }, {\n        title: \"Gender\",\n        field: \"gender\"\n      }, {\n        title: \"Nationality\",\n        field: \"nationality\"\n      }, {\n        title: \"National Id\",\n        field: \"nationalId\"\n      }, {\n        title: \"Passport First Name\",\n        field: \"passportFirstName\",\n        hidden: true\n      }, {\n        title: \"Passport Last Name\",\n        field: \"passportLastName\",\n        hidden: true\n      }, {\n        title: \"Passport Number\",\n        field: \"passportNumber\",\n        hidden: true\n      }];\n      let data = people;\n      let options = {\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        maxBodyHeight: \"500px\"\n      };\n      return /*#__PURE__*/_jsx(ActionTable, {\n        Title: \"People List\",\n        Columns: columns,\n        Data: data,\n        Options: options,\n        Actions: [{\n          tooltip: \"Person Details\",\n          icon: \"details\",\n          onClick: (evt, data) => handleDetails(data.id)\n        }, {\n          tooltip: \"Edit Person\",\n          icon: \"edit\",\n          onClick: (evt, data) => handleOpenUpdatePerson(data)\n        }, {\n          tooltip: \"Add Phone\",\n          icon: \"add_phone\",\n          onClick: (evt, data) => handleOpenPhone()\n        }, {\n          tooltip: \"Phone Details\",\n          icon: \"phone\",\n          onClick: (evt, data) => handleAddPhone(data.id)\n        }, {\n          tooltip: \"Delete Phone\",\n          icon: \"phone_disabled\",\n          onClick: (evt, data) => handleAddPhone(data.id)\n        }]\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  };\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    children: [/*#__PURE__*/_jsxs(GridItem, {\n      md: 12,\n      children: [/*#__PURE__*/_jsx(Button, {\n        disabled: false,\n        variant: \"contained\",\n        className: classes.submitBtn,\n        onClick: handleOpen,\n        children: \"Add New Person\"\n      }), renderPeople()]\n    }), /*#__PURE__*/_jsx(AddPersonModal, {\n      disabled: disabled,\n      title: \"Add Person\",\n      open: open,\n      formScheme: AddPersonScheme,\n      handleClose: handleClose,\n      initValues: initAddPerson,\n      submitForm: submitAddPerson\n    }, \"addPerson\"), /*#__PURE__*/_jsx(AddPersonModal, {\n      disabled: disabled,\n      title: \"Update Person\",\n      open: openUpdatePerson,\n      formScheme: UpdatePersonScheme,\n      handleClose: handleCloseUpdatePerson,\n      initValues: initUpdatePerson,\n      submitForm: submitUpdatePerson\n    }, \"updatePerson\"), /*#__PURE__*/_jsx(AddPhoneModal, {\n      title: \"Add Phone\",\n      open: openPhone,\n      formScheme: AddPhoneScheme,\n      handleClose: handleClosePhone,\n      initValues: initAddPhone,\n      submitForm: submitAddPhone\n    }, \"addPhone\"), /*#__PURE__*/_jsx(AddPhoneModal, {\n      title: \"Edit Phone\",\n      open: openPhoneUpdate,\n      formScheme: UpdatePhoneScheme,\n      handleClose: handleClosePhoneUpdate,\n      initValues: initUpdatePhone,\n      submitForm: submitUpdatePhone\n    }, \"editPhone\")]\n  });\n};\n\nPeopleList.auth = true;\nPeopleList.layout = Admin;\nexport default PeopleList;","map":null,"metadata":{},"sourceType":"module"}