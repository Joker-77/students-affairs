{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\authentication\\\\sign-in\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\"; // Authentication layout components\n\nimport CoverLayout from \"../../../components/CoverLayout\";\nimport { Box, Typography, TextField, Select, MenuItem } from \"@material-ui/core\";\nimport { Switch } from \"@material-ui/core\";\nimport SuiButton from \"../../../components/SuiButton\";\nimport \"../../../assets/css/main.css\";\nimport { selectSessionKey, useAppDispatch, useAppSelector, setSessionKey, updateProfile, selectUserProfile } from \"../../../redux\";\nimport LoginService from \"../../../Services/LoginService\";\nimport { useTranslation } from \"../../../Utility/Translations/useTranslation\";\nimport { toast } from \"react-toastify\"; // Images\n\nconst bg7 = require(\"./../../../assets/img/curved-images/HIAST.jpg\");\n\nfunction SignIn(props) {\n  _s();\n\n  const {\n    translate\n  } = useTranslation();\n  const {\n    locale\n  } = useRouter();\n  const dispatch = useAppDispatch();\n  const {\n    0: rememberMe,\n    1: setRememberMe\n  } = useState(true);\n  const {\n    0: _currentSessionKey,\n    1: setCurrentSessionKey\n  } = useState(\"\");\n  const sessionKey = useAppSelector(selectSessionKey);\n  const userProfile = useAppSelector(selectUserProfile);\n  useEffect(() => {\n    if (true) {\n      // Perform localStorage action\n      let profile = JSON.parse(localStorage.getItem(\"logged_in_profile\"));\n      let key = localStorage.getItem(\"sa_access_token\");\n\n      if (!!key && key !== \"undefined\") {\n        // dispatch(setSessionKey(key));\n        console.log(\"key\", key);\n        router.push(\"/students_affairs/dashboard\");\n      }\n    }\n  }, []);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: years,\n    1: setYears\n  } = useState([]);\n  const {\n    0: selectedYear,\n    1: setSelectedYear\n  } = useState(\"\");\n  const initialValues = {\n    username: \"\",\n    // email: \"\",\n    password: \"\",\n    rememberMe: false\n  };\n\n  const handleSetRememberMe = () => setRememberMe(!rememberMe);\n\n  const router = useRouter();\n\n  async function fetchApi() {\n    let data = await LoginService.GetYears();\n    console.log(\"years\", data);\n    return data;\n  }\n\n  const handleChangeYear = event => {\n    setSelectedYear(event.target.value);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n  const SignInSchema = Yup.object().shape({\n    username: Yup.string().required(translate(\"{0} is required\", \"Username\")),\n    // .required(\"Email is required\"),\n    // email: Yup.string()\n    //   .email(\"Must be a valid email\")\n    //   .required(\"Email is required\"),\n    password: Yup.string().required(translate(\"{0} is required\", \"Password\")).min(4, translate(\"Password is too short - should be {0} chars minimum\", \"4\", false))\n  });\n\n  const submitForm = async (values, setSubmitting) => {\n    LoginService.Login({\n      email: values.username,\n      password: values.password\n    }).then(response => {\n      if (response.success) {\n        localStorage.setItem(\"sa_access_token\", response.result.token);\n        localStorage.setItem(\"logged_in_profile\", JSON.stringify(response.result));\n        dispatch(updateProfile(response.result));\n        dispatch(setSessionKey(response.result.token));\n        router.push(\"/students_affairs/dashboard\");\n      } else {\n        toast.error(response);\n        setSubmitting(false);\n      }\n    }).catch(e => {\n      console.error(e);\n    }); // const resp = await signIn(\"credentials\", {\n    //   email: values.username,\n    //   password: values.password,\n    //   redirect: false,\n    // });\n    // console.log(resp);\n    // if (resp.ok) {\n    //   router.push(\"/student_affairs/dashboard\");\n    // } else {\n    // }\n  };\n\n  return !sessionKey && /*#__PURE__*/_jsxDEV(CoverLayout, {\n    title: translate(\"Welcome\"),\n    description: translate(\"Enter your credentials to sign in\"),\n    image: bg7,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: SignInSchema,\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          submitForm(values, setSubmitting);\n        },\n        children: formik => {\n          const {\n            values,\n            handleChange,\n            handleSubmit,\n            errors,\n            touched,\n            handleBlur,\n            isSubmitting,\n            isValid,\n            dirty\n          } = formik;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [!isLoading && /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-label\",\n                id: \"demo-simple-select\",\n                value: selectedYear,\n                label: \"Year\",\n                onChange: handleChangeYear,\n                children: years.map((item, ind) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item.id,\n                    children: item.year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: translate(\"Username\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: handleChange,\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"text\",\n                id: \"username\",\n                name: \"username\",\n                value: values.username,\n                onBlur: handleBlur,\n                error: Boolean(touched.username && errors.username),\n                helperText: touched.username && errors.username,\n                placeholder: translate(\"Username\"),\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: translate(\"Password\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"password\",\n                name: \"password\",\n                type: \"password\",\n                variant: \"outlined\",\n                size: \"small\",\n                placeholder: translate(\"Password\"),\n                onChange: handleChange,\n                onBlur: handleBlur,\n                error: Boolean(errors.password && touched.password),\n                helperText: touched.password && errors.password,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"button\",\n                style: {\n                  fontWeight: \"regular\",\n                  cursor: \"pointer\",\n                  userSelect: \"none\"\n                } // onClick={handleSetRememberMe}\n                // sx={{ cursor: \"pointer\", userSelect: \"none\" }}\n                ,\n                children: [\"\\xA0\\xA0\", translate(\"Remember me\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              mb: 1,\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(SuiButton, {\n                disabled: true,\n                variant: \"gradient\",\n                color: \"info\",\n                fullWidth: true,\n                children: translate(\"Signing in...\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                disabled: !(dirty && isValid),\n                type: \"submit\",\n                variant: \"gradient\",\n                color: \"info\",\n                fullWidth: true,\n                children: translate(\"Sign in\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SignIn, \"B0ZpgL7v0i9+dOM61/PNq9LOXoc=\", false, function () {\n  return [useTranslation, useRouter, useAppDispatch, useAppSelector, useAppSelector, useRouter];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/authentication/sign-in/index.tsx"],"names":["React","useEffect","useState","Formik","Form","Yup","useRouter","CoverLayout","Box","Typography","TextField","Select","MenuItem","Switch","SuiButton","selectSessionKey","useAppDispatch","useAppSelector","setSessionKey","updateProfile","selectUserProfile","LoginService","useTranslation","toast","bg7","require","SignIn","props","translate","locale","dispatch","rememberMe","setRememberMe","_currentSessionKey","setCurrentSessionKey","sessionKey","userProfile","profile","JSON","parse","localStorage","getItem","key","console","log","router","push","isLoading","setLoading","years","setYears","selectedYear","setSelectedYear","initialValues","username","password","handleSetRememberMe","fetchApi","data","GetYears","handleChangeYear","event","target","value","SignInSchema","object","shape","string","required","min","submitForm","values","setSubmitting","Login","email","then","response","success","setItem","result","token","stringify","error","catch","e","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","map","item","ind","id","year","Boolean","fontWeight","cursor","userSelect"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useRouter } from \"next/router\";\r\n// Authentication layout components\r\nimport CoverLayout from \"../../../components/CoverLayout\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport SuiButton from \"../../../components/SuiButton\";\r\nimport SuiInput from \"../../../components/SuiInput\";\r\nimport \"../../../assets/css/main.css\";\r\nimport { ISignInForm } from \"../../../Models/SignInForm\";\r\nimport { getProviders, getSession, signIn, useSession } from \"next-auth/react\";\r\nimport {\r\n  selectSessionKey,\r\n  useAppDispatch,\r\n  useAppSelector,\r\n  setSessionKey,\r\n  updateProfile,\r\n  selectUserProfile,\r\n} from \"../../../redux\";\r\nimport LoginService from \"../../../Services/LoginService\";\r\nimport { ApiResponse } from \"../../../Models/ApiResponse/ApiResponse\";\r\nimport { YearsModel } from \"../../../Models/ApiResponse/YearsModel\";\r\nimport { useTranslation } from \"../../../Utility/Translations/useTranslation\";\r\nimport { toast } from \"react-toastify\";\r\n// Images\r\nconst bg7 = require(\"./../../../assets/img/curved-images/HIAST.jpg\");\r\n\r\nfunction SignIn(props) {\r\n  const { translate } = useTranslation();\r\n  const { locale } = useRouter();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [rememberMe, setRememberMe] = useState(true);\r\n  const [_currentSessionKey, setCurrentSessionKey] = useState<string>(\"\");\r\n\r\n  const sessionKey = useAppSelector(selectSessionKey);\r\n  const userProfile = useAppSelector(selectUserProfile);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      // Perform localStorage action\r\n      let profile = JSON.parse(localStorage.getItem(\"logged_in_profile\"));\r\n      let key = localStorage.getItem(\"sa_access_token\");\r\n      if (!!key && key !== \"undefined\") {\r\n        // dispatch(setSessionKey(key));\r\n        console.log(\"key\", key);\r\n        router.push(\"/students_affairs/dashboard\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [years, setYears] = useState<YearsModel[]>([]);\r\n  const [selectedYear, setSelectedYear] = useState<string>(\"\");\r\n  const initialValues: ISignInForm = {\r\n    username: \"\",\r\n    // email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n  };\r\n  const handleSetRememberMe = () => setRememberMe(!rememberMe);\r\n  const router = useRouter();\r\n\r\n  async function fetchApi() {\r\n    let data = (await LoginService.GetYears()) as ApiResponse;\r\n    console.log(\"years\", data);\r\n    return data;\r\n  }\r\n\r\n  const handleChangeYear = (event) => {\r\n    setSelectedYear(event.target.value as string);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n  }, []);\r\n\r\n  const SignInSchema = Yup.object().shape({\r\n    username: Yup.string().required(translate(\"{0} is required\", \"Username\")),\r\n    // .required(\"Email is required\"),\r\n    // email: Yup.string()\r\n    //   .email(\"Must be a valid email\")\r\n    //   .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .required(translate(\"{0} is required\", \"Password\"))\r\n      .min(\r\n        4,\r\n        translate(\r\n          \"Password is too short - should be {0} chars minimum\",\r\n          \"4\",\r\n          false\r\n        )\r\n      ),\r\n  });\r\n  const submitForm = async (values: any, setSubmitting) => {\r\n    LoginService.Login({\r\n      email: values.username,\r\n      password: values.password,\r\n    })\r\n      .then((response) => {\r\n        if (response.success) {\r\n          localStorage.setItem(\"sa_access_token\", response.result.token);\r\n          localStorage.setItem(\r\n            \"logged_in_profile\",\r\n            JSON.stringify(response.result)\r\n          );\r\n          dispatch(updateProfile(response.result));\r\n          dispatch(setSessionKey(response.result.token));\r\n          router.push(\"/students_affairs/dashboard\");\r\n        }\r\n        else {\r\n          toast.error(response);\r\n          setSubmitting(false);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n      });\r\n    // const resp = await signIn(\"credentials\", {\r\n    //   email: values.username,\r\n    //   password: values.password,\r\n    //   redirect: false,\r\n    // });\r\n    // console.log(resp);\r\n    // if (resp.ok) {\r\n    //   router.push(\"/student_affairs/dashboard\");\r\n    // } else {\r\n    // }\r\n  };\r\n  return (\r\n    !sessionKey && (\r\n      <CoverLayout\r\n        title={translate(\"Welcome\")}\r\n        description={translate(\"Enter your credentials to sign in\")}\r\n        image={bg7}\r\n      >\r\n        <Box>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={SignInSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              submitForm(values, setSubmitting);\r\n            }}\r\n          >\r\n            {(formik) => {\r\n              const {\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                isSubmitting,\r\n                isValid,\r\n                dirty,\r\n              } = formik;\r\n              return (\r\n                <Form>\r\n                  {!isLoading && (\r\n                    <Box mb={2}>\r\n                      <Box mb={1} ml={0.5}>\r\n                        <Typography component=\"label\" variant=\"caption\">\r\n                          Year\r\n                        </Typography>\r\n                      </Box>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={selectedYear}\r\n                        label=\"Year\"\r\n                        onChange={handleChangeYear}\r\n                      >\r\n                        {years.map((item, ind) => {\r\n                          return (\r\n                            <MenuItem value={item.id}>{item.year}</MenuItem>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Box>\r\n                  )}\r\n                  <Box mb={2}>\r\n                    <Box mb={1} ml={0.5}>\r\n                      <Typography component=\"label\" variant=\"caption\">\r\n                        {translate(\"Username\")}\r\n                      </Typography>\r\n                    </Box>\r\n                    <TextField\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      id=\"username\"\r\n                      name=\"username\"\r\n                      value={values.username}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.username && errors.username)}\r\n                      helperText={touched.username && errors.username}\r\n                      placeholder={translate(\"Username\")}\r\n                      fullWidth\r\n                    />\r\n                  </Box>\r\n                  {/* <Box mb={1} ml={0.5}>\r\n                    <Typography component=\"label\" variant=\"caption\">\r\n                      Username\r\n                    </Typography>\r\n                  </Box>\r\n                  <TextField\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    helperText={touched.email && errors.email}\r\n                    placeholder=\"example@hiast.edu.sy\"\r\n                    fullWidth\r\n                  />\r\n                </Box> */}\r\n                  <Box mb={2}>\r\n                    <Box mb={1} ml={0.5}>\r\n                      <Typography component=\"label\" variant=\"caption\">\r\n                        {translate(\"Password\")}\r\n                      </Typography>\r\n                    </Box>\r\n                    <TextField\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      placeholder={translate(\"Password\")}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(errors.password && touched.password)}\r\n                      helperText={touched.password && errors.password}\r\n                      fullWidth\r\n                    />\r\n                  </Box>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Switch />\r\n                    <Typography\r\n                      variant=\"button\"\r\n                      style={{\r\n                        fontWeight: \"regular\",\r\n                        cursor: \"pointer\",\r\n                        userSelect: \"none\",\r\n                      }}\r\n                    // onClick={handleSetRememberMe}\r\n                    // sx={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n                    >\r\n                      &nbsp;&nbsp;{translate(\"Remember me\")}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mt={4} mb={1}>\r\n                    {isSubmitting ? (\r\n                      <SuiButton\r\n                        disabled={true}\r\n                        variant=\"gradient\"\r\n                        color=\"info\"\r\n                        fullWidth\r\n                      >\r\n                        {translate(\"Signing in...\")}\r\n                      </SuiButton>\r\n                    ) : (\r\n                        <SuiButton\r\n                          disabled={!(dirty && isValid)}\r\n                          type=\"submit\"\r\n                          variant=\"gradient\"\r\n                          color=\"info\"\r\n                          fullWidth\r\n                        >\r\n                          {translate(\"Sign in\")}\r\n                        </SuiButton>\r\n                      )}\r\n                  </Box>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Box>\r\n      </CoverLayout>\r\n    )\r\n  );\r\n}\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}