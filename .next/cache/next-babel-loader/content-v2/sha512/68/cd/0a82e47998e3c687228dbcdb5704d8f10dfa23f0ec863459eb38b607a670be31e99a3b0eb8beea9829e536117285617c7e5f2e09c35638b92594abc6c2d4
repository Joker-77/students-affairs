{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\components\\\\Modals\\\\PersonInfoPartialForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TextField, Box, Typography, MenuItem, Grid } from \"@material-ui/core\";\nimport { FieldArray } from \"formik\";\nimport SuiButton from \"../SuiButton\";\nimport { useTranslation } from \"../../Utility/Translations/useTranslation\";\n\nconst PersonInfoPartialForm = ({\n  title,\n  formik,\n  disabled,\n  isGray,\n  prefix\n}) => {\n  _s();\n\n  var _values$prefix, _touched$prefix, _errors$prefix, _touched$prefix2, _errors$prefix2, _values$prefix2, _touched$prefix3, _errors$prefix3, _touched$prefix4, _errors$prefix4, _values$prefix3, _values$prefix4, _touched$prefix5, _errors$prefix5, _touched$prefix6, _errors$prefix6, _values$prefix5, _touched$prefix7, _errors$prefix7, _touched$prefix8, _errors$prefix8, _values$prefix6, _touched$prefix9, _errors$prefix9, _touched$prefix10, _errors$prefix10, _values$prefix7, _touched$prefix11, _errors$prefix11, _touched$prefix12, _errors$prefix12, _values$prefix8, _touched$prefix13, _errors$prefix13, _touched$prefix14, _errors$prefix14;\n\n  const {\n    translate\n  } = useTranslation();\n  const style = {\n    bgcolor: isGray ? \"#d3d3d326\" : \"background.paper\",\n    padding: \"15px\",\n    boxShadow: 24,\n    borderRadius: \"20px\",\n    marginVertically: \"15px\"\n  };\n  const sexs = [{\n    id: \"male\",\n    value: translate(\"Male\")\n  }, {\n    id: \"female\",\n    value: translate(\"Female\")\n  }];\n  const phoneTypes = [{\n    id: \"private\",\n    value: translate(\"Private\")\n  }, {\n    id: \"family\",\n    value: translate(\"Family\")\n  }];\n  const {\n    values,\n    handleChange,\n    errors,\n    touched,\n    handleBlur\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: style,\n    mb: 2,\n    children: [!!title && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"label\",\n        variant: \"caption\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"First name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.first_name`,\n            name: `${prefix}.first_name`,\n            value: (_values$prefix = values[prefix]) === null || _values$prefix === void 0 ? void 0 : _values$prefix.first_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix = touched[prefix]) === null || _touched$prefix === void 0 ? void 0 : _touched$prefix.first_name) && ((_errors$prefix = errors[prefix]) === null || _errors$prefix === void 0 ? void 0 : _errors$prefix.first_name)),\n            helperText: ((_touched$prefix2 = touched[prefix]) === null || _touched$prefix2 === void 0 ? void 0 : _touched$prefix2.first_name) && ((_errors$prefix2 = errors[prefix]) === null || _errors$prefix2 === void 0 ? void 0 : _errors$prefix2.first_name),\n            placeholder: translate(\"First name\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Last name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.last_name`,\n            name: `${prefix}.last_name`,\n            value: (_values$prefix2 = values[prefix]) === null || _values$prefix2 === void 0 ? void 0 : _values$prefix2.last_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix3 = touched[prefix]) === null || _touched$prefix3 === void 0 ? void 0 : _touched$prefix3.last_name) && ((_errors$prefix3 = errors[prefix]) === null || _errors$prefix3 === void 0 ? void 0 : _errors$prefix3.last_name)),\n            helperText: ((_touched$prefix4 = touched[prefix]) === null || _touched$prefix4 === void 0 ? void 0 : _touched$prefix4.last_name) && ((_errors$prefix4 = errors[prefix]) === null || _errors$prefix4 === void 0 ? void 0 : _errors$prefix4.last_name),\n            placeholder: translate(\"Last name\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Gender\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"select\",\n            id: `${prefix}.sex`,\n            name: `${prefix}.sex`,\n            select: true,\n            value: (_values$prefix3 = values[prefix]) === null || _values$prefix3 === void 0 ? void 0 : _values$prefix3.sex,\n            onChange: handleChange(`${prefix}.sex`),\n            onBlur: handleBlur,\n            placeholder: translate(\"Gender\"),\n            fullWidth: true,\n            children: sexs.map(sex => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: sex.id,\n              children: sex.value\n            }, sex.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Nationality\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.nationality`,\n            name: `${prefix}.nationality`,\n            value: (_values$prefix4 = values[prefix]) === null || _values$prefix4 === void 0 ? void 0 : _values$prefix4.nationality,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix5 = touched[prefix]) === null || _touched$prefix5 === void 0 ? void 0 : _touched$prefix5.nationality) && ((_errors$prefix5 = errors[prefix]) === null || _errors$prefix5 === void 0 ? void 0 : _errors$prefix5.nationality)),\n            helperText: ((_touched$prefix6 = touched[prefix]) === null || _touched$prefix6 === void 0 ? void 0 : _touched$prefix6.nationality) && ((_errors$prefix6 = errors[prefix]) === null || _errors$prefix6 === void 0 ? void 0 : _errors$prefix6.nationality),\n            placeholder: translate(\"Nationality\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"National number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.national_number`,\n            name: `${prefix}.national_number`,\n            value: (_values$prefix5 = values[prefix]) === null || _values$prefix5 === void 0 ? void 0 : _values$prefix5.national_number,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix7 = touched[prefix]) === null || _touched$prefix7 === void 0 ? void 0 : _touched$prefix7.national_number) && ((_errors$prefix7 = errors[prefix]) === null || _errors$prefix7 === void 0 ? void 0 : _errors$prefix7.national_number)),\n            helperText: ((_touched$prefix8 = touched[prefix]) === null || _touched$prefix8 === void 0 ? void 0 : _touched$prefix8.national_number) && ((_errors$prefix8 = errors[prefix]) === null || _errors$prefix8 === void 0 ? void 0 : _errors$prefix8.national_number),\n            placeholder: translate(\"National number\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Passport First Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.passport_first_name`,\n            name: `${prefix}.passport_first_name`,\n            value: (_values$prefix6 = values[prefix]) === null || _values$prefix6 === void 0 ? void 0 : _values$prefix6.passport_first_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix9 = touched[prefix]) === null || _touched$prefix9 === void 0 ? void 0 : _touched$prefix9.passport_first_name) && ((_errors$prefix9 = errors[prefix]) === null || _errors$prefix9 === void 0 ? void 0 : _errors$prefix9.passport_first_name)),\n            helperText: ((_touched$prefix10 = touched[prefix]) === null || _touched$prefix10 === void 0 ? void 0 : _touched$prefix10.passport_first_name) && ((_errors$prefix10 = errors[prefix]) === null || _errors$prefix10 === void 0 ? void 0 : _errors$prefix10.passport_first_name),\n            placeholder: translate(\"Passport First Name\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Passport Last Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.passport_last_name`,\n            name: `${prefix}.passport_last_name`,\n            value: (_values$prefix7 = values[prefix]) === null || _values$prefix7 === void 0 ? void 0 : _values$prefix7.passport_last_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix11 = touched[prefix]) === null || _touched$prefix11 === void 0 ? void 0 : _touched$prefix11.passport_last_name) && ((_errors$prefix11 = errors[prefix]) === null || _errors$prefix11 === void 0 ? void 0 : _errors$prefix11.passport_last_name)),\n            helperText: ((_touched$prefix12 = touched[prefix]) === null || _touched$prefix12 === void 0 ? void 0 : _touched$prefix12.passport_last_name) && ((_errors$prefix12 = errors[prefix]) === null || _errors$prefix12 === void 0 ? void 0 : _errors$prefix12.passport_last_name),\n            placeholder: translate(\"Passport Last Name\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Passport Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.passport_number`,\n            name: `${prefix}.passport_number`,\n            value: (_values$prefix8 = values[prefix]) === null || _values$prefix8 === void 0 ? void 0 : _values$prefix8.passport_number,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix13 = touched[prefix]) === null || _touched$prefix13 === void 0 ? void 0 : _touched$prefix13.passport_number) && ((_errors$prefix13 = errors[prefix]) === null || _errors$prefix13 === void 0 ? void 0 : _errors$prefix13.passport_number)),\n            helperText: ((_touched$prefix14 = touched[prefix]) === null || _touched$prefix14 === void 0 ? void 0 : _touched$prefix14.passport_number) && ((_errors$prefix14 = errors[prefix]) === null || _errors$prefix14 === void 0 ? void 0 : _errors$prefix14.passport_number),\n            placeholder: translate(\"Passport Number\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 1,\n        ml: 0.5,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"label\",\n          variant: \"caption\",\n          children: translate(\"Phones\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: `${prefix}.phones`,\n        render: arrayHelpers => {\n          var _values$prefix9, _values$prefix10, _values$prefix11;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_values$prefix9 = values[prefix]) !== null && _values$prefix9 !== void 0 && _values$prefix9.phones && ((_values$prefix10 = values[prefix]) === null || _values$prefix10 === void 0 ? void 0 : _values$prefix10.phones.length) > 0 ? (_values$prefix11 = values[prefix]) === null || _values$prefix11 === void 0 ? void 0 : _values$prefix11.phones.map((phone, index) => {\n              var _touched$prefix15, _errors$prefix15, _touched$prefix16, _errors$prefix16;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange(`${prefix}.phones.${index}.phone`),\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: `${prefix}.phones.${index}.phone`,\n                      name: `${prefix}.phones.${index}.phone`,\n                      value: phone.phone,\n                      onBlur: handleBlur,\n                      error: Boolean(((_touched$prefix15 = touched[prefix]) === null || _touched$prefix15 === void 0 ? void 0 : _touched$prefix15.phones) && ((_errors$prefix15 = errors[prefix]) === null || _errors$prefix15 === void 0 ? void 0 : _errors$prefix15.phones)),\n                      helperText: ((_touched$prefix16 = touched[prefix]) === null || _touched$prefix16 === void 0 ? void 0 : _touched$prefix16.phones) && ((_errors$prefix16 = errors[prefix]) === null || _errors$prefix16 === void 0 ? void 0 : _errors$prefix16.phones),\n                      placeholder: translate(\"Phone\") //fullWidth\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: `${prefix}.phones.${index}.type`,\n                      name: `${prefix}.phones.${index}.type`,\n                      select: true // value={values[prefix]?.sex}\n                      ,\n                      onChange: handleChange(`${prefix}.phones.${index}.type`),\n                      onBlur: handleBlur,\n                      placeholder: \"Phone type\",\n                      fullWidth: true,\n                      children: phoneTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: type.id,\n                        children: type.value\n                      }, type.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 39\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 31\n                  }, this), !disabled && /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: [/*#__PURE__*/_jsxDEV(SuiButton, {\n                      style: {\n                        margin: 5\n                      },\n                      color: \"error\",\n                      onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                      ,\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n                      style: {\n                        margin: 5\n                      },\n                      color: \"primary\",\n                      onClick: () => arrayHelpers.insert(index + 1, {\n                        phone: '',\n                        type: ''\n                      }) // insert an empty string at a position\n                      ,\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 29\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 27\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: !disabled && /*#__PURE__*/_jsxDEV(SuiButton, {\n                variant: \"gradient\",\n                color: \"primary\",\n                onClick: () => arrayHelpers.push(''),\n                children: translate(\"Add a phone\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonInfoPartialForm, \"VEbFv+CEoRjFiJRcyzpqPT0le14=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PersonInfoPartialForm;\nexport default PersonInfoPartialForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonInfoPartialForm\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/components/Modals/PersonInfoPartialForm.tsx"],"names":["React","TextField","Box","Typography","MenuItem","Grid","FieldArray","SuiButton","useTranslation","PersonInfoPartialForm","title","formik","disabled","isGray","prefix","translate","style","bgcolor","padding","boxShadow","borderRadius","marginVertically","sexs","id","value","phoneTypes","values","handleChange","errors","touched","handleBlur","first_name","Boolean","last_name","sex","map","nationality","national_number","passport_first_name","passport_last_name","passport_number","arrayHelpers","phones","length","phone","index","type","margin","remove","insert","push"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {FieldArray} from \"formik\";\r\nimport SuiButton from \"../SuiButton\";\r\nimport {useTranslation} from \"../../Utility/Translations/useTranslation\";\r\n\r\ninterface IPersonInfoPartialProps {\r\n  title: string;\r\n  formik: any;\r\n  disabled: boolean;\r\n  isGray: boolean;\r\n  prefix: string;\r\n}\r\nconst PersonInfoPartialForm: React.FC<IPersonInfoPartialProps> = ({\r\n  title,\r\n  formik,\r\n  disabled,\r\n  isGray,\r\n  prefix,\r\n}) => {\r\n  const {translate} = useTranslation();\r\n  const style = {\r\n    bgcolor: isGray ? \"#d3d3d326\" : \"background.paper\",\r\n    padding: \"15px\",\r\n    boxShadow: 24,\r\n    borderRadius: \"20px\",\r\n    marginVertically: \"15px\"\r\n  };\r\n  const sexs = [\r\n    {\r\n      id: \"male\",\r\n      value: translate(\"Male\"),\r\n    },\r\n    {\r\n      id: \"female\",\r\n      value: translate(\"Female\"),\r\n    },\r\n  ];\r\n\r\n  const phoneTypes = [\r\n    {\r\n      id: \"private\",\r\n      value: translate(\"Private\"),\r\n    },\r\n    {\r\n      id: \"family\",\r\n      value: translate(\"Family\"),\r\n    },\r\n  ];\r\n\r\n  const {\r\n    values,\r\n    handleChange,\r\n    errors,\r\n    touched,\r\n    handleBlur,\r\n  } = formik;\r\n  return (\r\n    <Box sx={style} mb={2}>\r\n      {!!title && <Box mb={2}>\r\n        <Typography component=\"label\" variant=\"caption\">\r\n          <b>{title}</b>\r\n        </Typography>\r\n      </Box>}\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"First name\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`${prefix}.first_name`}\r\n                name={`${prefix}.first_name`}\r\n                value={values[prefix]?.first_name}\r\n                onBlur={handleBlur}\r\n                error={Boolean(touched[prefix]?.first_name && errors[prefix]?.first_name)}\r\n                helperText={touched[prefix]?.first_name && errors[prefix]?.first_name}\r\n                placeholder={translate(\"First name\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Last name\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`${prefix}.last_name`}\r\n                name={`${prefix}.last_name`}\r\n                value={values[prefix]?.last_name}\r\n                onBlur={handleBlur}\r\n                error={Boolean(touched[prefix]?.last_name && errors[prefix]?.last_name)}\r\n                helperText={touched[prefix]?.last_name && errors[prefix]?.last_name}\r\n                placeholder={translate(\"Last name\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Gender\")}\r\n              </Typography>\r\n            </Box>\r\n\r\n            <TextField\r\n                disabled={disabled}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"select\"\r\n                id={`${prefix}.sex`}\r\n                name={`${prefix}.sex`}\r\n                select={true}\r\n                value={values[prefix]?.sex}\r\n                onChange={handleChange(`${prefix}.sex`)}\r\n                onBlur={handleBlur}\r\n                placeholder={translate(\"Gender\")}\r\n                fullWidth\r\n            >\r\n              {sexs.map((sex) => (\r\n                  <MenuItem key={sex.id} value={sex.id}>\r\n                    {sex.value}\r\n                  </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Nationality\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`${prefix}.nationality`}\r\n                name={`${prefix}.nationality`}\r\n                value={values[prefix]?.nationality}\r\n                onBlur={handleBlur}\r\n                error={Boolean(\r\n                    touched[prefix]?.nationality && errors[prefix]?.nationality\r\n                )}\r\n                helperText={touched[prefix]?.nationality && errors[prefix]?.nationality}\r\n                placeholder={translate(\"Nationality\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"National number\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`${prefix}.national_number`}\r\n                name={`${prefix}.national_number`}\r\n                value={values[prefix]?.national_number}\r\n                onBlur={handleBlur}\r\n                error={Boolean(touched[prefix]?.national_number && errors[prefix]?.national_number)}\r\n                helperText={touched[prefix]?.national_number && errors[prefix]?.national_number}\r\n                placeholder={translate(\"National number\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Passport First Name\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`${prefix}.passport_first_name`}\r\n                name={`${prefix}.passport_first_name`}\r\n                value={values[prefix]?.passport_first_name}\r\n                onBlur={handleBlur}\r\n                error={Boolean(\r\n                    touched[prefix]?.passport_first_name && errors[prefix]?.passport_first_name\r\n                )}\r\n                helperText={\r\n                  touched[prefix]?.passport_first_name && errors[prefix]?.passport_first_name\r\n                }\r\n                placeholder={translate(\"Passport First Name\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Passport Last Name\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`${prefix}.passport_last_name`}\r\n                name={`${prefix}.passport_last_name`}\r\n                value={values[prefix]?.passport_last_name}\r\n                onBlur={handleBlur}\r\n                error={Boolean(\r\n                    touched[prefix]?.passport_last_name && errors[prefix]?.passport_last_name\r\n                )}\r\n                helperText={\r\n                  touched[prefix]?.passport_last_name && errors[prefix]?.passport_last_name\r\n                }\r\n                placeholder={translate(\"Passport Last Name\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Passport Number\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`${prefix}.passport_number`}\r\n                name={`${prefix}.passport_number`}\r\n                value={values[prefix]?.passport_number}\r\n                onBlur={handleBlur}\r\n                error={Boolean(\r\n                    touched[prefix]?.passport_number && errors[prefix]?.passport_number\r\n                )}\r\n                helperText={\r\n                  touched[prefix]?.passport_number && errors[prefix]?.passport_number\r\n                }\r\n                placeholder={translate(\"Passport Number\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <Box mb={2}>\r\n        <Box mb={1} ml={0.5}>\r\n          <Typography component=\"label\" variant=\"caption\">\r\n            {translate(\"Phones\")}\r\n          </Typography>\r\n        </Box>\r\n        <FieldArray\r\n            name={`${prefix}.phones`}\r\n            render={arrayHelpers => (\r\n                <div>\r\n                  {values[prefix]?.phones && values[prefix]?.phones.length > 0 ? (\r\n                      values[prefix]?.phones.map((phone, index) => (\r\n                          <div key={index}>\r\n\r\n                            <Grid container spacing={2}>\r\n                              <Grid item xs={4}>\r\n                                <TextField\r\n                                    disabled={disabled}\r\n                                    onChange={handleChange(`${prefix}.phones.${index}.phone`)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type=\"text\"\r\n                                    id={`${prefix}.phones.${index}.phone`}\r\n                                    name={`${prefix}.phones.${index}.phone`}\r\n                                    value={phone.phone}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(touched[prefix]?.phones && errors[prefix]?.phones)}\r\n                                    helperText={touched[prefix]?.phones && errors[prefix]?.phones}\r\n                                    placeholder={translate(\"Phone\")}\r\n                                    //fullWidth\r\n                                />\r\n                              </Grid>\r\n\r\n                              <Grid item xs={4}>\r\n                                <TextField\r\n                                    disabled={disabled}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type=\"select\"\r\n                                    id={`${prefix}.phones.${index}.type`}\r\n                                    name={`${prefix}.phones.${index}.type`}\r\n                                    select={true}\r\n                                    // value={values[prefix]?.sex}\r\n                                    onChange={handleChange(`${prefix}.phones.${index}.type`)}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder=\"Phone type\"\r\n                                    fullWidth\r\n                                >\r\n                                  {phoneTypes.map((type) => (\r\n                                      <MenuItem key={type.id} value={type.id}>\r\n                                        {type.value}\r\n                                      </MenuItem>\r\n                                  ))}\r\n                                </TextField>\r\n                              </Grid>\r\n\r\n                              {!disabled && <Grid item xs={4}>\r\n                                <SuiButton\r\n                                    style={{ margin: 5 }}\r\n                                    color=\"error\"\r\n                                    onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                >\r\n                                  -\r\n                                </SuiButton>\r\n\r\n                                <SuiButton\r\n                                    style={{ margin: 5 }}\r\n                                    color=\"primary\"\r\n                                    onClick={() => arrayHelpers.insert(index+1, {phone: '', type: ''})} // insert an empty string at a position\r\n                                >\r\n                                  +\r\n                                </SuiButton>\r\n                              </Grid>}\r\n                            </Grid>\r\n\r\n                          </div>\r\n                      ))\r\n                  ) : (\r\n                      <React.Fragment>\r\n                      {!disabled && <SuiButton\r\n                          variant=\"gradient\"\r\n                          color=\"primary\"\r\n                          onClick={() => arrayHelpers.push('')}>\r\n                        {/* show this when user has removed all phones from the list */}\r\n                        {translate(\"Add a phone\")}\r\n                      </SuiButton>\r\n                        }\r\n                      </React.Fragment>\r\n                  )}\r\n                </div>\r\n            )}\r\n        />\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PersonInfoPartialForm;\r\n"]},"metadata":{},"sourceType":"module"}