{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect } from \"react\";\nimport { Formik, Form, FieldArray } from \"formik\";\nimport { TextField, Box, Typography, MenuItem, Grid } from \"@material-ui/core\";\nimport Card from \"../../../../components/Card/Card.js\";\nimport CardHeader from \"../../../../components/Card/CardHeader.js\";\nimport CardBody from \"../../../../components/Card/CardBody.js\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport { governorates } from \"../../../../Static/resources\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle\";\n\nconst AddCertificateModal = ({\n  initValues,\n  callback\n}) => {\n  const {\n    locale\n  } = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  useEffect(() => console.log(initValues), []);\n  const courses = [{\n    id: 'math',\n    value: translate('Math')\n  }, {\n    id: 'physics',\n    value: translate('Physics')\n  }, // {\n  //   id: 'arabic',\n  //   value: translate('Arabic'),\n  // },\n  {\n    id: 'chemestry',\n    value: translate('Chemistry')\n  }, {\n    id: 'sum',\n    value: translate('Sum')\n  } // {\n  //   id: 'science',\n  //   value: translate('Science'),\n  // },\n  // {\n  //   id: 'nationality',\n  //   value: translate('Nationality Course'),\n  // },\n  ]; // const langCourses = [\n  //   {\n  //     id: 'english',\n  //     value: translate('English'),\n  //   },\n  //   {\n  //     id: 'الفرنسية',\n  //     value: translate('French'),\n  //   },\n  //   {\n  //     id: 'الروسية',\n  //     value: translate('Russian'),\n  //   },\n  // ];\n\n  const [disabled, setDisabled] = React.useState(true);\n  const formScheme = Yup.object().shape({// type: Yup.string().required(translate(\"{0} is required\", \"Type\")),\n    // year: Yup.string().required(translate(\"{0} is required\", \"Year\")),\n    // result: Yup.string().required(translate(\"{0} is required\", \"Result\")),\n    // city: Yup.string().required(translate(\"{0} is required\", \"City\")),\n    // round: Yup.string().required(translate(\"{0} is required\", \"Round\")),\n    // subscription_number: Yup.string().required(translate(\"{0} is required\", \"Subscription number\")),\n    // candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\")),\n  });\n\n  const submitForm = async (values, setSubmitting) => {// setSubmitting(true);\n    // console.log(\"values\", values);\n    // CertificateService.Edit(values)\n    //     .then((res) => {\n    //       console.log(\"Certificate\", res);\n    //     })\n    //     .catch((error) => {\n    //       console.error(\"error\", error);\n    //     })\n    //     .finally(() => {\n    //       setSubmitting(false);\n    //     });\n  };\n\n  return /*#__PURE__*/_jsx(Box, {\n    children: /*#__PURE__*/_jsxs(Card, {\n      children: [/*#__PURE__*/_jsx(CardHeader, {\n        children: /*#__PURE__*/_jsxs(\"h4\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"#01579b\"\n          },\n          children: [translate(\"Certificate Details\"), \" \"]\n        })\n      }), /*#__PURE__*/_jsx(CardBody, {\n        children: /*#__PURE__*/_jsx(Formik, {\n          initialValues: initValues,\n          validationSchema: formScheme,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting);\n          },\n          children: formik => {\n            var _values$details, _values$details$;\n\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty\n            } = formik;\n            let validCourses = (_values$details = values.details) === null || _values$details === void 0 ? void 0 : _values$details.filter(item => courses.map(c => c.id).includes(item.key)); // const sumValidCourses = validCourses.reduce((partialSum, a) => partialSum + +a.value, 0);\n            // validCourses = [...validCourses, {key: 'sum', value: sumValidCourses + values.result}];\n\n            return /*#__PURE__*/_jsxs(Form, {\n              children: [/*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Year\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      min: 0,\n                      id: \"year\",\n                      name: \"year\",\n                      value: values.year,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.year && errors.year),\n                      helperText: touched.year && errors.year,\n                      placeholder: translate(\"Year\"),\n                      fullWidth: true\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Result\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      min: 0,\n                      id: \"result\",\n                      name: \"result\",\n                      value: values === null || values === void 0 ? void 0 : (_values$details$ = values.details[9]) === null || _values$details$ === void 0 ? void 0 : _values$details$.value,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.result && errors.result),\n                      helperText: touched.result && errors.result,\n                      placeholder: translate(\"Result\"),\n                      fullWidth: true\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"City\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: `city`,\n                      name: `city`,\n                      select: true,\n                      value: values.city,\n                      onChange: handleChange(`city`),\n                      onBlur: handleBlur,\n                      placeholder: translate(\"City\"),\n                      fullWidth: true,\n                      children: governorates(translate).map(city => /*#__PURE__*/_jsx(MenuItem, {\n                        value: city.value,\n                        children: city.value\n                      }, city.value))\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Round\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"round\",\n                      name: \"round\",\n                      value: values.round,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.round && errors.round),\n                      helperText: touched.round && errors.round,\n                      placeholder: translate(\"Round\"),\n                      fullWidth: true\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Subscription number\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      min: 0,\n                      id: \"subscription_number\",\n                      name: \"subscription_number\",\n                      value: values.subscription_number,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.subscription_number && errors.subscription_number),\n                      helperText: touched.subscription_number && errors.subscription_number,\n                      placeholder: translate(\"Subscription number\"),\n                      fullWidth: true\n                    })]\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(Box, {\n                mb: 2,\n                children: [/*#__PURE__*/_jsx(Box, {\n                  mb: 1,\n                  ml: 0.5,\n                  children: /*#__PURE__*/_jsx(Typography, {\n                    component: \"label\",\n                    variant: \"caption\",\n                    children: translate(\"Marks\")\n                  })\n                }), /*#__PURE__*/_jsx(FieldArray, {\n                  name: `details`,\n                  render: arrayHelpers => /*#__PURE__*/_jsxs(\"div\", {\n                    children: [validCourses && validCourses.length > 0 ? validCourses.map((mark, index) => /*#__PURE__*/_jsx(\"div\", {\n                      children: /*#__PURE__*/_jsxs(Grid, {\n                        container: true,\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsx(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: /*#__PURE__*/_jsx(TextField, {\n                            disabled: disabled,\n                            variant: \"outlined\",\n                            size: \"small\",\n                            type: \"select\",\n                            id: `details.${index}.key`,\n                            name: `details.${index}.key`,\n                            select: true,\n                            value: mark.key,\n                            onChange: handleChange(`details.${index}.key`),\n                            onBlur: handleBlur,\n                            placeholder: translate(\"Course\"),\n                            fullWidth: true,\n                            children: courses.map(course => /*#__PURE__*/_jsx(MenuItem, {\n                              value: course.id,\n                              children: course.value\n                            }, course.id))\n                          })\n                        }), /*#__PURE__*/_jsx(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: /*#__PURE__*/_jsx(TextField, {\n                            disabled: disabled,\n                            onChange: handleChange(`details.${index}.value`),\n                            variant: \"outlined\",\n                            size: \"small\",\n                            type: \"number\",\n                            min: 0,\n                            id: `details.${index}.value`,\n                            name: `details.${index}.value`,\n                            value: mark.value,\n                            onBlur: handleBlur,\n                            error: Boolean((touched === null || touched === void 0 ? void 0 : touched.details) && (errors === null || errors === void 0 ? void 0 : errors.details)),\n                            helperText: (touched === null || touched === void 0 ? void 0 : touched.details) && (errors === null || errors === void 0 ? void 0 : errors.details),\n                            placeholder: translate(\"Mark\") //fullWidth\n\n                          })\n                        }), !disabled && /*#__PURE__*/_jsxs(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsx(SuiButton, {\n                            style: {\n                              margin: 5\n                            },\n                            color: \"error\",\n                            onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                            ,\n                            children: \"-\"\n                          }), /*#__PURE__*/_jsx(SuiButton, {\n                            style: {\n                              margin: 5\n                            },\n                            color: \"primary\",\n                            onClick: () => arrayHelpers.insert(index + 1, {\n                              phone: '',\n                              type: ''\n                            }) // insert an empty string at a position\n                            ,\n                            children: \"+\"\n                          })]\n                        })]\n                      })\n                    }, index)) : /*#__PURE__*/_jsx(React.Fragment, {\n                      children: !disabled && /*#__PURE__*/_jsx(SuiButton, {\n                        variant: \"gradient\",\n                        color: \"primary\",\n                        onClick: () => arrayHelpers.push(''),\n                        children: translate(\"Add a mark\")\n                      })\n                    }), /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsxs(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsx(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsx(\"p\", {\n                          children: translate(\"Weighted mark\")\n                        })\n                      }), /*#__PURE__*/_jsx(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsx(\"p\", {\n                          children: /*#__PURE__*/_jsx(\"strong\", {\n                            children: values.weighted_mark\n                          })\n                        })\n                      })]\n                    })]\n                  })\n                })]\n              })]\n            });\n          }\n        })\n      })]\n    })\n  });\n};\n\nexport default AddCertificateModal;","map":null,"metadata":{},"sourceType":"module"}