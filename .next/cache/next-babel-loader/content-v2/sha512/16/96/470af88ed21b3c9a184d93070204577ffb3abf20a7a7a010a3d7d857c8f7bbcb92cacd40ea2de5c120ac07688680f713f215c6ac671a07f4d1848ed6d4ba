{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { Button, AccordionDetails, Accordion, Typography, Dialog, DialogTitle, DialogActions, Box, IconButton } from \"@material-ui/core\";\nimport { Close, Description } from \"@material-ui/icons\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport { ExportToCsv } from \"export-to-csv\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport CandidateService from \"../../../../Services/CandidateService\";\nimport SearchAddCandidateModal from \"../../../../components/Modals/SearchAddCandidateModal\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { setCandidate, useAppDispatch } from \"../../../../redux\";\nimport AddTestResultsFileModal from \"../../../../components/Modals/AddTestResultsFileModal\";\nimport AddCandidateOutSideMinistryModal from \"../../../../components/Modals/AddCandidateOutSideMinistryModal\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\nconst CandidatesList = ({\n  forRegistrations = false,\n  title,\n  customColumns\n}) => {\n  const router = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const [Candidates, setCandidates] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [searchResult, setSearchResult] = React.useState(null);\n  const [items, setItems] = React.useState([]); // Confirm Delete\n\n  const [confirmDelete, setConfirmDelete] = React.useState(false);\n  const [deleteId, setDeleteId] = React.useState(null);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setSearchResult(null);\n    setOpen(false);\n  };\n\n  const [initAddCandidate, setInitAddCandidate] = React.useState({\n    subscription_number: \"\",\n    year: \"\",\n    governorate: \"\",\n    round: \"\"\n  });\n  const AddCandidateScheme = Yup.object().shape({\n    subscription_number: Yup.string().required(translate(\"{0} is required\", \"Subscription number\")),\n    year: Yup.string().required(translate(\"{0} is required\", \"Year\")),\n    governorate: Yup.string().required(translate(\"{0} is required\", \"City\")),\n    round: Yup.string().required(translate(\"{0} is required\", \"Round\"))\n  });\n  const [openTestResults, setOpenTestResults] = React.useState(false);\n\n  const handleOpenTestResults = () => {\n    setOpenTestResults(true);\n  };\n\n  const handleCloseTestResults = () => {\n    setOpenTestResults(false);\n  };\n\n  const [openOutsideCandidate, setOpenOutsideCandidate] = React.useState(false);\n\n  const handleOpenOutsideCandidate = () => {\n    setOpenOutsideCandidate(true);\n  };\n\n  const handleCloseOutsideCandidate = () => {\n    setOpenOutsideCandidate(false);\n  };\n\n  const submitSearchCandidate = async (values, setSubmitting) => {\n    setSubmitting(true);\n    CandidateService.Search(values).then(res => {\n      setSearchResult({\n        found: Boolean(res.result),\n        result: res.result\n      }); // setOpen(false);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n\n  const submitAddCandidate = async (values, setSubmitting) => {\n    setSubmitting(true);\n    CandidateService.AddAfterSearch(_objectSpread(_objectSpread({}, values), {}, {\n      external: 0\n    })).then(res => {\n      const candidatesCopy = [res.result, ...Candidates];\n      setCandidates(candidatesCopy);\n      handleClose();\n      dispatch(setCandidate(res.result));\n      router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/candidate-details`);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /************************** Data ****************************/\n\n\n  const getCandidates = async () => {\n    var result = await CandidateService.GetAll().then(res => {\n      var _res$result;\n\n      return forRegistrations ? (_res$result = res.result) === null || _res$result === void 0 ? void 0 : _res$result.filter(item => {\n        var _item$registerations;\n\n        return ((_item$registerations = item.registerations) === null || _item$registerations === void 0 ? void 0 : _item$registerations.length) > 0;\n      }) : res.result;\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n    return result;\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    setItems([]);\n    getCandidates().then(res => {\n      setCandidates(res);\n      setLoading(false);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  let columns = [{\n    title: translate(\"Id\"),\n    field: \"id\",\n    hidden: true,\n    filtering: false\n  }, {\n    title: translate(\"Name\"),\n    field: \"full_name\",\n    filtering: false\n  }, {\n    title: translate(\"Father\"),\n    field: \"father.first_name\",\n    hidden: true,\n    filtering: false\n  }, {\n    title: translate(\"Mother\"),\n    field: \"mother.first_name\",\n    hidden: true,\n    filtering: false\n  }, {\n    title: translate(\"Registeration number\"),\n    field: \"registeration_number\",\n    filtering: false,\n    type: \"string\"\n  }, {\n    title: translate(\"Subscription number\"),\n    field: \"certificates[0].subscription_number\",\n    filtering: false\n  }, {\n    title: translate(\"City\"),\n    field: \"certificates[0].city\",\n    filtering: false\n  }, {\n    title: translate(\"Round\"),\n    field: \"certificates[0].round\",\n    filtering: false\n  }, {\n    title: translate(\"Ministry External\"),\n    field: \"external_value\",\n    filtering: false\n  }, {\n    title: translate(\"Registration Year\"),\n    field: \"registeration_year_name\",\n    filtering: false\n  } // {\n  //     title: translate(\"Result\"),\n  //     field: \"certificates[0].result\",\n  // },\n  ]; // confirm\n\n  const ConfirmDialog = ({\n    id,\n    show,\n    handleClose,\n    handleDeleteCandidate\n  }) => {\n    return /*#__PURE__*/_jsxs(Dialog, {\n      open: show,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(DialogTitle, {\n        children: /*#__PURE__*/_jsx(Typography, {\n          children: `هل تريد تأكيد حذف المرشّح ${name}`\n        })\n      }), /*#__PURE__*/_jsx(Box, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        children: /*#__PURE__*/_jsx(IconButton, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsx(Close, {})\n        })\n      }), /*#__PURE__*/_jsxs(DialogActions, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          variant: \"contained\",\n          children: translate(\"Cancel\")\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: () => handleDeleteCandidate(id),\n          color: \"primary\",\n          variant: \"contained\",\n          children: translate(\"Confirm\")\n        })]\n      })]\n    });\n  };\n\n  const [name, setName] = React.useState(\"\");\n\n  const handleConfirmDialog = data => {\n    var _data$person, _data$person2;\n\n    console.clear();\n    console.log(data);\n    setDeleteId(data.id);\n    setName(`${data === null || data === void 0 ? void 0 : (_data$person = data.person) === null || _data$person === void 0 ? void 0 : _data$person.first_name} ${data === null || data === void 0 ? void 0 : (_data$person2 = data.person) === null || _data$person2 === void 0 ? void 0 : _data$person2.last_name}`);\n    setConfirmDelete(true);\n  };\n\n  const handleCloseConfirmDialog = () => {\n    setDeleteId(null);\n    setConfirmDelete(false);\n  };\n\n  const handleDeleteCandidate = id => {\n    setLoading(true);\n    setConfirmDelete(false);\n    CandidateService.delete(id).then(response => {\n      toast.success(\"تم حذف المرشّح بنجاح\");\n\n      let _data = Candidates.filter(item => {\n        return item.id != deleteId;\n      });\n\n      setCandidates(_data);\n      setLoading(false);\n    }).catch(error => {});\n  };\n\n  const renderCandidates = () => {\n    if (loading) return /*#__PURE__*/_jsx(Placeholder, {\n      loading: true\n    });\n\n    if (Candidates != null && Candidates.length > 0) {\n      let data = Candidates;\n      let options = {\n        exportAllData: true,\n        exportButton: true,\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: true,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\"\n      };\n      const btnLabel = !forRegistrations ? \"Candidate Details\" : \"Edit Registration\";\n      const btnPage = !forRegistrations ? \"candidate-details\" : \"edit-registration\";\n      let actions = [{\n        icon: () => /*#__PURE__*/_jsx(SuiButton, {\n          style: {\n            minWidth: 140\n          },\n          color: \"primary\",\n          children: translate(btnLabel)\n        }),\n        onClick: (evt, data) => {\n          dispatch(setCandidate(data));\n          router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/${btnPage}`);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsx(SuiButton, {\n          style: {\n            minWidth: 140\n          },\n          color: \"error\",\n          children: \"\\u062D\\u0630\\u0641 \\u0645\\u0631\\u0634\\u062D\"\n        }),\n        onClick: (evt, data) => {\n          handleConfirmDialog(data);\n        }\n      }];\n      return /*#__PURE__*/_jsx(ActionTable, {\n        Title: title || translate(\"Candidates List\"),\n        Columns: customColumns || columns,\n        Data: data.map(item => {\n          var _item$person, _item$father, _item$person2;\n\n          return _objectSpread(_objectSpread({}, item), {}, {\n            registeration_year_name: item.registeration_year == new Date().getFullYear() ? \"الحالي\" : \"السابق\",\n            external_value: item.external ? translate(\"Yes\") : translate(\"No\"),\n            full_name: `${(_item$person = item.person) === null || _item$person === void 0 ? void 0 : _item$person.first_name} ${(_item$father = item.father) === null || _item$father === void 0 ? void 0 : _item$father.first_name} ${(_item$person2 = item.person) === null || _item$person2 === void 0 ? void 0 : _item$person2.last_name}`\n          });\n        }),\n        Options: options,\n        Actions: actions\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  }; // Dynamic Export\n\n\n  const [showExportColumns, setShowExportColumns] = React.useState(false);\n  const [selectedColumns, setSelectedColumns] = React.useState([]);\n  const [checked, setChecked] = React.useState([]);\n\n  const handleExportData = () => {\n    setShowExportColumns(!showExportColumns);\n  };\n\n  const csvOptions = {\n    fieldSeparator: \";\",\n    quoteStrings: '\"',\n    decimalSeparator: \".\",\n    showLabels: true,\n    useBom: true,\n    useKeysAsHeaders: false,\n    headers: selectedColumns.map(c => c.title)\n  };\n  const csvExporter = new ExportToCsv(csvOptions);\n\n  const generateExcel = () => {\n    csvExporter.generateCsv(Candidates.map(ct => {\n      let object = {};\n      selectedColumns.forEach((item, index) => {\n        var _ct$person, _ct$father, _ct$person2, _$get;\n\n        if (item.field == \"full_name\") _.set(object, `col ${index}`, `${(_ct$person = ct.person) === null || _ct$person === void 0 ? void 0 : _ct$person.first_name} ${(_ct$father = ct.father) === null || _ct$father === void 0 ? void 0 : _ct$father.first_name} ${(_ct$person2 = ct.person) === null || _ct$person2 === void 0 ? void 0 : _ct$person2.last_name}`);else _.set(object, `col ${index}`, (_$get = _.get(ct, item.field)) !== null && _$get !== void 0 ? _$get : \"\");\n      });\n      console.log(object);\n      return object;\n    }));\n  };\n\n  const handleCheck = event => {\n    var updatedList = [...checked];\n\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n\n    setChecked(updatedList);\n    setSelectedColumns(columns.filter(item => {\n      return updatedList.includes(item.field);\n    }));\n  };\n\n  const handleAllExportData = () => {\n    let allColumns = [{\n      title: \"رقم التسجيل\",\n      field: \"registeration_number\",\n      hidden: true,\n      filtering: false\n    }, {\n      title: \"الاسم الثلاثي\",\n      field: \"full_name\",\n      filtering: false\n    }, {\n      title: \"رقم الاكتتاب\",\n      field: \"certificates[0].subscription_number\",\n      hidden: true,\n      filtering: false\n    }, {\n      title: \"المحافظة\",\n      field: \"certificates[0].city\",\n      filtering: false,\n      type: \"string\"\n    }, {\n      title: \"الدورة\",\n      field: \"certificates[0].round\",\n      filtering: false\n    }, {\n      title: \"2400\",\n      field: \"certificates[0].details[9].value\",\n      filtering: false\n    }, {\n      title: \"رياضيات\",\n      field: \"certificates[0].details[4].value\",\n      filtering: false\n    }, {\n      title: \"فيزياء\",\n      field: \"certificates[0].details[5].value\",\n      filtering: false\n    }, {\n      title: \"كيمياء\",\n      field: \"certificates[0].details[6].value\",\n      filtering: false\n    }, {\n      title: \"3600\",\n      field: \"registerations[0].mark_3600\",\n      filtering: false\n    }, {\n      title: \"الهاتف\",\n      field: \"person.phones[0].phone\",\n      filtering: false\n    }, {\n      title: \"مكان امتحان القبول\",\n      field: \"exam_place\",\n      filtering: false\n    }, {\n      title: \"امتحان قبول الرياضيات\",\n      field: \"registerations[0].math\",\n      filtering: false\n    }, {\n      title: \"امتحان قبول الفيزياء\",\n      field: \"registerations[0].physics\",\n      filtering: false\n    }, {\n      title: \"3400\",\n      field: \"registerations[0].mark_3400\",\n      filtering: false\n    }, {\n      title: \"حالة القبول\",\n      field: \"registerations[0].status\",\n      filtering: false\n    }, {\n      title: translate(\"Ministry External\"),\n      field: \"external\",\n      filtering: false\n    }, {\n      title: \"أولى\",\n      field: \"desires[0].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"ثانية\",\n      field: \"desires[1].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"ثالثة\",\n      field: \"desires[2].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"رابعة\",\n      field: \"desires[3].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"خامسة\",\n      field: \"desires[4].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"سادسة\",\n      field: \"desires[5].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"مثبتة\",\n      field: \"selected_desire?.speciality_name\",\n      filtering: false\n    }, {\n      title: translate(\"Registration Year\"),\n      field: \"registeration_year\",\n      filtering: false\n    }, {\n      title: \"فئة التسجيل\",\n      field: \"registeration_class\",\n      filtering: false\n    }, {\n      title: \"مكان الدراسة\",\n      field: \"study_place\",\n      filtering: false\n    }];\n    let localCsvOptions = {\n      fieldSeparator: \";\",\n      quoteStrings: '\"',\n      decimalSeparator: \".\",\n      showLabels: true,\n      useBom: true,\n      useKeysAsHeaders: false,\n      headers: allColumns.map(c => c.title)\n    };\n    let localCsvExporter = new ExportToCsv(localCsvOptions);\n    setTimeout(() => {\n      localCsvExporter.generateCsv(Candidates.map(ct => {\n        let object = {};\n        allColumns.forEach((item, index) => {\n          var _ct$person3, _ct$father2, _ct$person4, _$get2;\n\n          if (item.field == \"full_name\") _.set(object, `col ${index}`, `${(_ct$person3 = ct.person) === null || _ct$person3 === void 0 ? void 0 : _ct$person3.first_name} ${(_ct$father2 = ct.father) === null || _ct$father2 === void 0 ? void 0 : _ct$father2.first_name} ${(_ct$person4 = ct.person) === null || _ct$person4 === void 0 ? void 0 : _ct$person4.last_name}`);else if (item.field == \"registerations[0].mark_3600\") {\n            var _ct$certificates$, _ct$certificates$2, _ct$certificates$2$de, _ct$certificates$3, _ct$certificates$3$de, _ct$certificates$4, _ct$certificates$4$de;\n\n            let value = parseInt(ct === null || ct === void 0 ? void 0 : (_ct$certificates$ = ct.certificates[0]) === null || _ct$certificates$ === void 0 ? void 0 : _ct$certificates$.result) + parseInt((_ct$certificates$2 = ct.certificates[0]) === null || _ct$certificates$2 === void 0 ? void 0 : (_ct$certificates$2$de = _ct$certificates$2.details[4]) === null || _ct$certificates$2$de === void 0 ? void 0 : _ct$certificates$2$de.value) + parseInt((_ct$certificates$3 = ct.certificates[0]) === null || _ct$certificates$3 === void 0 ? void 0 : (_ct$certificates$3$de = _ct$certificates$3.details[5]) === null || _ct$certificates$3$de === void 0 ? void 0 : _ct$certificates$3$de.value) + parseInt((_ct$certificates$4 = ct.certificates[0]) === null || _ct$certificates$4 === void 0 ? void 0 : (_ct$certificates$4$de = _ct$certificates$4.details[6]) === null || _ct$certificates$4$de === void 0 ? void 0 : _ct$certificates$4$de.value);\n\n            _.set(object, `col ${index}`, `${value}`);\n          } else if (item.field == \"registerations[0].mark_3400\") {\n            var _ct$registerations;\n\n            if ((ct === null || ct === void 0 ? void 0 : (_ct$registerations = ct.registerations) === null || _ct$registerations === void 0 ? void 0 : _ct$registerations.length) > 0) {\n              var _ct$certificates$5, _ct$registerations$, _ct$registerations$2;\n\n              let value = parseInt(ct === null || ct === void 0 ? void 0 : (_ct$certificates$5 = ct.certificates[0]) === null || _ct$certificates$5 === void 0 ? void 0 : _ct$certificates$5.result) + parseInt(ct === null || ct === void 0 ? void 0 : (_ct$registerations$ = ct.registerations[0]) === null || _ct$registerations$ === void 0 ? void 0 : _ct$registerations$.math) + parseInt(ct === null || ct === void 0 ? void 0 : (_ct$registerations$2 = ct.registerations[0]) === null || _ct$registerations$2 === void 0 ? void 0 : _ct$registerations$2.physics);\n\n              _.set(object, `col ${index}`, `${value}`);\n            } else _.set(object, `col ${index}`, \"\");\n          } else if (item.field == \"external\") {\n            let value = ct.external == 0 ? \"وزارة\" : \"خارج الوزارة\";\n\n            _.set(object, `col ${index}`, `${value}`);\n          } else _.set(object, `col ${index}`, (_$get2 = _.get(ct, item.field)) !== null && _$get2 !== void 0 ? _$get2 : \"\");\n        });\n        return object;\n      }));\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    children: [/*#__PURE__*/_jsxs(GridItem, {\n      md: 12,\n      children: [/*#__PURE__*/_jsx(ConfirmDialog, {\n        id: deleteId,\n        show: confirmDelete,\n        handleClose: handleCloseConfirmDialog,\n        handleDeleteCandidate: handleDeleteCandidate\n      }, \"Confirm Delete Cadidate\"), !forRegistrations && /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleOpen,\n          children: translate(\"Add New Candidate\")\n        }), /*#__PURE__*/_jsxs(Button, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleOpenOutsideCandidate,\n          children: [translate(\"Add Candidate\"), \" \", translate(\"out-side of ministry data\")]\n        }), /*#__PURE__*/_jsx(SuiButton, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"gradient\",\n          onClick: handleOpenTestResults,\n          color: \"dark\",\n          children: translate(\"Add acceptance test results\")\n        }), /*#__PURE__*/_jsx(SuiButton, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"gradient\",\n          onClick: handleExportData,\n          color: \"dark\",\n          children: translate(\"Export\")\n        })]\n      }), /*#__PURE__*/_jsx(SuiButton, {\n        style: {\n          marginLeft: 10\n        },\n        disabled: false,\n        variant: \"gradient\",\n        onClick: handleAllExportData,\n        color: \"dark\",\n        children: translate(\"تصدير كامل المعلومات\")\n      }), showExportColumns && /*#__PURE__*/_jsx(GridItem, {\n        style: {\n          marginBottom: \"1em\"\n        },\n        children: /*#__PURE__*/_jsx(Accordion, {\n          children: /*#__PURE__*/_jsx(AccordionDetails, {\n            children: /*#__PURE__*/_jsxs(GridItem, {\n              container: true,\n              children: [/*#__PURE__*/_jsx(GridItem, {\n                md: 12,\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\"\n                },\n                children: /*#__PURE__*/_jsx(Typography, {\n                  style: {\n                    backgroundColor: \"lightgray\",\n                    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n                    padding: \"0em 1.2em\",\n                    margin: \"0em 0em .5em 0em\"\n                  },\n                  children: translate(\"Select Columns\")\n                })\n              }), /*#__PURE__*/_jsxs(GridItem, {\n                md: 12,\n                children: [/*#__PURE__*/_jsx(GridItem, {\n                  className: \"list-container\",\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  },\n                  children: columns // .filter((item) => !item.hidden)\n                  .map((item, index) => /*#__PURE__*/_jsxs(GridItem, {\n                    children: [/*#__PURE__*/_jsx(\"input\", {\n                      value: item.field,\n                      type: \"checkbox\",\n                      onChange: handleCheck\n                    }), /*#__PURE__*/_jsx(\"span\", {\n                      children: item.title\n                    })]\n                  }, index))\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 12,\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxs(Button, {\n                    style: {\n                      margin: \"0px 5px\"\n                    },\n                    disabled: false,\n                    variant: \"contained\",\n                    className: classes.successText,\n                    onClick: generateExcel,\n                    children: [/*#__PURE__*/_jsx(\"span\", {\n                      style: {\n                        padding: \"0px 0px 0px 10px\"\n                      },\n                      children: translate(\"Export\")\n                    }), /*#__PURE__*/_jsx(Description, {})]\n                  })\n                })]\n              })]\n            })\n          })\n        })\n      }), renderCandidates()]\n    }), /*#__PURE__*/_jsx(SearchAddCandidateModal, {\n      searchResult: searchResult,\n      onAddClick: submitAddCandidate,\n      title: translate(\"Add Candidate\"),\n      open: open,\n      formScheme: AddCandidateScheme,\n      handleClose: handleClose,\n      initValues: initAddCandidate,\n      submitForm: submitSearchCandidate\n    }, \"addCandidate\"), /*#__PURE__*/_jsx(AddTestResultsFileModal, {\n      title: translate(\"Add acceptance test results\"),\n      open: openTestResults,\n      handleClose: handleCloseTestResults,\n      submitForm: () => handleCloseTestResults()\n    }, \"addAcceptanceTestResults\"), /*#__PURE__*/_jsx(AddCandidateOutSideMinistryModal, {\n      // title={translate(\"Add acceptance test results\")}\n      open: openOutsideCandidate,\n      handleClose: handleCloseOutsideCandidate\n    }, \"addOutsideCandidate\")]\n  });\n};\n\nCandidatesList.auth = true;\nCandidatesList.layout = Admin;\nexport default CandidatesList;","map":null,"metadata":{},"sourceType":"module"}