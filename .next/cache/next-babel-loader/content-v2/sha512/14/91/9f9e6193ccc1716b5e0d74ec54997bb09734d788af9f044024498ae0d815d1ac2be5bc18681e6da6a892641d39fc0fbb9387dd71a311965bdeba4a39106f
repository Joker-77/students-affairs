{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport Admin from \"../../../../layouts/Admin\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport * as yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { toast } from \"react-toastify\";\nimport TeacherService from \"../../../../Services/TeacherService\";\nimport { useRouter } from \"next/router\";\nimport { ArrowBack, AttachFile //CheckBox,\n, CloudDownload } from \"@material-ui/icons\";\nimport Card from \"../../../../components/Card/Card\";\nimport { Box, CardActions, Divider, Grid, MenuItem, TextField, Typography, RadioGroup, Radio, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport { name_prefixes, work_fields, genders, degrees, statuses, authorities } from \"../../../../Static/resources\";\nconst TeacherDetail = /*#__PURE__*/React.forwardRef(({\n  isCreate,\n  details,\n  isEditable,\n  setShow,\n  activateEdit\n}, ref) => {\n  var _teacher$attachements, _teacher$person, _teacher$person2, _teacher$person3, _teacher$person4, _teacher$person5, _teacher$person5$phon, _teacher$person5$phon2, _teacher$person6, _teacher$person6$phon, _teacher$person6$phon2, _teacher$person7, _teacher$person7$phon, _teacher$person7$phon2, _teacher$person8, _teacher$person8$phon, _teacher$person8$phon2, _teacher$person9, _teacher$person9$phon, _teacher$person9$phon2, _details$person;\n\n  const {\n    translate\n  } = useTranslation();\n  const router = useRouter();\n  const {\n    0: teacher,\n    1: setDetails\n  } = useState(details);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState(teacher === null || teacher === void 0 ? void 0 : (_teacher$attachements = teacher.attachements[0]) === null || _teacher$attachements === void 0 ? void 0 : _teacher$attachements.name);\n  let teacherSchema = //isCreate ?\n  yup.object({\n    first_name: yup.string(translate(\"First name\")).required(translate(\"Field is required\")),\n    last_name: yup.string(translate(\"Last name\")).required(translate(\"Field is required\")),\n    father_name: yup.string(translate(\"Father name\")).required(translate(\"Field is required\")),\n    national_number: yup.number(translate(\"National number\")).required(translate(\"Field is required\")),\n    number: yup.number(translate(\"ID Number\")),\n    //.required(translate(\"Field is required\")),\n    gender: yup.string(translate(\"Gender\")).required(translate(\"Field is required\")),\n    authority: yup.string(translate(\"Functional Body\")),\n\n    /*work_field: yup\r\n      .string(translate(\"Work Field\"))\r\n      .required(translate(\"Field is required\")),*/\n\n    /*activity: yup\r\n      .string(translate(\"Activity\"))\r\n      .required(translate(\"Field is required\")),*/\n\n    /*prefix_name: yup\r\n      .string(translate(\"Name prefix\"))\r\n      .required(translate(\"Field is required\")),*/\n    primary_number: yup.number(translate(\"Primary number\")).required(translate(\"Field is required\")),\n    secondary_number: yup.number(translate(\"Secondary number\")),\n    office_number: yup.number(translate(\"Office number\")),\n    mobile_1: yup.number(translate(\"Mobile 1\")).required(translate(\"Field is required\")),\n    mobile_2: yup.number(translate(\"Mobile 2\")),\n    degree: yup.string(translate(\"Degree\")).required(translate(\"Field is required\")),\n\n    /*hiast_graduate: yup\r\n      .boolean(translate(\"HIAST graduate\"))\r\n      .required(translate(\"Field is required\")),*/\n    status: yup.string(translate(\"Status\")).required(translate(\"Field is required\")),\n    attachement: yup.mixed() //.required(translate(\"Need an attachement for this teacher\")),\n\n  });\n  /*: yup.object({\r\n      en_name: yup\r\n        .string(translate(\"English Name\"))\r\n        .required(translate(\"Field is required\")),\r\n      ar_name: yup\r\n        .string(translate(\"Arabic Name\"))\r\n        .required(translate(\"Field is required\")),\r\n      fr_name: yup\r\n        .string(translate(\"French Name\"))\r\n        .required(translate(\"Field is required\")),\r\n      code: yup\r\n        .string(translate(\"Teacher Code\"))\r\n        .required(translate(\"Field is required\")),\r\n      attachement: yup\r\n        .mixed()\r\n        .required(translate(\"Need an attachement for this teacher\")),\r\n    });*/\n\n  let initialValues = //isCreate ?\n  {\n    first_name: teacher === null || teacher === void 0 ? void 0 : (_teacher$person = teacher.person) === null || _teacher$person === void 0 ? void 0 : _teacher$person.first_name,\n    last_name: teacher === null || teacher === void 0 ? void 0 : (_teacher$person2 = teacher.person) === null || _teacher$person2 === void 0 ? void 0 : _teacher$person2.last_name,\n    father_name: teacher === null || teacher === void 0 ? void 0 : teacher.father_name,\n    national_number: teacher === null || teacher === void 0 ? void 0 : (_teacher$person3 = teacher.person) === null || _teacher$person3 === void 0 ? void 0 : _teacher$person3.national_number,\n    number: teacher === null || teacher === void 0 ? void 0 : teacher.number,\n    gender: teacher === null || teacher === void 0 ? void 0 : (_teacher$person4 = teacher.person) === null || _teacher$person4 === void 0 ? void 0 : _teacher$person4.sex,\n    authority: teacher === null || teacher === void 0 ? void 0 : teacher.authority,\n    work_field: teacher && teacher.work_field ? teacher.work_field : work_fields(translate)[0].id,\n    activity: teacher === null || teacher === void 0 ? void 0 : teacher.activity,\n    prefix_name: teacher && teacher.prefix_name ? teacher.prefix_name : name_prefixes(translate)[0].id,\n    primary_number: teacher === null || teacher === void 0 ? void 0 : (_teacher$person5 = teacher.person) === null || _teacher$person5 === void 0 ? void 0 : (_teacher$person5$phon = _teacher$person5.phones) === null || _teacher$person5$phon === void 0 ? void 0 : (_teacher$person5$phon2 = _teacher$person5$phon.find(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"primary\")) === null || _teacher$person5$phon2 === void 0 ? void 0 : _teacher$person5$phon2.phone,\n    secondary_number: teacher === null || teacher === void 0 ? void 0 : (_teacher$person6 = teacher.person) === null || _teacher$person6 === void 0 ? void 0 : (_teacher$person6$phon = _teacher$person6.phones) === null || _teacher$person6$phon === void 0 ? void 0 : (_teacher$person6$phon2 = _teacher$person6$phon.find(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"secondary\")) === null || _teacher$person6$phon2 === void 0 ? void 0 : _teacher$person6$phon2.phone,\n    office_number: teacher === null || teacher === void 0 ? void 0 : (_teacher$person7 = teacher.person) === null || _teacher$person7 === void 0 ? void 0 : (_teacher$person7$phon = _teacher$person7.phones) === null || _teacher$person7$phon === void 0 ? void 0 : (_teacher$person7$phon2 = _teacher$person7$phon.find(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"office\")) === null || _teacher$person7$phon2 === void 0 ? void 0 : _teacher$person7$phon2.phone,\n    mobile_1: teacher === null || teacher === void 0 ? void 0 : (_teacher$person8 = teacher.person) === null || _teacher$person8 === void 0 ? void 0 : (_teacher$person8$phon = _teacher$person8.phones) === null || _teacher$person8$phon === void 0 ? void 0 : (_teacher$person8$phon2 = _teacher$person8$phon.find(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"personal\")) === null || _teacher$person8$phon2 === void 0 ? void 0 : _teacher$person8$phon2.phone,\n    mobile_2: teacher === null || teacher === void 0 ? void 0 : (_teacher$person9 = teacher.person) === null || _teacher$person9 === void 0 ? void 0 : (_teacher$person9$phon = _teacher$person9.phones) === null || _teacher$person9$phon === void 0 ? void 0 : (_teacher$person9$phon2 = _teacher$person9$phon.filter(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"personal\")[1]) === null || _teacher$person9$phon2 === void 0 ? void 0 : _teacher$person9$phon2.phone,\n    degree: teacher === null || teacher === void 0 ? void 0 : teacher.degree,\n    hiast_graduate: teacher ? teacher.hiast_graduate : 1,\n    status: teacher === null || teacher === void 0 ? void 0 : teacher.status,\n    attachement: teacher === null || teacher === void 0 ? void 0 : teacher.attachement\n  };\n  /*: {\r\n      id: teacher.id,\r\n      en_name: teacher.en_name,\r\n      ar_name: teacher.ar_name,\r\n      fr_name: teacher.fr_name,\r\n      code: teacher.code,\r\n      attachement: teacher?.current_description?.attachement,\r\n    };*/\n\n  /************************* Handle Edit Teacher ************/\n\n  const handleEditTeacher = event => {\n    event.preventDefault();\n    activateEdit();\n  };\n  /*************** Handle End Add Description For Teacher ******/\n\n\n  const {\n    0: errorPercentageMsg,\n    1: setErrorPercentageMsg\n  } = useState(\"\");\n\n  const submitForm = (values, setSubmitting) => {\n    if (isCreate) {\n      const payload = {\n        first_name: values.first_name,\n        last_name: values.last_name,\n        father_name: values.father_name,\n        national_number: values.national_number,\n        number: values.number,\n        gender: values.gender,\n        authority: values.authority,\n        work_field: values.work_field,\n        activity: values.activity,\n        degree: values.degree,\n        prefix_name: values.prefix_name,\n        primary_number: values.primary_number,\n        secondary_number: values.secondary_number,\n        office_number: values.office_number,\n        mobile_1: values.mobile_1,\n        mobile_2: values.mobile_2,\n        hiast_graduate: values.hiast_graduate,\n        status: values.status\n      }; //console.clear();\n\n      const isFile = hiddenInput.current.value != \"\";\n\n      if (isFile) {\n        payload.attachement = values.attachement;\n        payload.attachement_name = fileName;\n      }\n\n      console.log(payload);\n      TeacherService.Add(payload).then(response => {\n        if (response.success) {\n          toast.success(\"Teacher Added Successfully\");\n          setShow();\n        } else {\n          console.log(response.error);\n          toast.error(response.error.message);\n        }\n      }).catch(error => {\n        console.log(error.message);\n        toast.error(error.message);\n        throw new Error(error);\n      });\n    } else {\n      const payload = {\n        id: teacher.id,\n        first_name: values.first_name,\n        last_name: values.last_name,\n        father_name: values.father_name,\n        national_number: values.national_number,\n        number: values.number,\n        gender: values.gender,\n        authority: values.authority,\n        work_field: values.work_field,\n        activity: values.activity,\n        degree: values.degree,\n        prefix_name: values.prefix_name,\n        primary_number: values.primary_number,\n        secondary_number: values.secondary_number,\n        office_number: values.office_number,\n        mobile_1: values.mobile_1,\n        mobile_2: values.mobile_2,\n        hiast_graduate: values.hiast_graduate,\n        status: values.status\n      };\n      const isFile = hiddenInput.current.value != \"\";\n\n      if (isFile) {\n        payload.attachement = values.attachement;\n        payload.attachement_name = fileName;\n      }\n\n      console.log(payload);\n      TeacherService.Edit(payload).then(response => {\n        if (response.success) {\n          toast.success(\"Teacher Edited Successfully\");\n          setShow();\n        } else {\n          console.log(response.error);\n          toast.error(response.error.message);\n        }\n      }).catch(error => {\n        console.log(error.message);\n        toast.error(error.message);\n        throw new Error(error);\n      });\n    }\n\n    setSubmitting(false); // TeacherService.Add(payload)\n    //   .then(() => {})\n    //   .catch((e) => console.error(e));\n  };\n\n  const hiddenInput = React.useRef(null);\n\n  const handleClick = event => {\n    var _hiddenInput$current;\n\n    (_hiddenInput$current = hiddenInput.current) === null || _hiddenInput$current === void 0 ? void 0 : _hiddenInput$current.click();\n  };\n\n  const {\n    0: changed,\n    1: setChanged\n  } = useState(false);\n\n  const convertToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      setFileName(file === null || file === void 0 ? void 0 : file.name);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const handleFile = async (e, setFieldValue) => {\n    const file = e.target.files[0];\n    setChanged(true); //check the size of image\n\n    if ((file === null || file === void 0 ? void 0 : file.size) / 1024 / 1024 < 2) {\n      const base64 = await convertToBase64(file);\n      setFieldValue(\"attachement\", base64);\n    } else {\n      toast.error(\"File size must be of 5MB or less\");\n    }\n  };\n\n  const initialWorkField = isCreate ? work_fields(translate)[0].id : initialValues.work_field;\n  const {\n    0: selectedWorkField,\n    1: setSelectedWorkField\n  } = useState(initialWorkField);\n\n  const handleWorkFieldChange = (event, basicHandleChange) => {\n    setSelectedWorkField(event.target.value);\n    basicHandleChange(event);\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    style: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsx(Grid, {\n      container: true,\n      md: 12,\n      sm: 12,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        md: 12,\n        sm: 12,\n        xs: 12,\n        children: [/*#__PURE__*/_jsx(Card, {\n          style: {\n            padding: \"1em 4em\",\n            margin: \"5px 0px\"\n          },\n          children: /*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsx(GridItem, {\n              item: true,\n              md: 9,\n              xs: 12,\n              sm: 12,\n              children: !isCreate ? /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsxs(Typography, {\n                  variant: \"h5\",\n                  component: \"div\",\n                  children: [translate(\"Teacher Name\"), \":\", \" \", `${details === null || details === void 0 ? void 0 : (_details$person = details.person) === null || _details$person === void 0 ? void 0 : _details$person.first_name} ${details === null || details === void 0 ? void 0 : details.father_name} ${details === null || details === void 0 ? void 0 : details.person.last_name}`]\n                }), /*#__PURE__*/_jsx(Typography, {\n                  sx: {\n                    mb: 1.5\n                  },\n                  color: \"text.secondary\",\n                  children: translate(\"Teacher Details\")\n                })]\n              }) : /*#__PURE__*/_jsx(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: translate(\"Add New Teacher\")\n              })\n            }), /*#__PURE__*/_jsx(GridItem, {\n              md: 3,\n              xs: 12,\n              sm: 12,\n              children: /*#__PURE__*/_jsxs(SuiButton, {\n                onClick: setShow,\n                color: \"warning\",\n                children: [/*#__PURE__*/_jsx(ArrowBack, {}), translate(\"Back To Previous Page\")]\n              })\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Card, {\n          style: {\n            padding: \"3em 3em\",\n            margin: \"5px 0px\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsx(Formik, {\n            enableReinitialize: true,\n            initialValues: initialValues,\n            validationSchema: teacherSchema,\n            onSubmit: (values, {\n              setSubmitting\n            }) => {\n              const work_field = work_fields(translate).find(field => field.id == values.work_field);\n              if (work_field && work_field.activities.length === 0) values.activity = undefined;\n              submitForm(values, setSubmitting);\n            },\n            children: formik => {\n              const {\n                values,\n                handleChange,\n                handleSubmit,\n                errors,\n                touched,\n                handleBlur,\n                isSubmitting,\n                isValid,\n                dirty,\n                setFieldValue\n              } = formik;\n              return /*#__PURE__*/_jsxs(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxs(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    container: true,\n                    md: 12,\n                    style: {\n                      margin: \"1em 0em\",\n                      color: \"red\",\n                      display: errors && // 👈 null and undefined check\n                      Object.keys(errors).length === 0 && Object.getPrototypeOf(errors) === Object.prototype ? \"none\" : \"block\"\n                    }\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"first_name\",\n                        name: \"first_name\",\n                        value: values.first_name,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.first_name && errors.first_name),\n                        helperText: touched.first_name && errors.first_name,\n                        placeholder: translate(\"First name\"),\n                        label: translate(\"First name\"),\n                        fullWidth: true\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"last_name\",\n                        name: \"last_name\",\n                        value: values.last_name,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.last_name && errors.last_name),\n                        helperText: touched.last_name && errors.last_name,\n                        placeholder: translate(\"Last name\"),\n                        label: translate(\"Last name\"),\n                        fullWidth: true\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"father_name\",\n                        name: \"father_name\",\n                        value: values.father_name,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.father_name && errors.father_name),\n                        helperText: touched.father_name && errors.father_name,\n                        placeholder: translate(\"Father name\"),\n                        label: translate(\"Father name\"),\n                        fullWidth: true\n                      })\n                    })\n                  })]\n                }),\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxs(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"national_number\",\n                        name: \"national_number\",\n                        value: values.national_number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.national_number && errors.national_number),\n                        helperText: touched.national_number && errors.national_number,\n                        placeholder: translate(\"National number\"),\n                        label: translate(\"National number\"),\n                        fullWidth: true\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"number\",\n                        name: \"number\",\n                        value: values.number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.number && errors.number),\n                        helperText: touched.number && errors.number,\n                        placeholder: translate(\"ID Number\"),\n                        label: translate(\"ID Number\"),\n                        fullWidth: true\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"select\",\n                        id: \"gender\",\n                        name: \"gender\",\n                        select: true,\n                        value: values.gender,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.gender && errors.gender),\n                        helperText: touched.gender && errors.gender,\n                        placeholder: translate(\"Gender\"),\n                        label: translate(\"Gender\"),\n                        fullWidth: true,\n                        children: genders(translate).map(gender => /*#__PURE__*/_jsx(MenuItem, {\n                          value: gender.id,\n                          children: gender.value\n                        }, gender.id))\n                      })\n                    })\n                  })]\n                }) //)}\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxs(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(FormControlLabel, {\n                        label: translate(\"Work Field\"),\n                        labelPlacement: \"top\",\n                        control: /*#__PURE__*/_jsx(RadioGroup, {\n                          onChange: e => handleWorkFieldChange(e, handleChange),\n                          id: \"work_field\",\n                          name: \"work_field\",\n                          value: values.work_field,\n                          onBlur: handleBlur,\n                          placeholder: translate(\"Work Field\") //defaultValue={work_fields(translate)[0].id}\n                          ,\n                          children: work_fields(translate).map(field => {\n                            var _field$activities, _field$activities2;\n\n                            return /*#__PURE__*/_jsxs(_Fragment, {\n                              children: [/*#__PURE__*/_jsx(FormControlLabel, {\n                                value: field.id,\n                                control: /*#__PURE__*/_jsx(Radio, {}),\n                                label: field.value\n                              }, field.id), //values.work_field === field.id ?\n                              selectedWorkField === field.id && ((_field$activities = field.activities) === null || _field$activities === void 0 ? void 0 : _field$activities.length) > 0 ? /*#__PURE__*/_jsx(GridItem, {\n                                children: /*#__PURE__*/_jsx(TextField, {\n                                  disabled: !isEditable,\n                                  onChange: handleChange,\n                                  variant: \"outlined\",\n                                  size: \"small\",\n                                  type: \"select\",\n                                  id: \"activity\",\n                                  name: \"activity\",\n                                  select: true,\n                                  value: values.activity,\n                                  onBlur: handleBlur,\n                                  error: Boolean(touched.activity && errors.activity),\n                                  helperText: touched.activity && errors.activity,\n                                  placeholder: field.activitiesLabel,\n                                  label: field.activitiesLabel,\n                                  fullWidth: true,\n                                  children: (_field$activities2 = field.activities) === null || _field$activities2 === void 0 ? void 0 : _field$activities2.map(activity => /*#__PURE__*/_jsx(MenuItem, {\n                                    value: activity.id,\n                                    children: activity.value\n                                  }, activity.id))\n                                })\n                              }) : /*#__PURE__*/_jsx(_Fragment, {})]\n                            });\n                          })\n                        })\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: \"authority\",\n                      name: \"authority\",\n                      select: true,\n                      value: values.authority,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.authority && errors.authority),\n                      helperText: touched.authority && errors.authority,\n                      placeholder: translate(\"Functional Body\"),\n                      label: translate(\"Functional Body\"),\n                      fullWidth: true,\n                      children: authorities(translate).map(authority => /*#__PURE__*/_jsx(MenuItem, {\n                        value: authority.id,\n                        children: authority.value\n                      }, authority.id))\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(FormControlLabel, {\n                        label: translate(\"Name prefix\"),\n                        labelPlacement: \"top\",\n                        control: /*#__PURE__*/_jsx(RadioGroup, {\n                          onChange: handleChange,\n                          id: \"prefix_name\",\n                          name: \"prefix_name\",\n                          value: values.prefix_name,\n                          onBlur: handleBlur,\n                          placeholder: translate(\"Name prefix\") //defaultValue={name_prefixes(translate)[0].id}\n                          ,\n                          children: name_prefixes(translate).map(prefix => /*#__PURE__*/_jsx(FormControlLabel, {\n                            value: prefix.id,\n                            control: /*#__PURE__*/_jsx(Radio, {}),\n                            label: prefix.value\n                          }, prefix.id))\n                        })\n                      })\n                    })\n                  })]\n                }) //)\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxs(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"primary_number\",\n                        name: \"primary_number\",\n                        value: values.primary_number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.primary_number && errors.primary_number),\n                        helperText: touched.primary_number && errors.primary_number,\n                        placeholder: translate(\"Primary number\"),\n                        label: translate(\"Primary number\"),\n                        fullWidth: true\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"secondary_number\",\n                        name: \"secondary_number\",\n                        value: values.secondary_number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.secondary_number && errors.secondary_number),\n                        helperText: touched.secondary_number && errors.secondary_number,\n                        placeholder: translate(\"Secondary number\"),\n                        label: translate(\"Secondary number\"),\n                        fullWidth: true\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"office_number\",\n                        name: \"office_number\",\n                        value: values.office_number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.office_number && errors.office_number),\n                        helperText: touched.office_number && errors.office_number,\n                        placeholder: translate(\"Office number\"),\n                        label: translate(\"Office number\"),\n                        fullWidth: true\n                      })\n                    })\n                  })]\n                }) //)\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxs(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"mobile_1\",\n                        name: \"mobile_1\",\n                        value: values.mobile_1,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.mobile_1 && errors.mobile_1),\n                        helperText: touched.mobile_1 && errors.mobile_1,\n                        placeholder: translate(\"Mobile 1\"),\n                        label: translate(\"Mobile 1\"),\n                        fullWidth: true\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"mobile_2\",\n                        name: \"mobile_2\",\n                        value: values.mobile_2,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.mobile_2 && errors.mobile_2),\n                        helperText: touched.mobile_2 && errors.mobile_2,\n                        placeholder: translate(\"Mobile 2\"),\n                        label: translate(\"Mobile 2\"),\n                        fullWidth: true\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4\n                  })]\n                }) //)\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxs(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"select\",\n                        id: \"degree\",\n                        name: \"degree\",\n                        select: true,\n                        value: values.degree,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.degree && errors.degree),\n                        helperText: touched.degree && errors.degree,\n                        placeholder: translate(\"Degree\"),\n                        label: translate(\"Degree\"),\n                        fullWidth: true,\n                        children: degrees(translate).map(degree => /*#__PURE__*/_jsx(MenuItem, {\n                          value: degree.id,\n                          children: degree.value\n                        }, degree.id))\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(FormControlLabel, {\n                        label: translate(\"HIAST graduate\"),\n                        onChange: handleChange,\n                        control: /*#__PURE__*/_jsx(Checkbox, {\n                          disabled: !isEditable,\n                          onChange: handleChange,\n                          id: \"hiast_graduate\",\n                          name: \"hiast_graduate\",\n                          checked: values.hiast_graduate == 1,\n                          onBlur: handleBlur,\n                          placeholder: translate(\"HIAST graduate\") //defaultChecked\n\n                        })\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4\n                  })]\n                }) //)\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxs(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {\n                      children: /*#__PURE__*/_jsx(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"select\",\n                        id: \"status\",\n                        name: \"status\",\n                        select: true,\n                        value: values.status,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.status && errors.status),\n                        helperText: touched.status && errors.status,\n                        placeholder: translate(\"Status\"),\n                        label: translate(\"Status\"),\n                        fullWidth: true,\n                        children: statuses(translate).map(status => /*#__PURE__*/_jsx(MenuItem, {\n                          value: status.id,\n                          children: status.value\n                        }, status.id))\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsx(GridItem, {})\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4\n                  })]\n                }) //)\n                , /*#__PURE__*/_jsx(Divider, {\n                  style: {\n                    margin: \"2em 0em\"\n                  }\n                }), /*#__PURE__*/_jsx(Box, {\n                  mb: 1,\n                  ml: 0.5,\n                  children: /*#__PURE__*/_jsx(Typography, {\n                    component: \"label\",\n                    variant: \"caption\",\n                    children: /*#__PURE__*/_jsx(\"h5\", {\n                      children: translate(\"Attachements\")\n                    })\n                  })\n                }), /*#__PURE__*/_jsxs(Box, {\n                  children: [/*#__PURE__*/_jsxs(SuiButton, {\n                    disabled: !isEditable,\n                    color: \"primary\",\n                    onClick: handleClick,\n                    children: [translate(\"Upload a file\"), /*#__PURE__*/_jsx(AttachFile, {})]\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    id: \"attachement\",\n                    name: \"attachement\",\n                    type: \"file\",\n                    ref: hiddenInput,\n                    style: {\n                      display: \"none\"\n                    },\n                    onChange: event => {\n                      handleFile(event, setFieldValue);\n                    },\n                    className: \"form-control\"\n                  }), /*#__PURE__*/_jsx(Grid, {\n                    md: 4,\n                    style: {\n                      marginTop: \"1em\"\n                    },\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      fullWidth: true,\n                      helperText: (touched === null || touched === void 0 ? void 0 : touched.attachement) && (errors === null || errors === void 0 ? void 0 : errors.attachement),\n                      error: Boolean((errors === null || errors === void 0 ? void 0 : errors.attachement) && (touched === null || touched === void 0 ? void 0 : touched.attachement)),\n                      variant: \"outlined\",\n                      type: \"text\",\n                      size: \"small\",\n                      disabled: true,\n                      placeholder: \"\",\n                      value: fileName\n                    })\n                  }), //values.attachement != null &&\n                  //values.attachement != \"\" &&\n                  (teacher === null || teacher === void 0 ? void 0 : teacher.attachements) && (teacher === null || teacher === void 0 ? void 0 : teacher.attachements.length) != 0 && !changed && /*#__PURE__*/_jsx(Grid, {\n                    md: 6,\n                    style: {\n                      marginTop: \"1em\"\n                    },\n                    children: /*#__PURE__*/_jsx(\"a\", {\n                      href: process.env.BASE_URL + \"/\" + teacher.attachements[0].url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: /*#__PURE__*/_jsxs(SuiButton, {\n                        type: \"button\",\n                        disabled: true,\n                        variant: \"gradient\",\n                        color: \"warning\",\n                        fullWidth: true,\n                        children: [/*#__PURE__*/_jsx(CloudDownload, {\n                          style: {\n                            margin: \"0em .3em\"\n                          }\n                        }), translate(\"Download\")]\n                      })\n                    })\n                  })]\n                }), /*#__PURE__*/_jsx(Box, {\n                  mt: 4,\n                  mb: 1,\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  },\n                  children: isEditable ? isSubmitting ? /*#__PURE__*/_jsx(SuiButton, {\n                    type: \"button\",\n                    disabled: true,\n                    variant: \"gradient\",\n                    color: \"info\",\n                    children: translate(\"Processing ...\")\n                  }) : /*#__PURE__*/_jsx(SuiButton, {\n                    style: {\n                      color: \"rgb(255, 255, 255)\",\n                      background: \"rgb(23, 193, 232)\"\n                    },\n                    disabled: !isValid && isSubmitting,\n                    type: \"submit\",\n                    children: translate(\"Save\")\n                  }) : /*#__PURE__*/_jsx(SuiButton, {\n                    onClick: handleEditTeacher,\n                    type: \"button\",\n                    variant: \"gradient\",\n                    color: \"info\",\n                    children: translate(\"Edit Teacher\")\n                  })\n                })]\n              });\n            }\n          })\n        }), /*#__PURE__*/_jsx(CardActions, {})]\n      })\n    })\n  });\n});\nTeacherDetail.layout = Admin;\nTeacherDetail.auth = false;\nexport default TeacherDetail;","map":null,"metadata":{},"sourceType":"module"}