{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\components\\\\SuiButton\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { forwardRef } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // Custom styles for SuiButton\n\nimport SuiButtonRoot from \"./SuiButtonRoot\";\nconst SuiButton = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    color,\n    variant,\n    size,\n    circular,\n    iconOnly,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"variant\", \"size\", \"circular\", \"iconOnly\", \"children\"]);\n\n  return /*#__PURE__*/_jsxDEV(SuiButtonRoot, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: ref,\n    color: \"primary\",\n    variant: variant === \"gradient\" ? \"contained\" : variant,\n    size: size,\n    ownerState: {\n      color,\n      variant,\n      size,\n      circular,\n      iconOnly\n    },\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}); // Setting default values for the props of SuiButton\n\n_c2 = SuiButton;\nSuiButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  color: \"white\",\n  circular: false,\n  iconOnly: false\n}; // Typechecking props for the SuiButton\n\nSuiButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  color: PropTypes.oneOf([\"white\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\"]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\nexport default SuiButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SuiButton$forwardRef\");\n$RefreshReg$(_c2, \"SuiButton\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/components/SuiButton/index.js"],"names":["forwardRef","PropTypes","SuiButtonRoot","SuiButton","ref","color","variant","size","circular","iconOnly","children","rest","defaultProps","propTypes","oneOf","bool","node","isRequired"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,SAAS,gBAAGH,UAAU,MAC1B,OAAkEI,GAAlE;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA;AAA5C,GAAD;AAAA,MAA0DC,IAA1D;;AAAA,sBACE,QAAC,aAAD,kCACMA,IADN;AAEE,IAAA,GAAG,EAAEP,GAFP;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAEE,OAAO,KAAK,UAAZ,GAAyB,WAAzB,GAAuCA,OAJlD;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,UAAU,EAAE;AAAEF,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,IAAlB;AAAwBC,MAAAA,QAAxB;AAAkCC,MAAAA;AAAlC,KANd;AAAA,cAQGC;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAAA,CAD0B,CAA5B,C,CAeA;;MAfMP,S;AAgBNA,SAAS,CAACS,YAAV,GAAyB;AACvBL,EAAAA,IAAI,EAAE,QADiB;AAEvBD,EAAAA,OAAO,EAAE,WAFc;AAGvBD,EAAAA,KAAK,EAAE,OAHgB;AAIvBG,EAAAA,QAAQ,EAAE,KAJa;AAKvBC,EAAAA,QAAQ,EAAE;AALa,CAAzB,C,CAQA;;AACAN,SAAS,CAACU,SAAV,GAAsB;AACpBN,EAAAA,IAAI,EAAEN,SAAS,CAACa,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CADc;AAEpBR,EAAAA,OAAO,EAAEL,SAAS,CAACa,KAAV,CAAgB,CAAC,MAAD,EAAS,WAAT,EAAsB,UAAtB,EAAkC,UAAlC,CAAhB,CAFW;AAGpBT,EAAAA,KAAK,EAAEJ,SAAS,CAACa,KAAV,CAAgB,CACrB,OADqB,EAErB,SAFqB,EAGrB,WAHqB,EAIrB,MAJqB,EAKrB,SALqB,EAMrB,SANqB,EAOrB,OAPqB,EAQrB,OARqB,EASrB,MATqB,CAAhB,CAHa;AAcpBN,EAAAA,QAAQ,EAAEP,SAAS,CAACc,IAdA;AAepBN,EAAAA,QAAQ,EAAER,SAAS,CAACc,IAfA;AAgBpBL,EAAAA,QAAQ,EAAET,SAAS,CAACe,IAAV,CAAeC;AAhBL,CAAtB;AAmBA,eAAed,SAAf","sourcesContent":["import { forwardRef } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Custom styles for SuiButton\r\nimport SuiButtonRoot from \"./SuiButtonRoot\";\r\n\r\nconst SuiButton = forwardRef(\r\n  ({ color, variant, size, circular, iconOnly, children, ...rest }, ref) => (\r\n    <SuiButtonRoot\r\n      {...rest}\r\n      ref={ref}\r\n      color=\"primary\"\r\n      variant={variant === \"gradient\" ? \"contained\" : variant}\r\n      size={size}\r\n      ownerState={{ color, variant, size, circular, iconOnly }}\r\n    >\r\n      {children}\r\n    </SuiButtonRoot>\r\n  )\r\n);\r\n\r\n// Setting default values for the props of SuiButton\r\nSuiButton.defaultProps = {\r\n  size: \"medium\",\r\n  variant: \"contained\",\r\n  color: \"white\",\r\n  circular: false,\r\n  iconOnly: false,\r\n};\r\n\r\n// Typechecking props for the SuiButton\r\nSuiButton.propTypes = {\r\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\r\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\r\n  color: PropTypes.oneOf([\r\n    \"white\",\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"light\",\r\n    \"dark\",\r\n  ]),\r\n  circular: PropTypes.bool,\r\n  iconOnly: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default SuiButton;\r\n"]},"metadata":{},"sourceType":"module"}