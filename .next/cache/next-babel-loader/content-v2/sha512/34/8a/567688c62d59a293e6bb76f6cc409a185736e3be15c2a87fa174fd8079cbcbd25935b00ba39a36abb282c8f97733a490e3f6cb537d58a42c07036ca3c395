{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\candidates\\\\PersonInfoPartialForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TextField, Box, Typography, MenuItem, Grid } from \"@material-ui/core\";\nimport { FieldArray } from \"formik\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\n\nconst PersonInfoPartialForm = ({\n  title,\n  formik,\n  disabled,\n  isGray,\n  prefix\n}) => {\n  _s();\n\n  var _values$prefix, _touched$prefix, _errors$prefix, _touched$prefix2, _errors$prefix2, _values$prefix2, _touched$prefix3, _errors$prefix3, _touched$prefix4, _errors$prefix4, _values$father, _touched$father, _errors$father, _touched$father2, _errors$father2, _values$mother, _touched$mother, _errors$mother, _touched$mother2, _errors$mother2, _values$prefix3, _values$prefix4, _touched$prefix5, _errors$prefix5, _touched$prefix6, _errors$prefix6, _values$prefix5, _touched$prefix7, _errors$prefix7, _touched$prefix8, _errors$prefix8, _values$prefix6, _touched$prefix9, _errors$prefix9, _touched$prefix10, _errors$prefix10, _values$prefix7, _touched$prefix11, _errors$prefix11, _touched$prefix12, _errors$prefix12, _values$prefix8, _touched$prefix13, _errors$prefix13, _touched$prefix14, _errors$prefix14;\n\n  const {\n    translate\n  } = useTranslation();\n  const style = {\n    bgcolor: isGray ? \"#d3d3d326\" : \"background.paper\",\n    padding: \"15px\",\n    boxShadow: 24,\n    borderRadius: \"20px\",\n    marginVertically: \"15px\"\n  };\n  const sexs = [{\n    id: \"male\",\n    value: translate(\"Male\")\n  }, {\n    id: \"female\",\n    value: translate(\"Female\")\n  }];\n  const phoneTypes = [{\n    id: \"personal\",\n    value: translate(\"Personal\")\n  }, {\n    id: \"family\",\n    value: translate(\"Family\")\n  }];\n  const {\n    values,\n    handleChange,\n    errors,\n    touched,\n    handleBlur\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: style,\n    mb: 2,\n    children: [!!title && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"label\",\n        variant: \"caption\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"First name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.first_name`,\n            name: `${prefix}.first_name`,\n            value: (_values$prefix = values[prefix]) === null || _values$prefix === void 0 ? void 0 : _values$prefix.first_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix = touched[prefix]) === null || _touched$prefix === void 0 ? void 0 : _touched$prefix.first_name) && ((_errors$prefix = errors[prefix]) === null || _errors$prefix === void 0 ? void 0 : _errors$prefix.first_name)),\n            helperText: ((_touched$prefix2 = touched[prefix]) === null || _touched$prefix2 === void 0 ? void 0 : _touched$prefix2.first_name) && ((_errors$prefix2 = errors[prefix]) === null || _errors$prefix2 === void 0 ? void 0 : _errors$prefix2.first_name),\n            placeholder: translate(\"First name\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Last name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.last_name`,\n            name: `${prefix}.last_name`,\n            value: (_values$prefix2 = values[prefix]) === null || _values$prefix2 === void 0 ? void 0 : _values$prefix2.last_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix3 = touched[prefix]) === null || _touched$prefix3 === void 0 ? void 0 : _touched$prefix3.last_name) && ((_errors$prefix3 = errors[prefix]) === null || _errors$prefix3 === void 0 ? void 0 : _errors$prefix3.last_name)),\n            helperText: ((_touched$prefix4 = touched[prefix]) === null || _touched$prefix4 === void 0 ? void 0 : _touched$prefix4.last_name) && ((_errors$prefix4 = errors[prefix]) === null || _errors$prefix4 === void 0 ? void 0 : _errors$prefix4.last_name),\n            placeholder: translate(\"Last name\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Father\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `father.first_name`,\n            name: `father.first_name`,\n            value: (_values$father = values.father) === null || _values$father === void 0 ? void 0 : _values$father.first_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$father = touched.father) === null || _touched$father === void 0 ? void 0 : _touched$father.first_name) && ((_errors$father = errors.father) === null || _errors$father === void 0 ? void 0 : _errors$father.first_name)),\n            helperText: ((_touched$father2 = touched.father) === null || _touched$father2 === void 0 ? void 0 : _touched$father2.first_name) && ((_errors$father2 = errors.father) === null || _errors$father2 === void 0 ? void 0 : _errors$father2.first_name),\n            placeholder: translate(\"Father\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Mother\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `mother.first_name`,\n            name: `mother.first_name`,\n            value: (_values$mother = values.mother) === null || _values$mother === void 0 ? void 0 : _values$mother.first_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$mother = touched.mother) === null || _touched$mother === void 0 ? void 0 : _touched$mother.first_name) && ((_errors$mother = errors.mother) === null || _errors$mother === void 0 ? void 0 : _errors$mother.first_name)),\n            helperText: ((_touched$mother2 = touched.mother) === null || _touched$mother2 === void 0 ? void 0 : _touched$mother2.first_name) && ((_errors$mother2 = errors.mother) === null || _errors$mother2 === void 0 ? void 0 : _errors$mother2.first_name),\n            placeholder: translate(\"Mother\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Registeration number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: \"registeration_number\",\n            name: \"registeration_number\",\n            value: values.registeration_number,\n            onBlur: handleBlur,\n            error: Boolean(touched.registeration_number && errors.registeration_number),\n            helperText: touched.registeration_number && errors.registeration_number,\n            placeholder: translate(\"Registeration number\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        style: prefix != \"person\" ? {\n          display: \"none\"\n        } : {},\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Gender\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"select\",\n            id: `${prefix}.sex`,\n            name: `${prefix}.sex`,\n            select: true,\n            value: (_values$prefix3 = values[prefix]) === null || _values$prefix3 === void 0 ? void 0 : _values$prefix3.sex,\n            onChange: handleChange(`${prefix}.sex`),\n            onBlur: handleBlur,\n            placeholder: translate(\"Gender\"),\n            fullWidth: true,\n            children: sexs.map(sex => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: sex.id,\n              children: sex.value\n            }, sex.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Nationality\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.nationality`,\n            name: `${prefix}.nationality`,\n            value: (_values$prefix4 = values[prefix]) === null || _values$prefix4 === void 0 ? void 0 : _values$prefix4.nationality,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix5 = touched[prefix]) === null || _touched$prefix5 === void 0 ? void 0 : _touched$prefix5.nationality) && ((_errors$prefix5 = errors[prefix]) === null || _errors$prefix5 === void 0 ? void 0 : _errors$prefix5.nationality)),\n            helperText: ((_touched$prefix6 = touched[prefix]) === null || _touched$prefix6 === void 0 ? void 0 : _touched$prefix6.nationality) && ((_errors$prefix6 = errors[prefix]) === null || _errors$prefix6 === void 0 ? void 0 : _errors$prefix6.nationality),\n            placeholder: translate(\"Nationality\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"National number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.national_number`,\n            name: `${prefix}.national_number`,\n            value: (_values$prefix5 = values[prefix]) === null || _values$prefix5 === void 0 ? void 0 : _values$prefix5.national_number,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix7 = touched[prefix]) === null || _touched$prefix7 === void 0 ? void 0 : _touched$prefix7.national_number) && ((_errors$prefix7 = errors[prefix]) === null || _errors$prefix7 === void 0 ? void 0 : _errors$prefix7.national_number)),\n            helperText: ((_touched$prefix8 = touched[prefix]) === null || _touched$prefix8 === void 0 ? void 0 : _touched$prefix8.national_number) && ((_errors$prefix8 = errors[prefix]) === null || _errors$prefix8 === void 0 ? void 0 : _errors$prefix8.national_number),\n            placeholder: translate(\"National number\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Passport First Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.passport_first_name`,\n            name: `${prefix}.passport_first_name`,\n            value: (_values$prefix6 = values[prefix]) === null || _values$prefix6 === void 0 ? void 0 : _values$prefix6.passport_first_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix9 = touched[prefix]) === null || _touched$prefix9 === void 0 ? void 0 : _touched$prefix9.passport_first_name) && ((_errors$prefix9 = errors[prefix]) === null || _errors$prefix9 === void 0 ? void 0 : _errors$prefix9.passport_first_name)),\n            helperText: ((_touched$prefix10 = touched[prefix]) === null || _touched$prefix10 === void 0 ? void 0 : _touched$prefix10.passport_first_name) && ((_errors$prefix10 = errors[prefix]) === null || _errors$prefix10 === void 0 ? void 0 : _errors$prefix10.passport_first_name),\n            placeholder: translate(\"Passport First Name\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Passport Last Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.passport_last_name`,\n            name: `${prefix}.passport_last_name`,\n            value: (_values$prefix7 = values[prefix]) === null || _values$prefix7 === void 0 ? void 0 : _values$prefix7.passport_last_name,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix11 = touched[prefix]) === null || _touched$prefix11 === void 0 ? void 0 : _touched$prefix11.passport_last_name) && ((_errors$prefix11 = errors[prefix]) === null || _errors$prefix11 === void 0 ? void 0 : _errors$prefix11.passport_last_name)),\n            helperText: ((_touched$prefix12 = touched[prefix]) === null || _touched$prefix12 === void 0 ? void 0 : _touched$prefix12.passport_last_name) && ((_errors$prefix12 = errors[prefix]) === null || _errors$prefix12 === void 0 ? void 0 : _errors$prefix12.passport_last_name),\n            placeholder: translate(\"Passport Last Name\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            ml: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"label\",\n              variant: \"caption\",\n              children: translate(\"Passport Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: disabled,\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            id: `${prefix}.passport_number`,\n            name: `${prefix}.passport_number`,\n            value: (_values$prefix8 = values[prefix]) === null || _values$prefix8 === void 0 ? void 0 : _values$prefix8.passport_number,\n            onBlur: handleBlur,\n            error: Boolean(((_touched$prefix13 = touched[prefix]) === null || _touched$prefix13 === void 0 ? void 0 : _touched$prefix13.passport_number) && ((_errors$prefix13 = errors[prefix]) === null || _errors$prefix13 === void 0 ? void 0 : _errors$prefix13.passport_number)),\n            helperText: ((_touched$prefix14 = touched[prefix]) === null || _touched$prefix14 === void 0 ? void 0 : _touched$prefix14.passport_number) && ((_errors$prefix14 = errors[prefix]) === null || _errors$prefix14 === void 0 ? void 0 : _errors$prefix14.passport_number),\n            placeholder: translate(\"Passport Number\"),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 1,\n        ml: 0.5,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"label\",\n          variant: \"caption\",\n          children: translate(\"Phones\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: `${prefix}.phones`,\n        render: arrayHelpers => {\n          var _values$prefix9, _values$prefix10, _values$prefix11;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_values$prefix9 = values[prefix]) !== null && _values$prefix9 !== void 0 && _values$prefix9.phones && ((_values$prefix10 = values[prefix]) === null || _values$prefix10 === void 0 ? void 0 : _values$prefix10.phones.length) > 0 ? (_values$prefix11 = values[prefix]) === null || _values$prefix11 === void 0 ? void 0 : _values$prefix11.phones.map((phone, index) => {\n              var _touched$prefix15, _errors$prefix15, _touched$prefix16, _errors$prefix16;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange(`${prefix}.phones.${index}.phone`),\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: `${prefix}.phones.${index}.phone`,\n                      name: `${prefix}.phones.${index}.phone`,\n                      value: phone.phone,\n                      onBlur: handleBlur,\n                      error: Boolean(((_touched$prefix15 = touched[prefix]) === null || _touched$prefix15 === void 0 ? void 0 : _touched$prefix15.phones) && ((_errors$prefix15 = errors[prefix]) === null || _errors$prefix15 === void 0 ? void 0 : _errors$prefix15.phones)),\n                      helperText: ((_touched$prefix16 = touched[prefix]) === null || _touched$prefix16 === void 0 ? void 0 : _touched$prefix16.phones) && ((_errors$prefix16 = errors[prefix]) === null || _errors$prefix16 === void 0 ? void 0 : _errors$prefix16.phones),\n                      placeholder: translate(\"Phone\") //fullWidth\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: `${prefix}.phones.${index}.type`,\n                      name: `${prefix}.phones.${index}.type`,\n                      select: true,\n                      value: phone.type,\n                      onChange: handleChange(`${prefix}.phones.${index}.type`),\n                      onBlur: handleBlur,\n                      placeholder: \"Phone type\",\n                      fullWidth: true,\n                      children: phoneTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: type.id,\n                        children: type.value\n                      }, type.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 23\n                  }, this), !disabled && /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: [/*#__PURE__*/_jsxDEV(SuiButton, {\n                      style: {\n                        margin: 5\n                      },\n                      color: \"error\",\n                      onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                      ,\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n                      style: {\n                        margin: 5\n                      },\n                      color: \"primary\",\n                      onClick: () => arrayHelpers.insert(index + 1, {\n                        phone: \"\",\n                        type: \"\"\n                      }) // insert an empty string at a position\n                      ,\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(SuiButton, {\n                variant: \"gradient\",\n                color: \"primary\",\n                onClick: () => arrayHelpers.push({\n                  name: \"\",\n                  percentage: 0\n                }),\n                children: translate(\"Add a phone\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonInfoPartialForm, \"+KUnserEgpRFEcwLYMO5XgI1jcQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PersonInfoPartialForm;\nexport default PersonInfoPartialForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonInfoPartialForm\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/candidates/PersonInfoPartialForm.tsx"],"names":["React","TextField","Box","Typography","MenuItem","Grid","FieldArray","SuiButton","useTranslation","PersonInfoPartialForm","title","formik","disabled","isGray","prefix","translate","style","bgcolor","padding","boxShadow","borderRadius","marginVertically","sexs","id","value","phoneTypes","values","handleChange","errors","touched","handleBlur","first_name","Boolean","last_name","father","mother","registeration_number","display","sex","map","nationality","national_number","passport_first_name","passport_last_name","passport_number","arrayHelpers","phones","length","phone","index","type","margin","remove","insert","push","name","percentage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { TextField, Box, Typography, MenuItem, Grid } from \"@material-ui/core\";\r\nimport { FieldArray } from \"formik\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\n\r\ninterface IPersonInfoPartialProps {\r\n  title: string;\r\n  formik: any;\r\n  disabled: boolean;\r\n  isGray: boolean;\r\n  prefix: string;\r\n}\r\nconst PersonInfoPartialForm: React.FC<IPersonInfoPartialProps> = ({\r\n  title,\r\n  formik,\r\n  disabled,\r\n  isGray,\r\n  prefix,\r\n}) => {\r\n  const { translate } = useTranslation();\r\n  const style = {\r\n    bgcolor: isGray ? \"#d3d3d326\" : \"background.paper\",\r\n    padding: \"15px\",\r\n    boxShadow: 24,\r\n    borderRadius: \"20px\",\r\n    marginVertically: \"15px\",\r\n  };\r\n  const sexs = [\r\n    {\r\n      id: \"male\",\r\n      value: translate(\"Male\"),\r\n    },\r\n    {\r\n      id: \"female\",\r\n      value: translate(\"Female\"),\r\n    },\r\n  ];\r\n\r\n  const phoneTypes = [\r\n    {\r\n      id: \"personal\",\r\n      value: translate(\"Personal\"),\r\n    },\r\n    {\r\n      id: \"family\",\r\n      value: translate(\"Family\"),\r\n    },\r\n  ];\r\n\r\n  const { values, handleChange, errors, touched, handleBlur } = formik;\r\n  return (\r\n    <Box sx={style} mb={2}>\r\n      {!!title && (\r\n        <Box mb={2}>\r\n          <Typography component=\"label\" variant=\"caption\">\r\n            <b>{title}</b>\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"First name\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              disabled={disabled}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              id={`${prefix}.first_name`}\r\n              name={`${prefix}.first_name`}\r\n              value={values[prefix]?.first_name}\r\n              onBlur={handleBlur}\r\n              error={Boolean(\r\n                touched[prefix]?.first_name && errors[prefix]?.first_name\r\n              )}\r\n              helperText={\r\n                touched[prefix]?.first_name && errors[prefix]?.first_name\r\n              }\r\n              placeholder={translate(\"First name\")}\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Last name\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              disabled={disabled}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              id={`${prefix}.last_name`}\r\n              name={`${prefix}.last_name`}\r\n              value={values[prefix]?.last_name}\r\n              onBlur={handleBlur}\r\n              error={Boolean(\r\n                touched[prefix]?.last_name && errors[prefix]?.last_name\r\n              )}\r\n              helperText={\r\n                touched[prefix]?.last_name && errors[prefix]?.last_name\r\n              }\r\n              placeholder={translate(\"Last name\")}\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Father\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`father.first_name`}\r\n                name={`father.first_name`}\r\n                value={values.father?.first_name}\r\n                onBlur={handleBlur}\r\n                error={Boolean(\r\n                    touched.father?.first_name && errors.father?.first_name\r\n                )}\r\n                helperText={\r\n                    touched.father?.first_name && errors.father?.first_name\r\n                }\r\n                placeholder={translate(\"Father\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Mother\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id={`mother.first_name`}\r\n                name={`mother.first_name`}\r\n                value={values.mother?.first_name}\r\n                onBlur={handleBlur}\r\n                error={Boolean(\r\n                    touched.mother?.first_name && errors.mother?.first_name\r\n                )}\r\n                helperText={\r\n                    touched.mother?.first_name && errors.mother?.first_name\r\n                }\r\n                placeholder={translate(\"Mother\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Registeration number\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n                disabled={disabled}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                id=\"registeration_number\"\r\n                name=\"registeration_number\"\r\n                value={values.registeration_number}\r\n                onBlur={handleBlur}\r\n                error={Boolean(touched.registeration_number && errors.registeration_number)}\r\n                helperText={touched.registeration_number && errors.registeration_number}\r\n                placeholder={translate(\"Registeration number\")}\r\n                fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3} style={prefix != \"person\" ? { display: \"none\" } : {}}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Gender\")}\r\n              </Typography>\r\n            </Box>\r\n\r\n            <TextField\r\n              disabled={disabled}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"select\"\r\n              id={`${prefix}.sex`}\r\n              name={`${prefix}.sex`}\r\n              select={true}\r\n              value={values[prefix]?.sex}\r\n              onChange={handleChange(`${prefix}.sex`)}\r\n              onBlur={handleBlur}\r\n              placeholder={translate(\"Gender\")}\r\n              fullWidth\r\n            >\r\n              {sexs.map((sex) => (\r\n                <MenuItem key={sex.id} value={sex.id}>\r\n                  {sex.value}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Nationality\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              disabled={disabled}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              id={`${prefix}.nationality`}\r\n              name={`${prefix}.nationality`}\r\n              value={values[prefix]?.nationality}\r\n              onBlur={handleBlur}\r\n              error={Boolean(\r\n                touched[prefix]?.nationality && errors[prefix]?.nationality\r\n              )}\r\n              helperText={\r\n                touched[prefix]?.nationality && errors[prefix]?.nationality\r\n              }\r\n              placeholder={translate(\"Nationality\")}\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"National number\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              disabled={disabled}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              id={`${prefix}.national_number`}\r\n              name={`${prefix}.national_number`}\r\n              value={values[prefix]?.national_number}\r\n              onBlur={handleBlur}\r\n              error={Boolean(\r\n                touched[prefix]?.national_number &&\r\n                  errors[prefix]?.national_number\r\n              )}\r\n              helperText={\r\n                touched[prefix]?.national_number &&\r\n                errors[prefix]?.national_number\r\n              }\r\n              placeholder={translate(\"National number\")}\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={4}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Passport First Name\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              disabled={disabled}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              id={`${prefix}.passport_first_name`}\r\n              name={`${prefix}.passport_first_name`}\r\n              value={values[prefix]?.passport_first_name}\r\n              onBlur={handleBlur}\r\n              error={Boolean(\r\n                touched[prefix]?.passport_first_name &&\r\n                  errors[prefix]?.passport_first_name\r\n              )}\r\n              helperText={\r\n                touched[prefix]?.passport_first_name &&\r\n                errors[prefix]?.passport_first_name\r\n              }\r\n              placeholder={translate(\"Passport First Name\")}\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={4}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Passport Last Name\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              disabled={disabled}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              id={`${prefix}.passport_last_name`}\r\n              name={`${prefix}.passport_last_name`}\r\n              value={values[prefix]?.passport_last_name}\r\n              onBlur={handleBlur}\r\n              error={Boolean(\r\n                touched[prefix]?.passport_last_name &&\r\n                  errors[prefix]?.passport_last_name\r\n              )}\r\n              helperText={\r\n                touched[prefix]?.passport_last_name &&\r\n                errors[prefix]?.passport_last_name\r\n              }\r\n              placeholder={translate(\"Passport Last Name\")}\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item md={4}>\r\n          <Box mb={2}>\r\n            <Box mb={1} ml={0.5}>\r\n              <Typography component=\"label\" variant=\"caption\">\r\n                {translate(\"Passport Number\")}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              disabled={disabled}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              id={`${prefix}.passport_number`}\r\n              name={`${prefix}.passport_number`}\r\n              value={values[prefix]?.passport_number}\r\n              onBlur={handleBlur}\r\n              error={Boolean(\r\n                touched[prefix]?.passport_number &&\r\n                  errors[prefix]?.passport_number\r\n              )}\r\n              helperText={\r\n                touched[prefix]?.passport_number &&\r\n                errors[prefix]?.passport_number\r\n              }\r\n              placeholder={translate(\"Passport Number\")}\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mb={2}>\r\n        <Box mb={1} ml={0.5}>\r\n          <Typography component=\"label\" variant=\"caption\">\r\n            {translate(\"Phones\")}\r\n          </Typography>\r\n        </Box>\r\n        <FieldArray\r\n          name={`${prefix}.phones`}\r\n          render={(arrayHelpers) => (\r\n            <div>\r\n              {values[prefix]?.phones && values[prefix]?.phones.length > 0 ? (\r\n                values[prefix]?.phones.map((phone, index) => (\r\n                  <div key={index}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          disabled={disabled}\r\n                          onChange={handleChange(\r\n                            `${prefix}.phones.${index}.phone`\r\n                          )}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id={`${prefix}.phones.${index}.phone`}\r\n                          name={`${prefix}.phones.${index}.phone`}\r\n                          value={phone.phone}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched[prefix]?.phones && errors[prefix]?.phones\r\n                          )}\r\n                          helperText={\r\n                            touched[prefix]?.phones && errors[prefix]?.phones\r\n                          }\r\n                          placeholder={translate(\"Phone\")}\r\n                          //fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          disabled={disabled}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"select\"\r\n                          id={`${prefix}.phones.${index}.type`}\r\n                          name={`${prefix}.phones.${index}.type`}\r\n                          select={true}\r\n                          value={phone.type}\r\n                          onChange={handleChange(\r\n                            `${prefix}.phones.${index}.type`\r\n                          )}\r\n                          onBlur={handleBlur}\r\n                          placeholder=\"Phone type\"\r\n                          fullWidth\r\n                        >\r\n                          {phoneTypes.map((type) => (\r\n                            <MenuItem key={type.id} value={type.id}>\r\n                              {type.value}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </TextField>\r\n                      </Grid>\r\n\r\n                      {!disabled && (\r\n                        <Grid item xs={4}>\r\n                          <SuiButton\r\n                            style={{ margin: 5 }}\r\n                            color=\"error\"\r\n                            onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                          >\r\n                            -\r\n                          </SuiButton>\r\n                          <SuiButton\r\n                            style={{ margin: 5 }}\r\n                            color=\"primary\"\r\n                            onClick={() =>\r\n                              arrayHelpers.insert(index + 1, {\r\n                                phone: \"\",\r\n                                type: \"\",\r\n                              })\r\n                            } // insert an empty string at a position\r\n                          >\r\n                            +\r\n                          </SuiButton>\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <React.Fragment>\r\n                  <SuiButton\r\n                    variant=\"gradient\"\r\n                    color=\"primary\"\r\n                    onClick={() =>\r\n                      arrayHelpers.push({ name: \"\", percentage: 0 })\r\n                    }\r\n                  >\r\n                    {/* show this when user has removed all phones from the list */}\r\n                    {translate(\"Add a phone\")}\r\n                  </SuiButton>\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n          )}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PersonInfoPartialForm;\r\n"]},"metadata":{},"sourceType":"module"}