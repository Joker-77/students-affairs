{"ast":null,"code":"import apiConnector from \"./TokenizedApiClient\";\nexport default class PlanService {\n  static async GetAll() {\n    const listUrl = process.env.LIST_PROGRAMS_URL;\n    return await apiConnector.get(listUrl).then(response => {\n      if (response && response.data) {\n        return response.data;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async AddCourse(payload) {\n    const listUrl = process.env.ADD_PROGRAMS_URL;\n    return await apiConnector.post(listUrl, payload).then(response => {\n      if (response && response.data) {\n        return response.data;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async GetProgramCourses(programId, yearId, eduYear) {\n    const listUrl = process.env.LIST_PLAN_URL;\n    return await apiConnector.get(listUrl + `?program_id=${programId}&year_id=${yearId}&edu_year_id=${eduYear}`).then(response => {\n      if (response && response.data) {\n        return response.data;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async DeleteCourse(_id) {\n    const delUrl = process.env.DELETE_PLAN_URL;\n    return await apiConnector.post(delUrl, {\n      id: parseInt(_id)\n    }).then(response => {\n      if (response && response.data) {\n        return response.data;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}