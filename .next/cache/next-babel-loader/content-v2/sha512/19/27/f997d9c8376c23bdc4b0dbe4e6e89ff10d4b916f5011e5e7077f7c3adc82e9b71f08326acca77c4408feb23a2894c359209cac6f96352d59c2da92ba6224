{"ast":null,"code":"import apiConnector from \"./TokenizedApiClient\";\nexport default class CandidateService {\n  static async GetAll() {\n    const listUrl = process.env.LIST_CANDIDATE_URL;\n    return await apiConnector.get(listUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async AddAfterSearch(payload) {\n    const addUrl = process.env.SEARCH_ADD_CANDIDATE_URL;\n    return await apiConnector.post(addUrl, payload).then(response => {\n      var _response$data;\n\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        let result = response === null || response === void 0 ? void 0 : response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async delete(id) {\n    return await apiConnector.post('/canidate/delete/id=', payload).then(response => {\n      var _response$data2;\n\n      if (response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.success) {\n        let result = response === null || response === void 0 ? void 0 : response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Add(payload) {\n    const addUrl = process.env.ADD_CANDIDATE_URL;\n    return await apiConnector.post(addUrl, payload).then(response => {\n      var _response$data3;\n\n      if (response !== null && response !== void 0 && (_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.success) {\n        let result = response === null || response === void 0 ? void 0 : response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Search(payload) {\n    const searchUrl = process.env.SEARCH_CANDIDATE_URL;\n    return await apiConnector.get(searchUrl, {\n      params: payload\n    }).then(response => {\n      var _response$data4;\n\n      if (response !== null && response !== void 0 && (_response$data4 = response.data) !== null && _response$data4 !== void 0 && _response$data4.success) {\n        let result = response === null || response === void 0 ? void 0 : response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Edit(payload) {\n    const editUrl = process.env.EDIT_CANDIDATE_URL;\n    return await apiConnector.post(editUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  static async Get() {\n    const detailUrl = process.env.DETAILS_CANDIDATE_URL;\n    return await apiConnector.get(detailUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n}","map":{"version":3,"sources":["F:/StudentAffairs/students/students/Services/CandidateService.tsx"],"names":["apiConnector","CandidateService","GetAll","listUrl","process","env","LIST_CANDIDATE_URL","get","then","response","data","success","result","catch","error","AddAfterSearch","payload","addUrl","SEARCH_ADD_CANDIDATE_URL","post","delete","id","Add","ADD_CANDIDATE_URL","Search","searchUrl","SEARCH_CANDIDATE_URL","params","Edit","editUrl","EDIT_CANDIDATE_URL","Get","detailUrl","DETAILS_CANDIDATE_URL","console","log"],"mappings":"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","sourcesContent":["import apiConnector from \"./TokenizedApiClient\";\r\nimport { ApiResponse } from \"../Models/ApiResponse/ApiResponse\";\r\n\r\nexport default class CandidateService {\r\n  static async GetAll(): Promise<ApiResponse> {\r\n    const listUrl = process.env.LIST_CANDIDATE_URL as string;\r\n    return await apiConnector\r\n      .get(listUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async AddAfterSearch(payload): Promise<ApiResponse> {\r\n    const addUrl = process.env.SEARCH_ADD_CANDIDATE_URL as string;\r\n    return await apiConnector\r\n      .post(addUrl, payload)\r\n      .then((response) => {\r\n        if (response?.data?.success) {\r\n          let result = response?.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n  static async delete(id): promise<ApiResponse> {\r\n    return await apiConnector\r\n      .post('/canidate/delete/id=', payload)\r\n      .then((response) => {\r\n        if (response?.data?.success) {\r\n          let result = response?.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n  static async Add(payload): Promise<ApiResponse> {\r\n    const addUrl = process.env.ADD_CANDIDATE_URL as string;\r\n    return await apiConnector\r\n      .post(addUrl, payload)\r\n      .then((response) => {\r\n        if (response?.data?.success) {\r\n          let result = response?.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Search(payload): Promise<ApiResponse> {\r\n    const searchUrl = process.env.SEARCH_CANDIDATE_URL as string;\r\n    return await apiConnector\r\n      .get(searchUrl, {\r\n        params: payload,\r\n      })\r\n      .then((response) => {\r\n        if (response?.data?.success) {\r\n          let result = response?.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Edit(payload): Promise<ApiResponse> {\r\n    const editUrl = process.env.EDIT_CANDIDATE_URL as string;\r\n    return await apiConnector\r\n      .post(editUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Get(): Promise<ApiResponse> {\r\n    const detailUrl = process.env.DETAILS_CANDIDATE_URL as string;\r\n    return await apiConnector\r\n      .get(detailUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}