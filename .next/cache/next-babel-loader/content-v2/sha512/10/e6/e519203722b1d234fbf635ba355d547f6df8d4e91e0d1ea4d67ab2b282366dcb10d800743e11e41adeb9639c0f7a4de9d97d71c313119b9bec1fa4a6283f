{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\marks\\\\add-mark.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport GridContainer from '../../../../components/Grid/GridContainer';\nimport { FormControl, MenuItem, InputLabel, Select, Table, TableHead, TableCell, TableBody } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem.js';\nimport ExamService from '../../../../Services/ExamService';\nimport PlanService from '../../../../Services/PlanService';\nimport EduYearService from '../../../../Services/EduYearService';\nimport MarkService from '../../../../Services/MarkService';\nexport const AddMark = () => {\n  const {\n    0: courses,\n    1: setCourses\n  } = useState([]);\n  const {\n    0: course,\n    1: setCourse\n  } = useState();\n  const {\n    0: eduYears,\n    1: setEduYears\n  } = useState([]);\n  const {\n    0: selectedEduYear,\n    1: setEduYear\n  } = useState(null); // Programs\n\n  const {\n    0: programs,\n    1: setPrograms\n  } = useState([]);\n  const {\n    0: program,\n    1: setProgram\n  } = useState(null);\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    var _inputLabel$current;\n\n    setLabelWidth(inputLabel === null || inputLabel === void 0 ? void 0 : (_inputLabel$current = inputLabel.current) === null || _inputLabel$current === void 0 ? void 0 : _inputLabel$current.offsetWidth);\n  }, []);\n  useEffect(() => {\n    PlanService.GetAll().then(programs => {\n      setPrograms(programs.result);\n      EduYearService.GetYears(\"\").then(years => {\n        setEduYears(years.result);\n        setPrograms(programs.result);\n      }).catch(error => {\n        console.error(\"error\", error);\n      });\n    }).catch(e => {});\n  }, []);\n  const {\n    0: loadCourses,\n    1: setLoadCourses\n  } = useState(false);\n  const {\n    0: rows,\n    1: setRows\n  } = useState([]);\n\n  const changeEduYear = id => {\n    setEduYear(id);\n    setLoadCourses(true);\n    ExamService.GetAllCourses(program, id).then(resp => {\n      setCourses(resp.result);\n      setLoadCourses(false);\n    }).catch(error => {});\n  };\n\n  const changeCourse = id => {\n    setCourse(id);\n    MarkService.GetAllExams(course, selectedEduYear).then(e => {\n      setRows(e.result);\n    });\n  };\n\n  const changeProgram = id => {\n    setProgram(id);\n  };\n\n  const handleChangeCourse = () => {};\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        variant: \"filled\",\n        size: \"small\",\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0628\\u0631\\u0646\\u0627\\u0645\\u062C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: program,\n          label: \"program\",\n          onChange: e => changeProgram(e.target.value),\n          children: programs === null || programs === void 0 ? void 0 : programs.map(program => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: program.id,\n            children: program.name\n          }, program.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        variant: \"filled\",\n        size: \"small\",\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0633\\u0646\\u0629 \\u0627\\u0644\\u062F\\u0631\\u0627\\u0633\\u064A\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: selectedEduYear,\n          label: \"eduYears\",\n          onChange: e => changeEduYear(e.target.value),\n          children: eduYears === null || eduYears === void 0 ? void 0 : eduYears.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: year.id,\n            children: year.year\n          }, year.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        variant: \"filled\",\n        size: \"small\",\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0645\\u0642\\u0631\\u0651\\u0631\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          disabled: loadCourses,\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: course,\n          label: \"courses\",\n          onChange: e => changeCourse(e.target.value),\n          children: courses.map(course => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: course.edu_course_id,\n            children: course.ar_name\n          }, course.edu_course_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0648\\u0627\\u0642\\u0639\\u0629\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"\\u062A\\u0627\\u0631\\u064A\\u062E \\u0627\\u0644\\u0648\\u0627\\u0642\\u0639\\u0629\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => {\n            return;\n            {\n              /*#__PURE__*/\n              _jsxDEV(TableCell, {\n                children: row\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n};","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/marks/add-mark.tsx"],"names":["React","useEffect","useState","GridContainer","FormControl","MenuItem","InputLabel","Select","Table","TableHead","TableCell","TableBody","GridItem","ExamService","PlanService","EduYearService","MarkService","AddMark","courses","setCourses","course","setCourse","eduYears","setEduYears","selectedEduYear","setEduYear","programs","setPrograms","program","setProgram","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","GetAll","then","result","GetYears","years","catch","error","console","e","loadCourses","setLoadCourses","rows","setRows","changeEduYear","id","GetAllCourses","resp","changeCourse","GetAllExams","changeProgram","handleChangeCourse","target","value","map","name","year","edu_course_id","ar_name","row"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport GridContainer from '../../../../components/Grid/GridContainer';\r\nimport { FormControl, MenuItem, OutlinedInput, InputLabel, Select, Table, TableHead, TableCell, TableBody } from '@material-ui/core';\r\nimport GridItem from 'components/Grid/GridItem.js';\r\nimport ExamService from '../../../../Services/ExamService';\r\nimport PlanService from '../../../../Services/PlanService';\r\nimport EduYearService from '../../../../Services/EduYearService';\r\nimport MarkService from '../../../../Services/MarkService';\r\n\r\ninterface IAddMarkProps { }\r\nexport const AddMark: React.FC<IAddMarkProps> = () => {\r\n\r\n    const [courses, setCourses] = useState([]);\r\n    const [course, setCourse] = useState();\r\n\r\n    const [eduYears, setEduYears] = useState([]);\r\n    const [selectedEduYear, setEduYear] = useState(null);\r\n\r\n    // Programs\r\n    const [programs, setPrograms] = useState([]);\r\n    const [program, setProgram] = useState(null);\r\n\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel ?.current ?.offsetWidth);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        PlanService.GetAll()\r\n            .then((programs) => {\r\n                setPrograms(programs.result);\r\n                EduYearService.GetYears(\"\")\r\n                    .then((years) => {\r\n                        setEduYears(years.result);\r\n                        setPrograms(programs.result);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"error\", error);\r\n                    });\r\n            }).catch((e) => { });\r\n    }, []);\r\n    const [loadCourses, setLoadCourses] = useState(false);\r\n    const [rows, setRows] = useState([]);\r\n    const changeEduYear = (id) => {\r\n        setEduYear(id);\r\n        setLoadCourses(true);\r\n        ExamService.GetAllCourses(program, id)\r\n            .then((resp) => {\r\n                setCourses(resp.result);\r\n                setLoadCourses(false);\r\n            })\r\n            .catch((error) => { });\r\n    };\r\n    const changeCourse = (id) => {\r\n        setCourse(id);\r\n        MarkService.GetAllExams(course, selectedEduYear).then(e => {\r\n            setRows(e.result);\r\n        })\r\n    };\r\n    const changeProgram = (id) => {\r\n        setProgram(id);\r\n    };\r\n    const handleChangeCourse = () => { }\r\n    return <GridContainer>\r\n        <GridItem md={2}>\r\n            <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n                <InputLabel id=\"demo-simple-select-label\">البرنامج</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={program}\r\n                    label=\"program\"\r\n                    onChange={(e) => changeProgram(e.target.value)}\r\n                >\r\n                    {programs ?.map((program) => (\r\n                        <MenuItem key={program.id} value={program.id}>\r\n                            {program.name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </GridItem>\r\n        <GridItem md={2}>\r\n            <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                    السنة الدراسية\r\n            </InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={selectedEduYear}\r\n                    label=\"eduYears\"\r\n                    onChange={(e) => changeEduYear(e.target.value)}\r\n                >\r\n                    {eduYears ?.map((year) => (\r\n                        <MenuItem key={year.id} value={year.id}>\r\n                            {year.year}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </GridItem>\r\n        <GridItem md={2}>\r\n            <FormControl fullWidth variant=\"filled\" size=\"small\" size=\"small\">\r\n                <InputLabel id=\"demo-simple-select-label\">المقرّر</InputLabel>\r\n                <Select\r\n                    disabled={loadCourses}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={course}\r\n                    label=\"courses\"\r\n                    onChange={(e) => changeCourse(e.target.value)}\r\n                >\r\n                    {courses.map((course) => (\r\n                        <MenuItem\r\n                            key={course.edu_course_id}\r\n                            value={course.edu_course_id}\r\n                        >\r\n                            {course.ar_name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </GridItem>\r\n        <GridContainer>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableCell>نوع الواقعة</TableCell>\r\n                    <TableCell>تاريخ الواقعة</TableCell>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        rows.map(row => {\r\n                            return\r\n                            {\r\n                                <TableCell>{row}</TableCell>\r\n                            }\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </GridContainer>\r\n\r\n    </GridContainer>\r\n}"]},"metadata":{},"sourceType":"module"}