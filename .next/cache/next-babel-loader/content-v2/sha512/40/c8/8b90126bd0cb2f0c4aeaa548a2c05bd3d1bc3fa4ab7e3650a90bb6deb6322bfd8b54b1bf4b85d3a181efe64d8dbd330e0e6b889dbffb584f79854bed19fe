{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport SuiButton from \"../SuiButton\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../Utility/Translations/useTranslation\";\nimport { Box, Button, Dialog, DialogActions, DialogTitle, IconButton, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport ActionTable from \"../MaterialTable/ActionTable\";\nimport { toast } from \"react-toastify\";\nimport Placeholder from \"../../Utility/Placeholders\";\nimport GridContainer from \"../Grid/GridContainer\";\nimport GridItem from \"../Grid/GridItem\";\nimport TeacherService from \"../../Services/TeacherService\";\nexport var AssignedTeachers = function AssignedTeachers(_ref) {\n  var planData = _ref.planData,\n      refresh = _ref.refresh;\n  var router = useRouter();\n\n  var _useTranslation = useTranslation(),\n      translate = _useTranslation.translate;\n\n  var _useState = useState(null),\n      deleteId = _useState[0],\n      setDeleteId = _useState[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      confirmDelete = _React$useState2[0],\n      setConfirmDelete = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      assignedTeachers = _React$useState4[0],\n      setAssignedTeachers = _React$useState4[1];\n\n  var tableRef = useRef();\n\n  var _useState2 = useState([]),\n      teachers = _useState2[0],\n      setTeachers = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var fetch = function fetch() {\n    TeacherService.GetAll().then(function (res) {\n      setTeachers(res.result);\n\n      if (planData.id && planData.edu_year_id) {\n        TeacherService.GetTeachersAssignments(planData.id, planData.edu_year_id).then(function (resp) {\n          if (resp.result != null && resp.result.length > 0) {\n            var _assignedTeachers = resp.result.map(function (entity) {\n              var _res$result, _teacher$person, _teacher$person2;\n\n              var teacher = (_res$result = res.result) === null || _res$result === void 0 ? void 0 : _res$result.find(function (e) {\n                return e.id == (entity === null || entity === void 0 ? void 0 : entity.teacher_id);\n              });\n              return {\n                id: entity.id,\n                teacher_id: entity.teacher_id,\n                teacher: \"\".concat(teacher === null || teacher === void 0 ? void 0 : teacher.prefix_name, \" \\n                                \").concat(teacher === null || teacher === void 0 ? void 0 : (_teacher$person = teacher.person) === null || _teacher$person === void 0 ? void 0 : _teacher$person.first_name, \" \\n                                \").concat(teacher === null || teacher === void 0 ? void 0 : (_teacher$person2 = teacher.person) === null || _teacher$person2 === void 0 ? void 0 : _teacher$person2.last_name),\n                theo: \"\".concat(entity.theoretical_hours, \"/\").concat(entity.theoretical_classes),\n                pract: \"\".concat(entity.practical_hours, \"/\").concat(entity.practical_classes),\n                mixed: \"\".concat(entity.mixed_hours, \"/\").concat(entity.mixed_classes)\n              };\n            });\n\n            console.log(_assignedTeachers);\n            setAssignedTeachers(_assignedTeachers);\n          }\n        }).catch(function (err) {});\n      }\n    }).catch(function (err) {\n      toast.error(err === null || err === void 0 ? void 0 : err.error);\n    });\n  }; // useEffect(() => {\n  //   fetch();\n  // }, []);\n\n\n  useEffect(function () {\n    fetch();\n  }, [refresh]);\n  var columns = [{\n    title: \"المعرّف\",\n    field: \"id\",\n    hidden: true\n  }, {\n    title: \"المدرّس\",\n    field: \"teacher\"\n  }, {\n    title: \"نظري س/ف\",\n    field: \"theo\"\n  }, {\n    title: \"عملي س/ف\",\n    field: \"pract\"\n  }, {\n    title: \"نظري/عملي س/ف\",\n    field: \"mixed\"\n  }];\n\n  var ConfirmDialog = function ConfirmDialog(_ref2) {\n    var id = _ref2.id,\n        show = _ref2.show,\n        handleClose = _ref2.handleClose,\n        handleDeleteCourse = _ref2.handleDeleteCourse;\n    return /*#__PURE__*/_jsxs(Dialog, {\n      open: show,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(DialogTitle, {\n        children: /*#__PURE__*/_jsx(Typography, {\n          children: \"\\u0647\\u0644 \\u062A\\u0631\\u064A\\u062F \\u062A\\u0623\\u0643\\u064A\\u062F \\u0625\\u0646\\u0647\\u0627\\u0621 \\u062A\\u0643\\u0644\\u064A\\u0641 \\u0627\\u0644\\u0645\\u062F\\u0631\\u0651\\u0633 \".concat(name)\n        })\n      }), /*#__PURE__*/_jsx(Box, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        children: /*#__PURE__*/_jsx(IconButton, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsx(Close, {})\n        })\n      }), /*#__PURE__*/_jsxs(DialogActions, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          variant: \"contained\",\n          children: translate(\"Cancel\")\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: function onClick() {\n            return handleDeleteCourse(id);\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          children: translate(\"Confirm\")\n        })]\n      })]\n    });\n  };\n\n  var handleDeleteCourse = function handleDeleteCourse() {\n    if (deleteId) {\n      TeacherService.DeleteTeachersAssignments(deleteId).then(function (resp) {\n        if (resp.success) {\n          toast.success(translate(\"Teacher disengage successfully\"));\n          setConfirmDelete(false);\n          fetch();\n        }\n      }).catch(function (err) {});\n    } else toast.error(\"يجب تحديد معرّف\");\n  };\n\n  var handleConfirmDialog = function handleConfirmDialog(data) {\n    setName(data.teacher);\n    setDeleteId(data.id);\n    setConfirmDelete(true);\n  };\n\n  var handleCloseConfirmDialog = function handleCloseConfirmDialog() {\n    setDeleteId(null);\n    setConfirmDelete(false);\n  };\n\n  var renderPlanCourses = function renderPlanCourses() {\n    if (assignedTeachers != null && assignedTeachers.length > 0) {\n      var options = {\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\",\n        search: false,\n        tableLayout: \"auto\"\n      };\n      var actions = [{\n        icon: function icon() {\n          return /*#__PURE__*/_jsx(SuiButton, {\n            style: {\n              minWidth: 80,\n              color: \"#dc3545\",\n              backgroundColor: \"transparent\",\n              border: \"1px solid #dc3545\"\n            },\n            color: \"danger\",\n            children: translate(\"Delete\")\n          });\n        },\n        onClick: function onClick(evt, data) {\n          return handleConfirmDialog(data);\n        }\n      }];\n      return /*#__PURE__*/_jsxs(\"div\", {\n        ref: tableRef,\n        children: [/*#__PURE__*/_jsx(ActionTable, {\n          Title: \"\".concat(translate(\"All\"), \" \").concat(assignedTeachers.length),\n          Columns: columns,\n          Data: assignedTeachers,\n          Options: options,\n          Actions: actions\n        }), /*#__PURE__*/_jsx(ConfirmDialog, {\n          id: deleteId,\n          show: confirmDelete,\n          handleClose: handleCloseConfirmDialog,\n          handleDeleteCourse: handleDeleteCourse\n        }, \"Confirm Delete Course\")]\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {\n      loading: false\n    });\n  };\n\n  return /*#__PURE__*/_jsx(GridContainer, {\n    children: /*#__PURE__*/_jsx(GridItem, {\n      md: 12,\n      style: {\n        marginTop: \"1em .5em\"\n      },\n      children: renderPlanCourses()\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}