{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { TextField, Box, Grid, Typography, FormControlLabel, Radio, RadioGroup, MenuItem } from \"@material-ui/core\";\nimport Card from \"../../../../components/Card/Card.js\";\nimport CardHeader from \"../../../../components/Card/CardHeader.js\";\nimport CardBody from \"../../../../components/Card/CardBody.js\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport PersonInfoPartialForm from \"./PersonInfoPartialForm\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle\";\nimport CandidateService from \"../../../../Services/CandidateService\";\nimport { examPlaces, registerationClasses, registerationMethods, studyPlaces, yesNo } from \"../../../../Static/resources\";\nimport { useAppDispatch, setCandidate } from \"../../../../redux\";\nimport { toast } from \"react-toastify\";\nimport DatePicker from 'react-datepicker';\nimport { format, getYear, getMonth } from \"date-fns\";\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst CandidatePersonalInfo = ({\n  initValues,\n  external = 0,\n  forAdd = false,\n  handleClose,\n  callback,\n  updateCandidate\n}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const dispatch = useAppDispatch();\n  const [disabled, setDisabled] = React.useState(false);\n  const submitFunction = forAdd ? CandidateService.Add : CandidateService.Edit;\n\n  const submitForm = async (values, setSubmitting) => {\n    setSubmitting(true);\n    values = _objectSpread(_objectSpread({}, values), {}, {\n      external: external,\n      permenant_address: 'permenant_address',\n      temporary_address: 'temporary_address'\n    });\n    submitFunction(values).then(res => {\n      if (res.success) {\n        if (forAdd) {\n          var _values;\n\n          handleClose && handleClose();\n          updateCandidate(res.result);\n          dispatch(setCandidate(_objectSpread(_objectSpread({}, res.result), {}, {\n            certificates: [],\n            person: (_values = values) === null || _values === void 0 ? void 0 : _values.person\n          })));\n          router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/candidate-details`);\n        } else {\n          updateCandidate(_objectSpread(_objectSpread({}, res.result), {}, {\n            desires: res.result.desires.map(e => e.speciality)\n          }));\n          dispatch(setCandidate(_objectSpread(_objectSpread({}, res.result), {}, {\n            desires: res.result.desires.map(e => e.speciality)\n          })));\n          toast(translate('Candidate updated.'), {\n            type: 'success'\n          });\n        }\n\n        callback && callback(res.result);\n      }\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n    ;\n  };\n\n  const formScheme = Yup.object().shape({// first_name: Yup.string().required(translate(\"{0} is required\", \"First name\")),\n    // last_name: Yup.string().required(translate(\"{0} is required\", \"Last name\")),\n    // passport_first_name: Yup.string().required(translate(\"{0} is required\", \"Passport First Name\")),\n    // passport_last_name: Yup.string().required(translate(\"{0} is required\", \"Passport Last Name\")),\n    // passport_number: Yup.string().required(translate(\"{0} is required\", \"Passport Number\")),\n    // national_number: Yup.string().required(translate(\"{0} is required\", \"National number\")),\n    // sex: Yup.string().required(translate(\"{0} is required\", \"Gender\")),\n    // nationality: Yup.string().required(translate(\"{0} is required\", \"Nationality\")),\n  });\n\n  const range = (start, stop, step) => Array.from({\n    length: (stop - start) / step + 1\n  }, (_, i) => start + i * step);\n\n  const years = range(1990, getYear(new Date()) + 1, 1);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  return /*#__PURE__*/_jsx(Box, {\n    children: /*#__PURE__*/_jsxs(Card, {\n      children: [/*#__PURE__*/_jsx(CardHeader, {\n        children: /*#__PURE__*/_jsx(\"h4\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"#01579b\"\n          },\n          children: translate('Personal Info')\n        })\n      }), /*#__PURE__*/_jsx(CardBody, {\n        children: /*#__PURE__*/_jsx(Formik, {\n          initialValues: initValues,\n          validationSchema: formScheme,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting);\n          },\n          children: formik => {\n            var _values$residance;\n\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty,\n              setFieldValue\n            } = formik;\n            return /*#__PURE__*/_jsxs(Form, {\n              children: [/*#__PURE__*/_jsx(PersonInfoPartialForm, {\n                prefix: \"person\",\n                formik: formik,\n                disabled: disabled\n              }), /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Registeration Class\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: `registeration_class`,\n                      name: `registeration_class`,\n                      select: true,\n                      value: values.registeration_class,\n                      onChange: handleChange(`registeration_class`),\n                      onBlur: handleBlur,\n                      placeholder: translate(\"registeration_class\"),\n                      fullWidth: true,\n                      children: registerationClasses(translate).map(_class => /*#__PURE__*/_jsx(MenuItem, {\n                        value: _class,\n                        children: _class\n                      }, _class))\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Exam Place\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: `exam_place`,\n                      name: `exam_place`,\n                      select: true,\n                      value: values.exam_place,\n                      onChange: handleChange(`exam_place`),\n                      onBlur: handleBlur,\n                      placeholder: translate(\"exam_place\"),\n                      fullWidth: true,\n                      children: examPlaces(translate).map(place => /*#__PURE__*/_jsx(MenuItem, {\n                        value: place,\n                        children: place\n                      }, place))\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Registeration Method\")\n                      })\n                    }), /*#__PURE__*/_jsx(RadioGroup, {\n                      id: 'registeration_method',\n                      name: 'registeration_method',\n                      value: values === null || values === void 0 ? void 0 : values.registeration_method,\n                      onChange: handleChange,\n                      defaultValue: registerationMethods(translate)[0],\n                      children: registerationMethods(translate).map(place => /*#__PURE__*/_jsx(FormControlLabel, {\n                        value: place,\n                        control: /*#__PURE__*/_jsx(Radio, {}),\n                        label: place\n                      }))\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Study Place\")\n                      })\n                    }), /*#__PURE__*/_jsx(RadioGroup, {\n                      id: 'study_place',\n                      name: 'study_place',\n                      value: values === null || values === void 0 ? void 0 : values.study_place,\n                      onChange: handleChange,\n                      defaultValue: studyPlaces(translate)[0],\n                      children: studyPlaces(translate).map(place => /*#__PURE__*/_jsx(FormControlLabel, {\n                        value: place,\n                        control: /*#__PURE__*/_jsx(Radio, {}),\n                        label: place\n                      }))\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Need Residance\")\n                      })\n                    }), /*#__PURE__*/_jsx(RadioGroup, {\n                      id: 'residance',\n                      name: 'residance',\n                      value: values === null || values === void 0 ? void 0 : (_values$residance = values.residance) === null || _values$residance === void 0 ? void 0 : _values$residance.toString(),\n                      onChange: handleChange,\n                      defaultValue: yesNo(translate)[0].value,\n                      children: yesNo(translate).map(option => /*#__PURE__*/_jsx(FormControlLabel, {\n                        control: /*#__PURE__*/_jsx(Radio, {}),\n                        value: option.value,\n                        label: option.label\n                      }))\n                    })]\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Birth date\")\n                      })\n                    }), /*#__PURE__*/_jsx(DatePicker, {\n                      renderCustomHeader: ({\n                        date,\n                        changeYear,\n                        changeMonth,\n                        decreaseMonth,\n                        increaseMonth,\n                        prevMonthButtonDisabled,\n                        nextMonthButtonDisabled\n                      }) => /*#__PURE__*/_jsxs(\"div\", {\n                        style: {\n                          margin: 10,\n                          display: \"flex\",\n                          justifyContent: \"center\"\n                        },\n                        children: [/*#__PURE__*/_jsx(\"button\", {\n                          onClick: decreaseMonth,\n                          disabled: prevMonthButtonDisabled,\n                          children: \"<\"\n                        }), /*#__PURE__*/_jsx(\"select\", {\n                          value: getYear(date),\n                          onChange: ({\n                            target: {\n                              value\n                            }\n                          }) => changeYear(value),\n                          children: years.map(option => /*#__PURE__*/_jsx(\"option\", {\n                            value: option,\n                            children: option\n                          }, option))\n                        }), /*#__PURE__*/_jsx(\"select\", {\n                          value: months[getMonth(date)],\n                          onChange: ({\n                            target: {\n                              value\n                            }\n                          }) => changeMonth(months.indexOf(value)),\n                          children: months.map(option => /*#__PURE__*/_jsx(\"option\", {\n                            value: option,\n                            children: option\n                          }, option))\n                        }), /*#__PURE__*/_jsx(\"button\", {\n                          onClick: increaseMonth,\n                          disabled: nextMonthButtonDisabled,\n                          children: \">\"\n                        })]\n                      }),\n                      disabled: disabled,\n                      onChange: date => setFieldValue('birth_date', format(date, \"yyyy-MM-dd\")),\n                      size: \"small\",\n                      name: \"birth_date\",\n                      value: `${values.birth_date}`,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.birth_date && errors.birth_date),\n                      helperText: touched.birth_date && errors.birth_date,\n                      placeholder: translate(\"Birth date\"),\n                      fullWidth: true\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Birth place\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"birth_place\",\n                      name: \"birth_place\",\n                      value: values.birth_place,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.birth_place && errors.birth_place),\n                      helperText: touched.birth_place && errors.birth_place,\n                      placeholder: translate(\"Birth place\"),\n                      fullWidth: true\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"QAID place\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"qaid_place\",\n                      name: \"qaid_place\",\n                      value: values.qaid_place,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.qaid_place && errors.qaid_place),\n                      helperText: touched.qaid_place && errors.qaid_place,\n                      placeholder: translate(\"QAID place\"),\n                      fullWidth: true\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"QAID number\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"qaid_number\",\n                      name: \"qaid_number\",\n                      value: values.qaid_number,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.qaid_number && errors.qaid_number),\n                      helperText: touched.qaid_number && errors.qaid_number,\n                      placeholder: translate(\"QAID number\"),\n                      fullWidth: true\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsx(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsx(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Military office\")\n                      })\n                    }), /*#__PURE__*/_jsx(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"military_office\",\n                      name: \"military_office\",\n                      value: values.military_office,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.military_office && errors.military_office),\n                      helperText: touched.military_office && errors.military_office,\n                      placeholder: translate(\"Military office\"),\n                      fullWidth: true\n                    })]\n                  })\n                })]\n              }), /*#__PURE__*/_jsx(Box, {\n                mt: 4,\n                mb: 1,\n                children: isSubmitting ? /*#__PURE__*/_jsx(SuiButton, {\n                  disabled: true,\n                  variant: \"gradient\",\n                  color: \"info\",\n                  fullWidth: true,\n                  children: translate(\"Processing ...\")\n                }) : /*#__PURE__*/_jsx(SuiButton // disabled={!(dirty && isValid)}\n                , {\n                  type: \"submit\",\n                  variant: \"gradient\",\n                  color: \"info\",\n                  fullWidth: true,\n                  children: translate(\"Save\")\n                })\n              })]\n            });\n          }\n        })\n      })]\n    })\n  });\n};\n\nexport default CandidatePersonalInfo;","map":null,"metadata":{},"sourceType":"module"}