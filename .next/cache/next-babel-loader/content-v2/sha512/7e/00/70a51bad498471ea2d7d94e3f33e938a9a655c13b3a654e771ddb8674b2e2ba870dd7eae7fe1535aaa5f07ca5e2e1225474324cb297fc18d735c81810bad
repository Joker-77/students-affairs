{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport React, { useEffect, useState } from \"react\";\nimport Admin from \"layouts/Admin.js\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, Typography, makeStyles, TextField } from \"@material-ui/core\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport PlanService from \"../../../../Services/PlanService\";\nimport EduYearService from \"../../../../Services/EduYearService\";\nimport ExamService from \"../../../../Services/ExamService\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport styles from \"assets/jss/nextjs-material-dashboard/views/dashboardStyle.js\";\nimport { KeyboardDatePicker, TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { arSA } from \"date-fns/locale\";\nimport { toast } from \"react-toastify\";\nimport \"./exams-list-style.css\";\nimport { Card } from \"@material-ui/core\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { default as RSelect } from \"react-select\";\n\nvar ExamsList = function ExamsList(_ref) {\n  var _jsx2, _jsx3, _jsx4;\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useTranslation = useTranslation(),\n      translate = _useTranslation.translate;\n\n  var useStyles = makeStyles(styles);\n  var classes = useStyles(); // Programs\n\n  var _useState = useState([]),\n      programs = _useState[0],\n      setPrograms = _useState[1];\n\n  var _useState2 = useState(null),\n      program = _useState2[0],\n      setProgram = _useState2[1]; // Courses\n\n\n  var _useState3 = useState([]),\n      courses = _useState3[0],\n      setCourses = _useState3[1];\n\n  var _useState4 = useState(null),\n      course = _useState4[0],\n      setCourse = _useState4[1]; // Edu Year\n\n\n  var _useState5 = useState([]),\n      eduYears = _useState5[0],\n      setEduYears = _useState5[1];\n\n  var _useState6 = useState(null),\n      eduYear = _useState6[0],\n      setEduYear = _useState6[1]; // Exam Type\n\n\n  var _useState7 = useState([]),\n      examsTypes = _useState7[0],\n      setExamsType = _useState7[1];\n\n  var _useState8 = useState(null),\n      examType = _useState8[0],\n      setExamType = _useState8[1];\n\n  useEffect(function () {\n    PlanService.GetAll().then(function (programs) {\n      EduYearService.GetYears(\"\").then(function (eduYears) {\n        setPrograms(programs.result);\n        setEduYears(eduYears.result);\n      }).catch(function (err) {\n        console.error(\"Error\", err);\n      });\n    }).catch(function (err) {\n      console.error(\"Error\", err);\n    });\n  }, []);\n\n  var changeProgram = function changeProgram(val) {\n    setProgram(val);\n  };\n\n  var changeEduYear = function changeEduYear(val) {\n    setEduYear(val);\n    setLoadCourses(true);\n    ExamService.GetAllCourses(program, val.toString()).then(function (resp) {\n      console.log(resp.result);\n      setCourses(resp.result);\n    }).catch(function (error) {});\n    setLoadCourses(false);\n  };\n\n  var _useState9 = useState(false),\n      loadCourses = _useState9[0],\n      setLoadCourses = _useState9[1];\n\n  var _useState10 = useState(false),\n      loadExamsType = _useState10[0],\n      setLoadExamsType = _useState10[1];\n\n  var _useState11 = useState([]),\n      plans = _useState11[0],\n      setPlans = _useState11[1]; // Get Exams\n\n\n  useEffect(function () {}, []);\n\n  var addInputField = function addInputField() {\n    if (inputFields.length >= halls.length) toast.error(\"لايمكنك الإضافة! لايوجد سوى قاعتين\");else setInputFields([].concat(_toConsumableArray(inputFields), [{\n      hall: 0,\n      date: getFullDate(selectedDate),\n      from: getFullTime(startTime),\n      to: getFullTime(endTime),\n      planId: 0,\n      num_studs: 0\n    }]));\n  };\n\n  var removeInputFields = function removeInputFields(index) {\n    var rows = _toConsumableArray(inputFields);\n\n    rows.splice(index, 1);\n    setInputFields(rows);\n  };\n\n  var handleChange = function handleChange(index, evnt) {\n    var _evnt$target = evnt.target,\n        name = _evnt$target.name,\n        value = _evnt$target.value;\n\n    var list = _toConsumableArray(inputFields);\n\n    list[index][name] = value;\n    setInputFields(list);\n    console.log(list);\n  }; //\n\n\n  var getFullDate = function getFullDate(date) {\n    var day = date === null || date === void 0 ? void 0 : date.getDate();\n    var month = (date === null || date === void 0 ? void 0 : date.getMonth()) + 1;\n    var year = date === null || date === void 0 ? void 0 : date.getFullYear(); // This arrangement can be altered based on how we want the date's format to appear.\n\n    return \"\".concat((\"0\" + day).slice(-2), \"-\").concat((\"0\" + month).slice(-2), \"-\").concat(year);\n  }; //\n\n\n  var getFullTime = function getFullTime(date) {\n    return date.toLocaleTimeString();\n  }; // ------------------------\n\n\n  var clear = function clear() {\n    setSelectedNewStds(0);\n    setSelectedOldStds(0);\n    setSelectedPlans([]);\n    setPlans([]);\n    setSelectedPlanData([]);\n    setInputFields([{\n      hall: 0,\n      date: getFullDate(selectedDate),\n      from: getFullTime(startTime),\n      to: getFullTime(endTime),\n      num_studs: 0\n    }]);\n  };\n\n  var changeCourse = function changeCourse(val) {\n    clear();\n    setCourse(val);\n    setLoadExamsType(true);\n\n    var _course = courses.find(function (e) {\n      return e.edu_course_id === val;\n    });\n\n    setExamsType(_course.evaluation_methods);\n    setLoadExamsType(false);\n  };\n\n  var changeExamType = function changeExamType(val) {\n    clear();\n\n    var _course = courses.find(function (e) {\n      return e.edu_course_id == course;\n    });\n\n    setExamType(val);\n    ExamService.GetAllPlans(program, eduYear, _course.edu_course_id, val.toString()).then(function (resp) {\n      return setPlans(resp.result);\n    }).catch(function (error) {});\n  }; // Halls\n  // const [halls, setHalls] = useState([]);\n  // handle add coursse to program\n\n\n  var _useState12 = useState([]),\n      selectedPlanData = _useState12[0],\n      setSelectedPlanData = _useState12[1];\n\n  var _useState13 = useState([]),\n      selectedPlans = _useState13[0],\n      setSelectedPlans = _useState13[1];\n\n  var _useState14 = useState(0),\n      selectedNewStds = _useState14[0],\n      setSelectedNewStds = _useState14[1];\n\n  var _useState15 = useState(0),\n      selectedOldStds = _useState15[0],\n      setSelectedOldStds = _useState15[1];\n\n  var _useState16 = useState(new Date()),\n      selectedDate = _useState16[0],\n      setSelectedDate = _useState16[1];\n\n  var _useState17 = useState(new Date()),\n      startTime = _useState17[0],\n      setStartTime = _useState17[1];\n\n  var _useState18 = useState(new Date()),\n      endTime = _useState18[0],\n      setEndTime = _useState18[1];\n\n  console.log(\"selectedDate\", selectedDate.getDay()); // Dynamic Halls\n\n  var _useState19 = useState([{\n    hall: 0,\n    date: getFullDate(selectedDate),\n    from: getFullTime(startTime),\n    to: getFullTime(endTime),\n    planId: 0,\n    num_studs: 0\n  }]),\n      inputFields = _useState19[0],\n      setInputFields = _useState19[1];\n\n  console.log(inputFields);\n  var _halls = [{\n    id: 1,\n    name: \"ق1\",\n    selected: false\n  }, {\n    id: 2,\n    name: \"ق2\",\n    selected: false\n  }];\n\n  var _useState20 = useState(_halls),\n      halls = _useState20[0],\n      setHalls = _useState20[1];\n\n  var handleDateChange = function handleDateChange(e) {\n    setSelectedDate(e);\n\n    var _inptFilds = inputFields.slice().map(function (dd) {\n      return {\n        hall: dd.hall,\n        date: getFullDate(e),\n        from: getFullTime(startTime),\n        to: getFullTime(endTime),\n        planId: dd.planId,\n        num_studs: dd.num_studs\n      };\n    });\n\n    setInputFields(_inptFilds);\n  };\n\n  var handleStartTime = function handleStartTime(e) {\n    setStartTime(e);\n\n    var _inptFilds = inputFields.slice().map(function (dd) {\n      return {\n        hall: dd.hall,\n        date: getFullDate(selectedDate),\n        from: getFullTime(e),\n        to: getFullTime(endTime),\n        planId: dd.planId,\n        num_studs: dd.num_studs\n      };\n    });\n\n    setInputFields(_inptFilds);\n  };\n\n  var handleEndTime = function handleEndTime(e) {\n    setEndTime(e);\n\n    var _inptFilds = inputFields.slice().map(function (dd) {\n      return {\n        hall: dd.hall,\n        date: getFullDate(selectedDate),\n        from: getFullTime(startTime),\n        to: getFullTime(e),\n        planId: dd.planId,\n        num_studs: dd.num_studs\n      };\n    });\n\n    setInputFields(_inptFilds);\n    var startHour = startTime.getHours();\n    var startMinute = startTime.getMinutes();\n    var endHour = e.getHours();\n    var endMinute = e.getMinutes();\n    if (e < startTime) toast.error(\"وقت الانتهاء يجب أن يكون بعد وقت البدء\");\n  }; // get selected plan exams\n\n\n  var _useState21 = useState(0),\n      selectedPlan = _useState21[0],\n      setSelectedPlan = _useState21[1]; //   useEffect(() => {\n  //     if (selectedPlan != 0 && !!selectedPlanData) {\n  //       ExamService.getExams(selectedPlan)\n  //         .then((resp) => {\n  //           console.clear();\n  //           console.log(resp);\n  //           if (resp.result?.length > 0) {\n  //             let exam = resp.result?.filter((dt, indx) => {\n  //               return dt.evaluation_method?.id == examType;\n  //             })[0];\n  //             if (exam.exam_halls && exam.exam_halls.length > 0) {\n  //               let fields = exam?.exam_halls?.map((e) => {\n  //                 return {\n  //                   planId: exam.plan_id,\n  //                   from: exam.from,\n  //                   to: exam.to,\n  //                   date: exam.date.split(\"T\")[0],\n  //                   hall: e.hall_id,\n  //                   num_studs: e.students_num,\n  //                 };\n  //               });\n  //               console.log(\"selectedPlanData\", selectedPlanData);\n  //               console.log(\"fields\", fields);\n  //               setInputFields(fields);\n  //             }\n  //           }\n  //         })\n  //         .catch((error) => {});\n  //     }\n  //   }, [selectedPlanData, selectedPlan]);\n  // Select Plan\n\n\n  var selectPlan = function selectPlan(id) {\n    var valAsNum = parseInt(id); // setSelectedPlan(valAsNum);\n\n    var _arr = selectedPlans.slice();\n\n    if (_arr.includes(valAsNum)) {\n      var index = _arr.findIndex(function (e) {\n        return e == valAsNum;\n      });\n\n      _arr.splice(index, 1);\n\n      setSelectedPlans(_arr);\n      var sel = _arr.length > 0 ? plans.map(function (e) {\n        if (_arr.includes(parseInt(e.id))) return e;\n      }) : [];\n      setSelectedPlanData(sel);\n\n      if (sel.length > 0) {\n        var sumOld = sel.reduce(function (partialSum, a) {\n          return partialSum + a.old_students_num;\n        }, 0);\n        var sumNew = sel.reduce(function (partialSum, a) {\n          return partialSum + a.new_students_num;\n        }, 0);\n        setSelectedNewStds(sumNew);\n        setSelectedOldStds(sumOld);\n      } else {\n        setSelectedNewStds(0);\n        setSelectedOldStds(0);\n      }\n    } else {\n      _arr.push(valAsNum);\n\n      setSelectedPlans(_arr);\n\n      var _sel = _arr.length > 0 ? plans.map(function (e) {\n        if (_arr.includes(parseInt(e.id))) return e;\n      }) : [];\n\n      setSelectedPlanData(_sel);\n\n      var _sumOld = _sel.reduce(function (partialSum, a) {\n        return partialSum + a.old_students_num;\n      }, 0);\n\n      var _sumNew = _sel.reduce(function (partialSum, a) {\n        return partialSum + a.new_students_num;\n      }, 0);\n\n      setSelectedNewStds(_sumNew);\n      setSelectedOldStds(_sumOld);\n    }\n  };\n\n  var handleAddExam = function handleAddExam() {\n    var payLoad = {\n      plan_ids: _toConsumableArray(selectedPlans),\n      type: \"\".concat(examsTypes.filter(function (e) {\n        return e.id == examType;\n      })[0].name),\n      date: getFullDate(selectedDate),\n      from: getFullTime(startTime),\n      to: getFullTime(endTime),\n      halls: inputFields.map(function (dd) {\n        return {\n          id: dd.hall,\n          plan_id: dd.planId,\n          students_num: parseInt(\"\".concat(dd.num_studs))\n        };\n      })\n    };\n    console.log(payLoad); // PlanService.AddCourse(payLoad)\n    //   .then((result) => {\n    //     if (result.success) {\n    //       toast.success(translate(\"Course Added To Plan Successfully\"));\n    //       PlanService.GetProgramCourses(program, specYear, year)\n    //         .then((resp) => {\n    //           if (resp.success) {\n    //             setProgramCourses(resp.result);\n    //           }\n    //         })\n    //         .catch((err) => {});\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     toast.error(error.message);\n    //   });\n  };\n\n  var renderPlans = function renderPlans(plans) {\n    if (plans.length > 0) {\n      return /*#__PURE__*/_jsxs(MuiPickersUtilsProvider, {\n        locale: arSA,\n        utils: DateFnsUtils,\n        children: [/*#__PURE__*/_jsxs(Card, {\n          style: {\n            margin: \"5px 0px\",\n            width: \"100%\",\n            paddingRight: \"1em\",\n            paddingBottom: \"1em\"\n          },\n          children: [/*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              height: \"7em\"\n            },\n            children: [/*#__PURE__*/_jsx(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsx(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0633\\u0646\\u0629\"\n              })\n            }), /*#__PURE__*/_jsx(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsx(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0627\\u062E\\u062A\\u0635\\u0627\\u0635\"\n              })\n            }), /*#__PURE__*/_jsx(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsx(\"h5\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u0627\\u0644\\u0641\\u0635\\u0644\"\n              })\n            }), /*#__PURE__*/_jsxs(GridItem, {\n              md: 2,\n              children: [/*#__PURE__*/_jsxs(\"h5\", {\n                style: {\n                  fontWeight: \"bold\",\n                  marginBottom: \"0\"\n                },\n                children: [\"\\u0639\\u062F\\u062F \\u0627\\u0644\\u0637\\u0644\\u0627\\u0628\", \" \"]\n              }), /*#__PURE__*/_jsxs(\"h5\", {\n                style: {\n                  fontWeight: \"bold\",\n                  marginTop: \"0\"\n                },\n                children: [\"\\u0645\\u0633\\u062A\\u062C\\u062F | \\u0645\\u0639\\u064A\\u062F\", \" \"]\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              margin: \"2em 0em\"\n            },\n            children: plans.map(function (e) {\n              var _e$year, _e$year2, _e$year2$speciality;\n\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: (_e$year = e.year) === null || _e$year === void 0 ? void 0 : _e$year.ar_name\n                  })\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: (_e$year2 = e.year) === null || _e$year2 === void 0 ? void 0 : (_e$year2$speciality = _e$year2.speciality) === null || _e$year2$speciality === void 0 ? void 0 : _e$year2$speciality.ar_name\n                  })\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    disabled: true,\n                    value: e.semester\n                  })\n                }), /*#__PURE__*/_jsxs(GridItem, {\n                  md: 1,\n                  children: [e.new_students_num, \" | \", e.old_students_num]\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 1,\n                  children: /*#__PURE__*/_jsx(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedPlans.includes(e.id),\n                    value: e.id,\n                    onChange: function onChange(p) {\n                      return selectPlan(p.target.value);\n                    }\n                  })\n                })]\n              });\n            })\n          }), /*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            md: 12,\n            children: [/*#__PURE__*/_jsx(GridItem, {\n              md: 1,\n              children: \"\\u0627\\u0644\\u062A\\u0627\\u0631\\u064A\\u062E\"\n            }), /*#__PURE__*/_jsx(GridItem, {\n              md: 3,\n              children: /*#__PURE__*/_jsx(KeyboardDatePicker, {\n                clearable: true,\n                value: selectedDate,\n                onChange: function onChange(date) {\n                  return handleDateChange(date);\n                },\n                minDate: new Date(),\n                format: \"MM/dd/yyyy\" // inputVariant=\"outlined\"\n\n              })\n            })]\n          }), /*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            md: 12,\n            style: {\n              marginTop: \"3em\"\n            },\n            children: [/*#__PURE__*/_jsx(GridItem, {\n              style: {\n                display: \"flex\",\n                marginTop: \"1em\"\n              },\n              md: 1,\n              children: /*#__PURE__*/_jsx(\"span\", {\n                children: \" \\u0627\\u0644\\u0648\\u0642\\u062A\"\n              })\n            }), /*#__PURE__*/_jsx(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsx(TimePicker, {\n                clearable: true,\n                label: \"\\u0645\\u0646\",\n                value: startTime,\n                onChange: handleStartTime\n              })\n            }), /*#__PURE__*/_jsx(GridItem, {\n              md: 2,\n              children: /*#__PURE__*/_jsx(TimePicker, {\n                showTodayButton: true,\n                todayLabel: \"now\",\n                label: \"\\u0625\\u0644\\u0649\",\n                value: endTime,\n                minutesStep: 5,\n                onChange: handleEndTime\n              })\n            }), /*#__PURE__*/_jsx(GridItem, {\n              md: 1\n            }), /*#__PURE__*/_jsxs(Grid, {\n              container: true,\n              md: 4,\n              children: [/*#__PURE__*/_jsxs(Grid, {\n                item: true,\n                md: 5,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0627\\u0644\\u0645\\u062C\\u0645\\u0648\\u0639 \\u0627\\u0644\\u0643\\u0644\\u064A\"\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0645\\u0633\\u062A\\u062C\\u062F\"\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\\u0645\\u0639\\u064A\\u062F\"\n                })]\n              }), /*#__PURE__*/_jsxs(Grid, {\n                item: true,\n                md: 3,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: \"\".concat(selectedNewStds + selectedOldStds)\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: selectedNewStds\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: selectedOldStds\n                })]\n              })]\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(Grid, {\n          container: true,\n          md: 12,\n          style: {\n            marginTop: \"1em\"\n          },\n          children: /*#__PURE__*/_jsxs(Card, {\n            style: {\n              margin: \"5px 0px\",\n              width: \"100%\",\n              paddingRight: \"1em\",\n              paddingBottom: \"1em\"\n            },\n            children: [/*#__PURE__*/_jsx(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsx(Button, {\n                style: {\n                  margin: \"10px 5px\"\n                },\n                variant: \"contained\",\n                className: classes.submitBtn,\n                onClick: addInputField,\n                children: \"\\u062A\\u062E\\u0635\\u064A\\u0635 \\u0642\\u0627\\u0639\\u0629\"\n              })\n            }), inputFields.map(function (data, index) {\n              var _jsxs2, _jsxs3;\n\n              console.log(data);\n              console.log(selectedPlanData);\n              return /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                md: 12,\n                style: {\n                  marginTop: \"1em\"\n                },\n                children: [/*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxs(FormControl, (_jsxs2 = {\n                    fullWidth: true,\n                    variant: \"filled\",\n                    size: \"small\"\n                  }, _defineProperty(_jsxs2, \"size\", \"small\"), _defineProperty(_jsxs2, \"children\", [/*#__PURE__*/_jsx(InputLabel, {\n                    id: \"demo-simple-select-label\",\n                    children: \"\\u0627\\u0644\\u0642\\u0627\\u0639\\u0629\"\n                  }), /*#__PURE__*/_jsx(Select, {\n                    fullWidth: true,\n                    labelId: \"demo-simple-select-label\",\n                    id: \"demo-simple-select\",\n                    value: data.hall,\n                    label: \"halls\",\n                    name: \"hall\",\n                    onChange: function onChange(evnt) {\n                      return handleChange(index, evnt);\n                    },\n                    children: halls.map(function (hall) {\n                      return !hall.selected && /*#__PURE__*/_jsx(MenuItem, {\n                        value: hall.id,\n                        children: hall.name\n                      }, hall.id);\n                    })\n                  })]), _jsxs2))\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsxs(FormControl, (_jsxs3 = {\n                    fullWidth: true,\n                    variant: \"filled\",\n                    size: \"small\"\n                  }, _defineProperty(_jsxs3, \"size\", \"small\"), _defineProperty(_jsxs3, \"children\", [/*#__PURE__*/_jsx(InputLabel, {\n                    id: \"demo-simple-select-label\",\n                    children: \"\\u0627\\u0644\\u0633\\u0646\\u0629 \\u0648\\u0627\\u0644\\u0627\\u062E\\u062A\\u0635\\u0627\\u0635\"\n                  }), /*#__PURE__*/_jsx(Select, {\n                    fullWidth: true,\n                    labelId: \"demo-simple-select-label\",\n                    id: \"demo-simple-select\",\n                    value: data.planId,\n                    label: \"halls\",\n                    name: \"planId\",\n                    onChange: function onChange(evnt) {\n                      return handleChange(index, evnt);\n                    },\n                    children: selectedPlanData.map(function (data) {\n                      var _data$year, _data$year2, _data$year2$specialit;\n\n                      return /*#__PURE__*/_jsx(MenuItem, {\n                        value: data.id,\n                        children: \"\".concat((_data$year = data.year) === null || _data$year === void 0 ? void 0 : _data$year.ar_name, \" - \").concat((_data$year2 = data.year) === null || _data$year2 === void 0 ? void 0 : (_data$year2$specialit = _data$year2.speciality) === null || _data$year2$specialit === void 0 ? void 0 : _data$year2$specialit.ar_name)\n                      }, data.id);\n                    })\n                  })]), _jsxs3))\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.date,\n                    label: translate(\"التاريخ\"),\n                    fullWidth: true\n                  })\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.from,\n                    label: translate(\"من\"),\n                    fullWidth: true\n                  })\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    disabled: true,\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"text\",\n                    value: data.to,\n                    label: translate(\"إلى\"),\n                    fullWidth: true\n                  })\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 2,\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    onChange: function onChange(evnt) {\n                      return handleChange(index, evnt);\n                    },\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    name: \"num_studs\",\n                    value: data.num_studs,\n                    label: translate(\"عدد الطلّاب\"),\n                    fullWidth: true\n                  })\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  md: 1,\n                  style: {\n                    marginTop: \"1em\"\n                  },\n                  children: inputFields.length !== 1 ? /*#__PURE__*/_jsx(Button, {\n                    type: \"button\",\n                    style: {\n                      width: \"10%\",\n                      color: \"white\",\n                      background: \"red\"\n                    },\n                    variant: \"outlined\",\n                    className: classes.closeBtn,\n                    onClick: removeInputFields,\n                    children: \"x\"\n                  }) : \"\"\n                })]\n              });\n            }), /*#__PURE__*/_jsx(SuiButton, {\n              onClick: handleAddExam,\n              style: {\n                margin: \"2em 0\",\n                color: \"rgb(255, 255, 255)\",\n                background: \"rgb(23, 193, 232)\"\n              },\n              type: \"button\",\n              children: \"\\u0625\\u0636\\u0627\\u0641\\u0629 \\u0648\\u0627\\u0642\\u0639\\u0629 \\u0627\\u0645\\u062A\\u062D\\u0627\\u0646\\u064A\\u0629\"\n            })]\n          })\n        })]\n      });\n    } else {\n      return /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        md: 12,\n        style: {\n          margin: \"2em 0em\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsx(Typography, {\n          style: {\n            textAlign: \"center\"\n          },\n          variant: \"h5\",\n          component: \"div\",\n          children: \"\\u0644\\u0627\\u062A\\u0648\\u062C\\u062F \\u0628\\u064A\\u0627\\u0646\\u0627\\u062A \\u0644\\u0639\\u0631\\u0636\\u0647\\u0627\"\n        })\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    md: 12,\n    children: [/*#__PURE__*/_jsx(GridContainer, {\n      md: 12,\n      children: /*#__PURE__*/_jsx(GridItem, {\n        style: {\n          margin: \"-1em 0 1em 0\"\n        },\n        md: 12,\n        className: classes.typography,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: \"\\u0625\\u0636\\u0627\\u0641\\u0629 \\u0648\\u0627\\u0642\\u0639\\u0629 \\u0627\\u0645\\u062A\\u062D\\u0627\\u0646\\u064A\\u0629\"\n        })\n      })\n    }), /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      md: 12,\n      style: {\n        margin: \"2em 0em\"\n      },\n      children: [/*#__PURE__*/_jsxs(GridItem, {\n        md: 2,\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0628\\u0631\\u0646\\u0627\\u0645\\u062C\"\n        }), /*#__PURE__*/_jsx(FormControl, (_jsx2 = {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\"\n        }, _defineProperty(_jsx2, \"size\", \"small\"), _defineProperty(_jsx2, \"children\", /*#__PURE__*/_jsx(RSelect, {\n          defaultValue: program,\n          placeholder: \"اختيار البرنامج\",\n          isSearchable: true,\n          options: programs,\n          onChange: function onChange(e) {\n            changeProgram(e.id);\n          },\n          getOptionLabel: function getOptionLabel(option) {\n            return option.name;\n          },\n          getOptionValue: function getOptionValue(option) {\n            return option.id;\n          }\n        })), _jsx2))]\n      }), /*#__PURE__*/_jsxs(GridItem, {\n        md: 2,\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0633\\u0646\\u0629\"\n        }), /*#__PURE__*/_jsx(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsx(RSelect, {\n            defaultValue: eduYear,\n            placeholder: \"اختيار السنة\",\n            isSearchable: true,\n            options: eduYears,\n            onChange: function onChange(e) {\n              return changeEduYear(e.id);\n            },\n            getOptionLabel: function getOptionLabel(option) {\n              return option.year;\n            },\n            getOptionValue: function getOptionValue(option) {\n              return option.id;\n            }\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(GridItem, {\n        md: 2,\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0627\\u0644\\u0645\\u0642\\u0631\\u0651\\u0631\"\n        }), /*#__PURE__*/_jsx(FormControl, (_jsx3 = {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\"\n        }, _defineProperty(_jsx3, \"size\", \"small\"), _defineProperty(_jsx3, \"children\", /*#__PURE__*/_jsx(RSelect, {\n          isDisabled: loadCourses,\n          defaultValue: course,\n          placeholder: \"اختيار المقرّر\",\n          isSearchable: true,\n          options: courses,\n          onChange: function onChange(e) {\n            return changeCourse(e.edu_course_id);\n          },\n          getOptionLabel: function getOptionLabel(option) {\n            return option.ar_name;\n          },\n          getOptionValue: function getOptionValue(option) {\n            return option.edu_course_id;\n          }\n        })), _jsx3))]\n      }), /*#__PURE__*/_jsxs(GridItem, {\n        md: 2,\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0646\\u0648\\u0639 \\u0627\\u0644\\u0648\\u0627\\u0642\\u0639\\u0629\"\n        }), /*#__PURE__*/_jsx(FormControl, (_jsx4 = {\n          fullWidth: true,\n          variant: \"filled\",\n          size: \"small\"\n        }, _defineProperty(_jsx4, \"size\", \"small\"), _defineProperty(_jsx4, \"children\", /*#__PURE__*/_jsx(RSelect, {\n          isDisabled: loadExamsType,\n          defaultValue: examType,\n          placeholder: \"اختيار الواقعة\",\n          isSearchable: true,\n          options: examsTypes,\n          onChange: function onChange(e) {\n            return changeExamType(e.id);\n          },\n          getOptionLabel: function getOptionLabel(option) {\n            return option.name;\n          },\n          getOptionValue: function getOptionValue(option) {\n            return option.id;\n          }\n        })), _jsx4))]\n      })]\n    }), renderPlans(plans)]\n  });\n};\n\nExamsList.auth = true;\nExamsList.layout = Admin;\nexport default ExamsList;","map":null,"metadata":{},"sourceType":"module"}