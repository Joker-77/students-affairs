{"ast":null,"code":"import apiConnector from \"./TokenizedApiClient\";\nexport default class RoleServices {\n  static async GetAll() {\n    const listUrls = process.env.LIST_ROLES_URL;\n    return await apiConnector.get(listUrls).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async Add() {\n    const addUrl = process.env.ADD_ROLE_URL;\n    return await apiConnector.get(addUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async Delete() {\n    const deleteUrl = process.env.DELETE_ROLE_URL;\n    return await apiConnector.get(deleteUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async AssignUserToRole() {\n    const assignUsrToRoleUrl = process.env.ASSIGN_USER_TO_ROLE_URL;\n    return await apiConnector.get(assignUsrToRoleUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}