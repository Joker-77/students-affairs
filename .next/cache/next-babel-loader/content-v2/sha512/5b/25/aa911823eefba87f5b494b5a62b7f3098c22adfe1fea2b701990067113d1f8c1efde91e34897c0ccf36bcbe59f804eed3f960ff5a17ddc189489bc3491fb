{"ast":null,"code":"import Box from \"@material-ui/core/Box\";\nimport { styled } from \"@material-ui/core/styles\";\nexport default styled(Box)(({\n  theme,\n  ownerState\n}) => {\n  // console.clear();\n  // console.log(theme);\n  // console.log(ownerState);\n  const {\n    palette,\n    functions,\n    borders,\n    boxShadows\n  } = theme;\n  const {\n    variant,\n    bgColor,\n    color,\n    opacity,\n    borderRadius,\n    shadow\n  } = ownerState;\n  const {\n    gradients,\n    grey,\n    white\n  } = palette;\n  const {\n    linearGradient\n  } = functions;\n  const {\n    borderRadius: radius\n  } = borders;\n  const greyColors = {\n    \"grey-100\": grey[100],\n    \"grey-200\": grey[200],\n    \"grey-300\": grey[300],\n    \"grey-400\": grey[400],\n    \"grey-500\": grey[500],\n    \"grey-600\": grey[600],\n    \"grey-700\": grey[700],\n    \"grey-800\": grey[800],\n    \"grey-900\": grey[900]\n  };\n  const validGradients = [\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\"];\n  const validColors = [\"transparent\", \"white\", \"black\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"text\", \"grey-100\", \"grey-200\", \"grey-300\", \"grey-400\", \"grey-500\", \"grey-600\", \"grey-700\", \"grey-800\", \"grey-900\"];\n  const validBorderRadius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"section\"];\n  const validBoxShadows = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"inset\"]; // background value\n\n  let backgroundValue = bgColor;\n\n  if (variant === \"gradient\") {\n    backgroundValue = validGradients.find(el => el === bgColor) ? linearGradient(gradients[bgColor].main, gradients[bgColor].state) : white.main;\n  } else if (validColors.find(el => el === bgColor)) {\n    backgroundValue = palette[bgColor] ? palette[bgColor].main : greyColors[bgColor];\n  } else {\n    backgroundValue = bgColor;\n  } // color value\n\n\n  let colorValue = color;\n\n  if (validColors.find(el => el === color)) {\n    colorValue = palette[color] ? palette[color].main : greyColors[color];\n  } // borderRadius value\n\n\n  let borderRadiusValue = borderRadius;\n\n  if (validBorderRadius.find(el => el === borderRadius)) {\n    borderRadiusValue = radius[borderRadius];\n  } // boxShadow value\n\n\n  let boxShadowValue = boxShadows;\n\n  if (validBoxShadows.find(el => el === shadow)) {\n    boxShadowValue = boxShadows[shadow];\n  }\n\n  return {\n    opacity,\n    background: backgroundValue,\n    color: colorValue,\n    borderRadius: borderRadiusValue,\n    boxShadow: boxShadowValue\n  };\n});","map":{"version":3,"sources":["F:/StudentAffairs/students/students/components/SuiBox/SuiBoxRoot.js"],"names":["Box","styled","theme","ownerState","palette","functions","borders","boxShadows","variant","bgColor","color","opacity","borderRadius","shadow","gradients","grey","white","linearGradient","radius","greyColors","validGradients","validColors","validBorderRadius","validBoxShadows","backgroundValue","find","el","main","state","colorValue","borderRadiusValue","boxShadowValue","background","boxShadow"],"mappings":"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","sourcesContent":["import Box from \"@material-ui/core/Box\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\n\r\nexport default styled(Box)(({ theme, ownerState }) => {\r\n  // console.clear();\r\n  // console.log(theme);\r\n  // console.log(ownerState);\r\n  const { palette, functions, borders, boxShadows } = theme;\r\n  const { variant, bgColor, color, opacity, borderRadius, shadow } = ownerState;\r\n\r\n  const { gradients, grey, white } = palette;\r\n  const { linearGradient } = functions;\r\n  const { borderRadius: radius } = borders;\r\n\r\n  const greyColors = {\r\n    \"grey-100\": grey[100],\r\n    \"grey-200\": grey[200],\r\n    \"grey-300\": grey[300],\r\n    \"grey-400\": grey[400],\r\n    \"grey-500\": grey[500],\r\n    \"grey-600\": grey[600],\r\n    \"grey-700\": grey[700],\r\n    \"grey-800\": grey[800],\r\n    \"grey-900\": grey[900],\r\n  };\r\n\r\n  const validGradients = [\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"dark\",\r\n    \"light\",\r\n  ];\r\n\r\n  const validColors = [\r\n    \"transparent\",\r\n    \"white\",\r\n    \"black\",\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"light\",\r\n    \"dark\",\r\n    \"text\",\r\n    \"grey-100\",\r\n    \"grey-200\",\r\n    \"grey-300\",\r\n    \"grey-400\",\r\n    \"grey-500\",\r\n    \"grey-600\",\r\n    \"grey-700\",\r\n    \"grey-800\",\r\n    \"grey-900\",\r\n  ];\r\n\r\n  const validBorderRadius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"section\"];\r\n  const validBoxShadows = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"inset\"];\r\n\r\n  // background value\r\n  let backgroundValue = bgColor;\r\n\r\n  if (variant === \"gradient\") {\r\n    backgroundValue = validGradients.find((el) => el === bgColor)\r\n      ? linearGradient(gradients[bgColor].main, gradients[bgColor].state)\r\n      : white.main;\r\n  } else if (validColors.find((el) => el === bgColor)) {\r\n    backgroundValue = palette[bgColor]\r\n      ? palette[bgColor].main\r\n      : greyColors[bgColor];\r\n  } else {\r\n    backgroundValue = bgColor;\r\n  }\r\n\r\n  // color value\r\n  let colorValue = color;\r\n\r\n  if (validColors.find((el) => el === color)) {\r\n    colorValue = palette[color] ? palette[color].main : greyColors[color];\r\n  }\r\n\r\n  // borderRadius value\r\n  let borderRadiusValue = borderRadius;\r\n\r\n  if (validBorderRadius.find((el) => el === borderRadius)) {\r\n    borderRadiusValue = radius[borderRadius];\r\n  }\r\n\r\n  // boxShadow value\r\n  let boxShadowValue = boxShadows;\r\n\r\n  if (validBoxShadows.find((el) => el === shadow)) {\r\n    boxShadowValue = boxShadows[shadow];\r\n  }\r\n\r\n  return {\r\n    opacity,\r\n    background: backgroundValue,\r\n    color: colorValue,\r\n    borderRadius: borderRadiusValue,\r\n    boxShadow: boxShadowValue,\r\n  };\r\n});\r\n"]},"metadata":{},"sourceType":"module"}