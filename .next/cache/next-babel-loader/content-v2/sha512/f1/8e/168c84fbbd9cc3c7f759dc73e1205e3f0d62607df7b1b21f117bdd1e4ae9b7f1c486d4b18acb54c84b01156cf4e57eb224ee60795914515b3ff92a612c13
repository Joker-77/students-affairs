{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\specialities\\\\specialities-list.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport SpecialityService from \"../../../../Services/SpecialityService\";\nimport AddSpecialityModal from \"../../../../components/Modals/AddSpecialityModal\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\n\nconst SpecialityList = ({}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [selectedSpeciality, setSelectedSpeciality] = React.useState(0);\n  const [initAddSpeciality, setInitAddSpeciality] = React.useState({\n    id: 0,\n    en_name: \"\",\n    ar_name: \"\",\n    code: \"\"\n  });\n  const AddSpecialityScheme = Yup.object().shape({\n    en_name: Yup.string().required(translate(\"{0} is required\", \"English Name\")),\n    ar_name: Yup.string().required(translate(\"{0} is required\", \"Arabic Name\")),\n    code: Yup.string().required(translate(\"{0} is required\", \"Code\"))\n  });\n  const UpdateSpecialityScheme = Yup.object().shape({\n    en_name: Yup.string().required(translate(\"{0} is required\", \"English Name\")),\n    ar_name: Yup.string().required(translate(\"{0} is required\", \"Arabic Name\")),\n    code: Yup.string().required(translate(\"{0} is required\", \"Code\"))\n  });\n\n  const submitAddSpeciality = async (values, setSubmitting) => {\n    setSubmitting(true);\n    SpecialityService.Add(values).then(res => {\n      console.log(\"Speciality\", res);\n      const SpecialityCopy = [res.result, ...Speciality];\n      setSpeciality(SpecialityCopy);\n      setOpen(false);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /************************** Data ****************************/\n\n\n  useEffect(() => {\n    SpecialityService.GetAll().then(res => {\n      console.log(\"Speciality\", res);\n      setSpeciality(res.result);\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  /************************** Handle edit data ****************************/\n\n  const [openUpdateSpeciality, setOpenUpdateSpeciality] = React.useState(false);\n  const [openModalForDetails, setOpenModalForDetails] = React.useState(false);\n\n  const handleOpenUpdateSpeciality = data => {\n    setInitUpdateSpeciality({\n      id: data.id,\n      ar_name: data.ar_name,\n      en_name: data.en_name,\n      ar_name: data.ar_short_name,\n      en_name: data.en_short_name,\n      code: data.code\n    });\n    setOpenUpdateSpeciality(true);\n  };\n\n  const handleCloseUpdateSpeciality = () => {\n    setOpenModalForDetails(false);\n    setDisabled(false);\n    setOpenUpdateSpeciality(false);\n  };\n\n  const [initUpdateSpeciality, setInitUpdateSpeciality] = React.useState({\n    id: 0,\n    ar_name: \"\",\n    en_name: \"\",\n    ar_short_name: \"\",\n    en_short_name: \"\",\n    code: \"\"\n  });\n\n  const submitUpdateSpeciality = async (values, setSubmitting) => {\n    setSubmitting(true);\n    console.log(\"values\", values);\n    SpecialityService.Edit(values).then(res => {\n      console.log(\"Speciality\", res);\n      const SpecialityCopy = [...Speciality].map(item => item.id == res.result.id ? res.result : item);\n      setSpeciality(SpecialityCopy);\n      setOpenUpdateSpeciality(false);\n    }).catch(error => {\n      console.error(\"roles\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /************************** Finish Handle edit data ****************************/\n\n\n  const [disabled, setDisabled] = React.useState(false);\n\n  const handleDetails = data => {\n    setOpenModalForDetails(true);\n    setDisabled(true);\n    handleOpenUpdateSpeciality(data);\n  };\n\n  const [Speciality, setSpeciality] = React.useState(null);\n\n  const renderSpeciality = () => {\n    if (Speciality != null && Speciality.length > 0) {\n      let columns = [{\n        title: translate(\"Id\"),\n        field: \"id\",\n        hidden: true\n      }, {\n        title: translate(\"Arabic Name\"),\n        field: \"ar_name\"\n      }, {\n        title: translate(\"English Name\"),\n        field: \"en_name\"\n      }, {\n        title: translate(\"Arabic Short Name\"),\n        field: \"ar_short_name\"\n      }, {\n        title: translate(\"English Short Name\"),\n        field: \"en_short_name\"\n      }, {\n        title: translate(\"الرمز بالعربي\"),\n        field: \"code\"\n      }, {\n        title: translate(\"الرمز بالإنكليزية\"),\n        field: \"code\"\n      }];\n      let data = Speciality;\n      let options = {\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        maxBodyHeight: \"500px\"\n      };\n      return /*#__PURE__*/_jsxDEV(ActionTable, {\n        Title: translate(\"Speciality List\"),\n        Columns: columns,\n        Data: data,\n        Options: options,\n        Actions: [{\n          tooltip: translate(\"Speciality Details\"),\n          icon: \"details\",\n          onClick: (evt, data) => handleDetails(data)\n        }, {\n          tooltip: translate(\"Edit Speciality\"),\n          icon: \"edit\",\n          onClick: (evt, data) => handleOpenUpdateSpeciality(data)\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      md: 12,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: false,\n        variant: \"contained\",\n        className: classes.submitBtn,\n        onClick: handleOpen,\n        children: translate(\"Add New Speciality\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), renderSpeciality()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddSpecialityModal, {\n      disabled: disabled,\n      title: translate(\"Add Speciality\"),\n      open: open,\n      formScheme: AddSpecialityScheme,\n      handleClose: handleClose,\n      initValues: initAddSpeciality,\n      submitForm: submitAddSpeciality\n    }, \"addSpeciality\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddSpecialityModal, {\n      disabled: disabled,\n      title: !openModalForDetails ? translate(\"Update Speciality\") : translate(\"Speciality Details\"),\n      open: openUpdateSpeciality,\n      formScheme: UpdateSpecialityScheme,\n      handleClose: handleCloseUpdateSpeciality,\n      initValues: initUpdateSpeciality,\n      submitForm: submitUpdateSpeciality\n    }, \"updateSpeciality\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n\nSpecialityList.auth = true;\nSpecialityList.layout = Admin;\nexport default SpecialityList;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/specialities/specialities-list.tsx"],"names":["React","useEffect","Button","Admin","styles","makeStyles","GridContainer","GridItem","ActionTable","Placeholder","SpecialityService","AddSpecialityModal","Yup","useTranslation","SpecialityList","translate","useStyles","classes","open","setOpen","useState","handleOpen","handleClose","selectedSpeciality","setSelectedSpeciality","initAddSpeciality","setInitAddSpeciality","id","en_name","ar_name","code","AddSpecialityScheme","object","shape","string","required","UpdateSpecialityScheme","submitAddSpeciality","values","setSubmitting","Add","then","res","console","log","SpecialityCopy","result","Speciality","setSpeciality","catch","error","finally","GetAll","openUpdateSpeciality","setOpenUpdateSpeciality","openModalForDetails","setOpenModalForDetails","handleOpenUpdateSpeciality","data","setInitUpdateSpeciality","ar_short_name","en_short_name","handleCloseUpdateSpeciality","setDisabled","initUpdateSpeciality","submitUpdateSpeciality","Edit","map","item","disabled","handleDetails","renderSpeciality","length","columns","title","field","hidden","options","headerStyle","backgroundColor","color","fontWeight","filtering","paging","maxBodyHeight","tooltip","icon","onClick","evt","submitBtn","auth","layout"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\r\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\r\nimport { ISpecialityModel } from \"../../../../Models/ApiResponse/SpecialityModel\";\r\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\r\nimport Placeholder from \"../../../../Utility/Placeholders\";\r\nimport SpecialityService from \"../../../../Services/SpecialityService\";\r\nimport AddSpecialityModal from \"../../../../components/Modals/AddSpecialityModal\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\ninterface ISpecialityListProps {}\r\nconst SpecialityList: React.FC<ISpecialityListProps> = ({}) => {\r\n  const { translate } = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [selectedSpeciality, setSelectedSpeciality] = React.useState<number>(0);\r\n  const [initAddSpeciality, setInitAddSpeciality] =\r\n    React.useState<ISpecialityModel>({\r\n      id: 0,\r\n      en_name: \"\",\r\n      ar_name: \"\",\r\n      code: \"\",\r\n    });\r\n  const AddSpecialityScheme = Yup.object().shape({\r\n    en_name: Yup.string().required(\r\n      translate(\"{0} is required\", \"English Name\")\r\n    ),\r\n    ar_name: Yup.string().required(translate(\"{0} is required\", \"Arabic Name\")),\r\n    code: Yup.string().required(translate(\"{0} is required\", \"Code\")),\r\n  });\r\n  const UpdateSpecialityScheme = Yup.object().shape({\r\n    en_name: Yup.string().required(\r\n      translate(\"{0} is required\", \"English Name\")\r\n    ),\r\n    ar_name: Yup.string().required(translate(\"{0} is required\", \"Arabic Name\")),\r\n    code: Yup.string().required(translate(\"{0} is required\", \"Code\")),\r\n  });\r\n  const submitAddSpeciality = async (values: any, setSubmitting) => {\r\n    setSubmitting(true);\r\n    SpecialityService.Add(values)\r\n      .then((res) => {\r\n        console.log(\"Speciality\", res);\r\n        const SpecialityCopy = [res.result, ...Speciality];\r\n        setSpeciality(SpecialityCopy);\r\n        setOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  /************************** Data ****************************/\r\n  useEffect(() => {\r\n    SpecialityService.GetAll()\r\n      .then((res) => {\r\n        console.log(\"Speciality\", res);\r\n        setSpeciality(res.result);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      });\r\n  }, []);\r\n  /************************** Finish Data ****************************/\r\n  /************************** Handle edit data ****************************/\r\n\r\n  const [openUpdateSpeciality, setOpenUpdateSpeciality] = React.useState(false);\r\n  const [openModalForDetails, setOpenModalForDetails] = React.useState(false);\r\n  const handleOpenUpdateSpeciality = (data: ISpecialityModel) => {\r\n    setInitUpdateSpeciality({\r\n      id: data.id,\r\n      ar_name: data.ar_name,\r\n      en_name: data.en_name,\r\n      ar_name: data.ar_short_name,\r\n      en_name: data.en_short_name,\r\n      code: data.code,\r\n    } as ISpecialityModel);\r\n    setOpenUpdateSpeciality(true);\r\n  };\r\n  const handleCloseUpdateSpeciality = () => {\r\n    setOpenModalForDetails(false);\r\n    setDisabled(false);\r\n    setOpenUpdateSpeciality(false);\r\n  };\r\n  const [initUpdateSpeciality, setInitUpdateSpeciality] =\r\n    React.useState<ISpecialityModel>({\r\n      id: 0,\r\n      ar_name: \"\",\r\n      en_name: \"\",\r\n      ar_short_name: \"\",\r\n      en_short_name: \"\",\r\n      code: \"\",\r\n    });\r\n  const submitUpdateSpeciality = async (values: any, setSubmitting) => {\r\n    setSubmitting(true);\r\n    console.log(\"values\", values);\r\n    SpecialityService.Edit(values)\r\n      .then((res) => {\r\n        console.log(\"Speciality\", res);\r\n        const SpecialityCopy = [...Speciality].map((item) =>\r\n          item.id == res.result.id ? res.result : item\r\n        );\r\n        setSpeciality(SpecialityCopy);\r\n        setOpenUpdateSpeciality(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"roles\", error);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  /************************** Finish Handle edit data ****************************/\r\n  const [disabled, setDisabled] = React.useState<boolean>(false);\r\n  const handleDetails = (data: any) => {\r\n    setOpenModalForDetails(true);\r\n    setDisabled(true);\r\n    handleOpenUpdateSpeciality(data);\r\n  };\r\n\r\n  const [Speciality, setSpeciality] = React.useState<ISpecialityModel[]>(null);\r\n  const renderSpeciality = () => {\r\n    if (Speciality != null && Speciality.length > 0) {\r\n      let columns = [\r\n        {\r\n          title: translate(\"Id\"),\r\n          field: \"id\",\r\n          hidden: true,\r\n        },\r\n        {\r\n          title: translate(\"Arabic Name\"),\r\n          field: \"ar_name\",\r\n        },\r\n        {\r\n          title: translate(\"English Name\"),\r\n          field: \"en_name\",\r\n        },\r\n        {\r\n          title: translate(\"Arabic Short Name\"),\r\n          field: \"ar_short_name\",\r\n        },\r\n        {\r\n          title: translate(\"English Short Name\"),\r\n          field: \"en_short_name\",\r\n        },\r\n        {\r\n          title: translate(\"الرمز بالعربي\"),\r\n          field: \"code\",\r\n        },\r\n        {\r\n          title: translate(\"الرمز بالإنكليزية\"),\r\n          field: \"code\",\r\n        },\r\n      ];\r\n      let data = Speciality;\r\n      let options = {\r\n        headerStyle: {\r\n          backgroundColor: \"#01579b\",\r\n          color: \"#FFF\",\r\n          fontWeight: \"bold\",\r\n        },\r\n        filtering: false,\r\n        paging: true,\r\n        maxBodyHeight: \"500px\",\r\n      };\r\n      return (\r\n        <ActionTable\r\n          Title={translate(\"Speciality List\")}\r\n          Columns={columns}\r\n          Data={data}\r\n          Options={options}\r\n          Actions={[\r\n            {\r\n              tooltip: translate(\"Speciality Details\"),\r\n              icon: \"details\",\r\n              onClick: (evt, data) => handleDetails(data),\r\n            },\r\n            {\r\n              tooltip: translate(\"Edit Speciality\"),\r\n              icon: \"edit\",\r\n              onClick: (evt, data) => handleOpenUpdateSpeciality(data),\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n    } else return <Placeholder />;\r\n  };\r\n  return (\r\n    <GridContainer>\r\n      <GridItem md={12}>\r\n        <Button\r\n          disabled={false}\r\n          variant=\"contained\"\r\n          className={classes.submitBtn}\r\n          onClick={handleOpen}\r\n        >\r\n          {translate(\"Add New Speciality\")}\r\n        </Button>\r\n        {renderSpeciality()}\r\n      </GridItem>\r\n      <AddSpecialityModal\r\n        disabled={disabled}\r\n        key={\"addSpeciality\"}\r\n        title={translate(\"Add Speciality\")}\r\n        open={open}\r\n        formScheme={AddSpecialityScheme}\r\n        handleClose={handleClose}\r\n        initValues={initAddSpeciality}\r\n        submitForm={submitAddSpeciality}\r\n      ></AddSpecialityModal>\r\n      <AddSpecialityModal\r\n        disabled={disabled}\r\n        key={\"updateSpeciality\"}\r\n        title={\r\n          !openModalForDetails\r\n            ? translate(\"Update Speciality\")\r\n            : translate(\"Speciality Details\")\r\n        }\r\n        open={openUpdateSpeciality}\r\n        formScheme={UpdateSpecialityScheme}\r\n        handleClose={handleCloseUpdateSpeciality}\r\n        initValues={initUpdateSpeciality}\r\n        submitForm={submitUpdateSpeciality}\r\n      ></AddSpecialityModal>\r\n    </GridContainer>\r\n  );\r\n};\r\n(SpecialityList as any).auth = true;\r\n(SpecialityList as any).layout = Admin;\r\nexport default SpecialityList;\r\n"]},"metadata":{},"sourceType":"module"}