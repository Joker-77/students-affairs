{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport apiConnector from \"./TokenizedApiClient\";\n\nvar PlanService = /*#__PURE__*/function () {\n  function PlanService() {\n    _classCallCheck(this, PlanService);\n  }\n\n  _createClass(PlanService, null, [{\n    key: \"GetAll\",\n    value: function () {\n      var _GetAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var listUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                listUrl = process.env.LIST_PROGRAMS_URL;\n                _context.next = 3;\n                return apiConnector.get(listUrl).then(function (response) {\n                  if (response && response.data) {\n                    return response.data;\n                  }\n                }).catch(function (error) {\n                  console.log(\"Api Error:\", error);\n                  throw error;\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function GetAll() {\n        return _GetAll.apply(this, arguments);\n      }\n\n      return GetAll;\n    }()\n  }, {\n    key: \"AddCourse\",\n    value: function () {\n      var _AddCourse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        var listUrl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                listUrl = process.env.ADD_PROGRAMS_URL;\n                _context2.next = 3;\n                return apiConnector.post(listUrl, payload).then(function (response) {\n                  if (response && response.data) {\n                    return response.data;\n                  }\n                }).catch(function (error) {\n                  console.log(\"Api Error:\", error);\n                  throw error;\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function AddCourse(_x) {\n        return _AddCourse.apply(this, arguments);\n      }\n\n      return AddCourse;\n    }()\n  }, {\n    key: \"GetProgramCourses\",\n    value: function () {\n      var _GetProgramCourses = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(programId, yearId, eduYear) {\n        var listUrl;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                listUrl = process.env.LIST_PLAN_URL;\n                _context3.next = 3;\n                return apiConnector.get(listUrl + \"?program_id=\".concat(programId, \"&year_id=\").concat(yearId, \"&edu_year_id=\").concat(eduYear)).then(function (response) {\n                  if (response && response.data) {\n                    return response.data;\n                  }\n                }).catch(function (error) {\n                  console.log(\"Api Error:\", error);\n                  throw error;\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function GetProgramCourses(_x2, _x3, _x4) {\n        return _GetProgramCourses.apply(this, arguments);\n      }\n\n      return GetProgramCourses;\n    }()\n  }, {\n    key: \"DeleteCourse\",\n    value: function () {\n      var _DeleteCourse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_id) {\n        var delUrl;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                delUrl = process.env.DELETE_PLAN_URL;\n                _context4.next = 3;\n                return apiConnector.post(delUrl, {\n                  id: parseInt(_id)\n                }).then(function (response) {\n                  if (response && response.data) {\n                    return response.data;\n                  }\n                }).catch(function (error) {\n                  console.log(\"Api Error:\", error);\n                  throw error;\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function DeleteCourse(_x5) {\n        return _DeleteCourse.apply(this, arguments);\n      }\n\n      return DeleteCourse;\n    }()\n  }]);\n\n  return PlanService;\n}();\n\nexport { PlanService as default };","map":null,"metadata":{},"sourceType":"module"}