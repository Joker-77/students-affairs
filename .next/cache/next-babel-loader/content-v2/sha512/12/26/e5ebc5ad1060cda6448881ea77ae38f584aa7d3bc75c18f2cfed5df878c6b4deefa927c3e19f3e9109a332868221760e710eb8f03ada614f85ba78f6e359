{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\candidates\\\\candidates-list.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { Button, AccordionDetails, Accordion, Typography } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport { ExportToCsv } from \"export-to-csv\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport CandidateService from \"../../../../Services/CandidateService\";\nimport SearchAddCandidateModal from \"../../../../components/Modals/SearchAddCandidateModal\";\nimport * as Yup from \"yup\";\nimport { useRouter } from 'next/router';\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { setCandidate, useAppDispatch } from \"../../../../redux\";\nimport AddTestResultsFileModal from \"../../../../components/Modals/AddTestResultsFileModal\";\nimport AddCandidateOutSideMinistryModal from \"../../../../components/Modals/AddCandidateOutSideMinistryModal\";\nimport _ from \"lodash\";\nimport { Description } from \"@material-ui/icons\";\n\nconst CandidatesList = ({\n  forRegistrations = false,\n  title,\n  customColumns\n}) => {\n  const router = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const [Candidates, setCandidates] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [searchResult, setSearchResult] = React.useState(null);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setSearchResult(null);\n    setOpen(false);\n  };\n\n  const [initAddCandidate, setInitAddCandidate] = React.useState({\n    subscription_number: \"\",\n    year: \"\",\n    governorate: \"\",\n    round: \"\"\n  });\n  const AddCandidateScheme = Yup.object().shape({\n    subscription_number: Yup.string().required(translate(\"{0} is required\", \"Subscription number\")),\n    year: Yup.string().required(translate(\"{0} is required\", \"Year\")),\n    governorate: Yup.string().required(translate(\"{0} is required\", \"City\")),\n    round: Yup.string().required(translate(\"{0} is required\", \"Round\"))\n  });\n  const [openTestResults, setOpenTestResults] = React.useState(false);\n\n  const handleOpenTestResults = () => {\n    setOpenTestResults(true);\n  };\n\n  const handleCloseTestResults = () => {\n    setOpenTestResults(false);\n  };\n\n  const [openOutsideCandidate, setOpenOutsideCandidate] = React.useState(false);\n\n  const handleOpenOutsideCandidate = () => {\n    setOpenOutsideCandidate(true);\n  };\n\n  const handleCloseOutsideCandidate = () => {\n    setOpenOutsideCandidate(false);\n  };\n\n  const submitSearchCandidate = async (values, setSubmitting) => {\n    setSubmitting(true);\n    CandidateService.Search(values).then(res => {\n      setSearchResult({\n        found: Boolean(res.result),\n        result: res.result\n      }); // setOpen(false);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n    ;\n  };\n\n  const submitAddCandidate = async (values, setSubmitting) => {\n    setSubmitting(true);\n    CandidateService.AddAfterSearch(values).then(res => {\n      const candidatesCopy = [res.result, ...Candidates];\n      setCandidates(candidatesCopy);\n      handleClose();\n      dispatch(setCandidate(res.result));\n      router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/candidate-details`);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n    ;\n  };\n  /************************** Data ****************************/\n\n\n  useEffect(() => {\n    setLoading(true);\n    let items = [];\n  }, []);\n  /************************** Finish Data ****************************/\n\n  let columns = [{\n    title: translate(\"Id\"),\n    field: \"id\",\n    hidden: true,\n    filtering: false\n  }, {\n    title: translate(\"Name\"),\n    field: \"full_name\",\n    filtering: false\n  }, {\n    title: translate(\"Father\"),\n    field: \"father.first_name\",\n    hidden: true,\n    filtering: false\n  }, {\n    title: translate(\"Mother\"),\n    field: \"mother.first_name\",\n    hidden: true,\n    filtering: false\n  }, {\n    title: translate(\"Registeration number\"),\n    field: \"registeration_number\",\n    filtering: false,\n    type: \"string\"\n  }, {\n    title: translate(\"Subscription number\"),\n    field: \"certificates[0].subscription_number\",\n    filtering: false\n  }, {\n    title: translate(\"City\"),\n    field: \"certificates[0].city\",\n    filtering: false\n  }, {\n    title: translate(\"Round\"),\n    field: \"certificates[0].round\",\n    filtering: false\n  } // {\n  //     title: translate(\"Result\"),\n  //     field: \"certificates[0].result\",\n  // },\n  ];\n\n  const renderCandidates = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(Placeholder, {\n      loading: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }, this);\n\n    if (Candidates != null && Candidates.length > 0) {\n      let data = Candidates;\n      let options = {\n        exportAllData: true,\n        exportButton: true,\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: true,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\"\n      };\n      const btnLabel = !forRegistrations ? \"Candidate Details\" : \"Edit Registration\";\n      const btnPage = !forRegistrations ? \"candidate-details\" : \"edit-registration\";\n      let actions = [{\n        icon: () => /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            minWidth: 140\n          },\n          color: 'primary',\n          children: translate(btnLabel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }, this),\n        onClick: (evt, data) => {\n          dispatch(setCandidate(data));\n          router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/${btnPage}`);\n        }\n      }];\n      return /*#__PURE__*/_jsxDEV(ActionTable, {\n        Title: title || translate(\"Candidates List\"),\n        Columns: customColumns || columns,\n        Data: data.map(item => {\n          var _item$person, _item$father, _item$person2;\n\n          return _objectSpread(_objectSpread({}, item), {}, {\n            full_name: `${(_item$person = item.person) === null || _item$person === void 0 ? void 0 : _item$person.first_name} ${(_item$father = item.father) === null || _item$father === void 0 ? void 0 : _item$father.first_name} ${(_item$person2 = item.person) === null || _item$person2 === void 0 ? void 0 : _item$person2.last_name}`\n          });\n        }),\n        Options: options,\n        Actions: actions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }, this);\n  }; // Dynamic Export\n\n\n  const [showExportColumns, setShowExportColumns] = React.useState(false);\n  const [selectedColumns, setSelectedColumns] = React.useState([]);\n  const [checked, setChecked] = React.useState([]);\n\n  const handleExportData = () => {\n    setShowExportColumns(!showExportColumns);\n  };\n\n  const csvOptions = {\n    fieldSeparator: \",\",\n    quoteStrings: '\"',\n    decimalSeparator: \".\",\n    showLabels: true,\n    useBom: true,\n    useKeysAsHeaders: false,\n    headers: selectedColumns.map(c => c.title)\n  };\n  const csvExporter = new ExportToCsv(csvOptions);\n\n  const generateExcel = () => {\n    csvExporter.generateCsv(Candidates.map(ct => {\n      let object = {};\n      selectedColumns.forEach((item, index) => {\n        var _ct$person, _ct$father, _ct$person2, _$get;\n\n        if (item.field == \"full_name\") _.set(object, `col ${index}`, `${(_ct$person = ct.person) === null || _ct$person === void 0 ? void 0 : _ct$person.first_name} ${(_ct$father = ct.father) === null || _ct$father === void 0 ? void 0 : _ct$father.first_name} ${(_ct$person2 = ct.person) === null || _ct$person2 === void 0 ? void 0 : _ct$person2.last_name}`);else _.set(object, `col ${index}`, (_$get = _.get(ct, item.field)) !== null && _$get !== void 0 ? _$get : \"\");\n      });\n      console.log(object);\n      return object;\n    }));\n  };\n\n  const handleCheck = event => {\n    var updatedList = [...checked];\n\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n\n    setChecked(updatedList);\n    setSelectedColumns(columns.filter(item => {\n      return updatedList.includes(item.field);\n    }));\n  };\n\n  const handleAllExportData = () => {\n    let allColumns = [{\n      title: \"رقم التسجيل\",\n      field: \"registeration_number\",\n      hidden: true,\n      filtering: false\n    }, {\n      title: \"الاسم الثلاثي\",\n      field: \"full_name\",\n      filtering: false\n    }, {\n      title: \"رقم الاكتتاب\",\n      field: \"certificates[0].subscription_number\",\n      hidden: true,\n      filtering: false\n    }, {\n      title: \"المحافظة\",\n      field: \"certificates[0].city\",\n      filtering: false,\n      type: \"string\"\n    }, {\n      title: \"الدورة\",\n      field: \"certificates[0].round\",\n      filtering: false\n    }, {\n      title: \"2400\",\n      field: \"certificates[0].result\",\n      filtering: false\n    }, {\n      title: \"رياضيات\",\n      field: \"certificates[0].details[4].value\",\n      filtering: false\n    }, {\n      title: \"فيزياء\",\n      field: \"certificates[0].details[5].value\",\n      filtering: false\n    }, {\n      title: \"كيمياء\",\n      field: \"certificates[0].details[6].value\",\n      filtering: false\n    }, {\n      title: \"3600\",\n      field: \"registerations[0].mark_3600\",\n      filtering: false\n    }, {\n      title: \"الهاتف\",\n      field: \"person.phones[0].phone\",\n      filtering: false\n    }, {\n      title: \"امتحان قبول الرياضيات\",\n      field: \"registerations[0].math\",\n      filtering: false\n    }, {\n      title: \"امتحان قبول الفيزياء\",\n      field: \"registerations[0].physics\",\n      filtering: false\n    }, {\n      title: \"3400\",\n      field: \"registerations[0].mark_3400\",\n      filtering: false\n    }, {\n      title: \"أولى\",\n      field: \"desires[0].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"ثانية\",\n      field: \"desires[1].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"ثالثة\",\n      field: \"desires[2].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"رابعة\",\n      field: \"desires[3].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"خامسة\",\n      field: \"desires[4].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"سادسة\",\n      field: \"desires[5].speciality.ar_name\",\n      filtering: false\n    }, {\n      title: \"مثبتة\",\n      field: \"\",\n      filtering: false\n    }, {\n      title: \"مكان القبول\",\n      field: \"registerations[0].accept_place\",\n      filtering: false\n    }, {\n      title: \"حالة القبول\",\n      field: \"registerations[0].status\",\n      filtering: false\n    }];\n    let localCsvOptions = {\n      fieldSeparator: \",\",\n      quoteStrings: '\"',\n      decimalSeparator: \".\",\n      showLabels: true,\n      useBom: true,\n      useKeysAsHeaders: false,\n      headers: allColumns.map(c => c.title)\n    };\n    let localCsvExporter = new ExportToCsv(localCsvOptions);\n    setTimeout(() => {\n      localCsvExporter.generateCsv(Candidates.map(ct => {\n        let object = {};\n        allColumns.forEach((item, index) => {\n          var _ct$person3, _ct$father2, _ct$person4, _$get2;\n\n          if (item.field == \"full_name\") _.set(object, `col ${index}`, `${(_ct$person3 = ct.person) === null || _ct$person3 === void 0 ? void 0 : _ct$person3.first_name} ${(_ct$father2 = ct.father) === null || _ct$father2 === void 0 ? void 0 : _ct$father2.first_name} ${(_ct$person4 = ct.person) === null || _ct$person4 === void 0 ? void 0 : _ct$person4.last_name}`);else if (item.field == \"registerations[0].mark_3600\") {\n            var _ct$certificates$, _ct$certificates$2, _ct$certificates$2$de, _ct$certificates$3, _ct$certificates$3$de, _ct$certificates$4, _ct$certificates$4$de;\n\n            let value = parseInt(ct === null || ct === void 0 ? void 0 : (_ct$certificates$ = ct.certificates[0]) === null || _ct$certificates$ === void 0 ? void 0 : _ct$certificates$.result) + parseInt((_ct$certificates$2 = ct.certificates[0]) === null || _ct$certificates$2 === void 0 ? void 0 : (_ct$certificates$2$de = _ct$certificates$2.details[4]) === null || _ct$certificates$2$de === void 0 ? void 0 : _ct$certificates$2$de.value) + parseInt((_ct$certificates$3 = ct.certificates[0]) === null || _ct$certificates$3 === void 0 ? void 0 : (_ct$certificates$3$de = _ct$certificates$3.details[5]) === null || _ct$certificates$3$de === void 0 ? void 0 : _ct$certificates$3$de.value) + parseInt((_ct$certificates$4 = ct.certificates[0]) === null || _ct$certificates$4 === void 0 ? void 0 : (_ct$certificates$4$de = _ct$certificates$4.details[6]) === null || _ct$certificates$4$de === void 0 ? void 0 : _ct$certificates$4$de.value);\n\n            _.set(object, `col ${index}`, `${value}`);\n          } else if (item.field == \"registerations[0].mark_3400\") {\n            var _ct$certificates$5, _ct$registerations$, _ct$registerations$2;\n\n            let value = parseInt(ct === null || ct === void 0 ? void 0 : (_ct$certificates$5 = ct.certificates[0]) === null || _ct$certificates$5 === void 0 ? void 0 : _ct$certificates$5.result) + parseInt(ct === null || ct === void 0 ? void 0 : (_ct$registerations$ = ct.registerations[0]) === null || _ct$registerations$ === void 0 ? void 0 : _ct$registerations$.math) + parseInt(ct === null || ct === void 0 ? void 0 : (_ct$registerations$2 = ct.registerations[0]) === null || _ct$registerations$2 === void 0 ? void 0 : _ct$registerations$2.physics);\n\n            _.set(object, `col ${index}`, `${value}`);\n          } else _.set(object, `col ${index}`, (_$get2 = _.get(ct, item.field)) !== null && _$get2 !== void 0 ? _$get2 : \"\");\n        });\n        return object;\n      }));\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      md: 12,\n      children: [!forRegistrations && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleOpen,\n          children: translate(\"Add New Candidate\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleOpenOutsideCandidate,\n          children: [translate(\"Add Candidate\"), \" \", translate(\"out-side of ministry data\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"gradient\",\n          onClick: handleOpenTestResults,\n          color: 'dark',\n          children: translate(\"Add acceptance test results\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"gradient\",\n          onClick: handleExportData,\n          color: 'dark',\n          children: translate(\"Export\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"gradient\",\n          onClick: handleAllExportData,\n          color: 'dark',\n          children: translate(\"تصدير كامل المعلومات\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }, this), showExportColumns && /*#__PURE__*/_jsxDEV(GridItem, {\n        style: {\n          marginBottom: \"1em\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                md: 12,\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    backgroundColor: \"lightgray\",\n                    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n                    padding: \"0em 1.2em\",\n                    margin: \"0em 0em .5em 0em\"\n                  },\n                  children: translate(\"Select Columns\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                md: 12,\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  className: \"list-container\",\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  },\n                  children: columns // .filter((item) => !item.hidden)\n                  .map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      value: item.field,\n                      type: \"checkbox\",\n                      onChange: handleCheck\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 57\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 12,\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      margin: \"0px 5px\"\n                    },\n                    disabled: false,\n                    variant: \"contained\",\n                    className: classes.successText,\n                    onClick: generateExcel,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        padding: \"0px 0px 0px 10px\"\n                      },\n                      children: translate(\"Export\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 21\n      }, this), renderCandidates()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchAddCandidateModal, {\n      searchResult: searchResult,\n      onAddClick: submitAddCandidate,\n      title: translate(\"Add Candidate\"),\n      open: open,\n      formScheme: AddCandidateScheme,\n      handleClose: handleClose,\n      initValues: initAddCandidate,\n      submitForm: submitSearchCandidate\n    }, \"addCandidate\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTestResultsFileModal, {\n      title: translate(\"Add acceptance test results\"),\n      open: openTestResults,\n      handleClose: handleCloseTestResults,\n      submitForm: () => handleCloseTestResults()\n    }, \"addAcceptanceTestResults\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddCandidateOutSideMinistryModal, {\n      // title={translate(\"Add acceptance test results\")}\n      open: openOutsideCandidate,\n      handleClose: handleCloseOutsideCandidate\n    }, \"addOutsideCandidate\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 9\n  }, this);\n};\n\nCandidatesList.auth = true;\nCandidatesList.layout = Admin;\nexport default CandidatesList;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/candidates/candidates-list.tsx"],"names":["React","useEffect","Button","AccordionDetails","Accordion","Typography","Admin","styles","makeStyles","GridContainer","GridItem","ExportToCsv","ActionTable","Placeholder","CandidateService","SearchAddCandidateModal","Yup","useRouter","useTranslation","SuiButton","setCandidate","useAppDispatch","AddTestResultsFileModal","AddCandidateOutSideMinistryModal","_","Description","CandidatesList","forRegistrations","title","customColumns","router","translate","useStyles","classes","dispatch","Candidates","setCandidates","useState","loading","setLoading","open","setOpen","searchResult","setSearchResult","handleOpen","handleClose","initAddCandidate","setInitAddCandidate","subscription_number","year","governorate","round","AddCandidateScheme","object","shape","string","required","openTestResults","setOpenTestResults","handleOpenTestResults","handleCloseTestResults","openOutsideCandidate","setOpenOutsideCandidate","handleOpenOutsideCandidate","handleCloseOutsideCandidate","submitSearchCandidate","values","setSubmitting","Search","then","res","found","Boolean","result","catch","error","console","finally","submitAddCandidate","AddAfterSearch","candidatesCopy","push","locale","items","columns","field","hidden","filtering","type","renderCandidates","length","data","options","exportAllData","exportButton","actionsColumnIndex","headerStyle","backgroundColor","color","fontWeight","paging","pageSize","maxBodyHeight","btnLabel","btnPage","actions","icon","minWidth","onClick","evt","map","item","full_name","person","first_name","father","last_name","showExportColumns","setShowExportColumns","selectedColumns","setSelectedColumns","checked","setChecked","handleExportData","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","useBom","useKeysAsHeaders","headers","c","csvExporter","generateExcel","generateCsv","ct","forEach","index","set","get","log","handleCheck","event","updatedList","target","value","splice","indexOf","filter","includes","handleAllExportData","allColumns","localCsvOptions","localCsvExporter","setTimeout","parseInt","certificates","details","registerations","math","physics","marginLeft","submitBtn","marginBottom","display","justifyContent","boxShadow","padding","margin","successText","auth","layout"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, AccordionDetails, Accordion, Typography } from \"@material-ui/core\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\r\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\r\nimport { ExportToCsv } from \"export-to-csv\";\r\nimport {\r\n    ICandidateModel,\r\n} from \"../../../../Models/ApiResponse/CandidateModel\";\r\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\r\nimport Placeholder from \"../../../../Utility/Placeholders\";\r\nimport CandidateService from \"../../../../Services/CandidateService\";\r\nimport SearchAddCandidateModal from \"../../../../components/Modals/SearchAddCandidateModal\";\r\nimport * as Yup from \"yup\";\r\nimport { useRouter } from 'next/router';\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport { setCandidate, useAppDispatch } from \"../../../../redux\";\r\nimport AddTestResultsFileModal from \"../../../../components/Modals/AddTestResultsFileModal\";\r\nimport AddCandidateOutSideMinistryModal from \"../../../../components/Modals/AddCandidateOutSideMinistryModal\";\r\nimport _ from \"lodash\";\r\nimport { Description } from \"@material-ui/icons\";\r\nimport DesireService from '../../../../Services/DesireService';\r\n\r\ninterface ICandidatesListProps {\r\n    forRegistrations: boolean;\r\n    title: string;\r\n    customColumns: any[];\r\n}\r\nconst CandidatesList: React.FC<ICandidatesListProps> = ({\r\n    forRegistrations = false,\r\n    title,\r\n    customColumns,\r\n}) => {\r\n\r\n    const router = useRouter();\r\n    const { translate } = useTranslation();\r\n    const useStyles = makeStyles(styles);\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const [Candidates, setCandidates] = React.useState<ICandidateModel[]>(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [searchResult, setSearchResult] = React.useState(null);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setSearchResult(null);\r\n        setOpen(false);\r\n    };\r\n    const [initAddCandidate, setInitAddCandidate] = React.useState<object>({\r\n        subscription_number: \"\",\r\n        year: \"\",\r\n        governorate: \"\",\r\n        round: \"\",\r\n    });\r\n\r\n    const AddCandidateScheme = Yup.object().shape({\r\n        subscription_number: Yup.string().required(translate(\"{0} is required\", \"Subscription number\")),\r\n        year: Yup.string().required(translate(\"{0} is required\", \"Year\")),\r\n        governorate: Yup.string().required(translate(\"{0} is required\", \"City\")),\r\n        round: Yup.string().required(translate(\"{0} is required\", \"Round\")),\r\n    });\r\n\r\n    const [openTestResults, setOpenTestResults] = React.useState(false);\r\n\r\n    const handleOpenTestResults = () => {\r\n        setOpenTestResults(true);\r\n    };\r\n    const handleCloseTestResults = () => {\r\n        setOpenTestResults(false);\r\n    };\r\n\r\n    const [openOutsideCandidate, setOpenOutsideCandidate] = React.useState(false);\r\n\r\n    const handleOpenOutsideCandidate = () => {\r\n        setOpenOutsideCandidate(true);\r\n    };\r\n    const handleCloseOutsideCandidate = () => {\r\n        setOpenOutsideCandidate(false);\r\n    };\r\n\r\n    const submitSearchCandidate = async (values: any, setSubmitting) => {\r\n        setSubmitting(true);\r\n        CandidateService.Search(values)\r\n            .then((res) => {\r\n                setSearchResult({ found: Boolean(res.result), result: res.result });\r\n                // setOpen(false);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"error\", error);\r\n            })\r\n            .finally(() => {\r\n                setSubmitting(false);\r\n            });\r\n        ;\r\n    };\r\n\r\n    const submitAddCandidate = async (values: any, setSubmitting) => {\r\n        setSubmitting(true);\r\n        CandidateService.AddAfterSearch(values)\r\n            .then((res) => {\r\n                const candidatesCopy = [res.result, ...Candidates];\r\n                setCandidates(candidatesCopy);\r\n                handleClose();\r\n                dispatch(setCandidate(res.result));\r\n                router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/candidate-details`)\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"error\", error);\r\n            })\r\n            .finally(() => {\r\n                setSubmitting(false);\r\n            });\r\n        ;\r\n    };\r\n\r\n    /************************** Data ****************************/\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let items = [];\r\n        \r\n    }, []);\r\n\r\n\r\n    /************************** Finish Data ****************************/\r\n    let columns = [\r\n        {\r\n            title: translate(\"Id\"),\r\n            field: \"id\",\r\n            hidden: true,\r\n            filtering: false,\r\n        },\r\n        {\r\n            title: translate(\"Name\"),\r\n            field: \"full_name\",\r\n            filtering: false,\r\n        },\r\n        {\r\n            title: translate(\"Father\"),\r\n            field: \"father.first_name\",\r\n            hidden: true,\r\n            filtering: false,\r\n        },\r\n        {\r\n            title: translate(\"Mother\"),\r\n            field: \"mother.first_name\",\r\n            hidden: true,\r\n            filtering: false,\r\n        },\r\n        {\r\n            title: translate(\"Registeration number\"),\r\n            field: \"registeration_number\",\r\n            filtering: false,\r\n            type: \"string\",\r\n        },\r\n        {\r\n            title: translate(\"Subscription number\"),\r\n            field: \"certificates[0].subscription_number\",\r\n            filtering: false,\r\n        },\r\n        {\r\n            title: translate(\"City\"),\r\n            field: \"certificates[0].city\",\r\n            filtering: false,\r\n        },\r\n        {\r\n            title: translate(\"Round\"),\r\n            field: \"certificates[0].round\",\r\n            filtering: false,\r\n        },\r\n        // {\r\n        //     title: translate(\"Result\"),\r\n        //     field: \"certificates[0].result\",\r\n        // },\r\n    ];\r\n    const renderCandidates = () => {\r\n        if (loading) return <Placeholder loading />\r\n        if (Candidates != null && Candidates.length > 0) {\r\n            let data = Candidates;\r\n            let options = {\r\n                exportAllData: true,\r\n                exportButton: true,\r\n                actionsColumnIndex: -1,\r\n                headerStyle: {\r\n                    backgroundColor: \"#01579b\",\r\n                    color: \"#FFF\",\r\n                    fontWeight: \"bold\",\r\n                },\r\n                filtering: true,\r\n                paging: true,\r\n                pageSize: 10,\r\n                maxBodyHeight: \"500px\",\r\n            };\r\n            const btnLabel = !forRegistrations ? \"Candidate Details\" : \"Edit Registration\";\r\n            const btnPage = !forRegistrations ? \"candidate-details\" : \"edit-registration\";\r\n            let actions = [\r\n                {\r\n                    icon: () => <SuiButton style={{ minWidth: 140 }} color={'primary'}>{translate(btnLabel)}</SuiButton>,\r\n                    onClick: (evt, data) => {\r\n                        dispatch(setCandidate(data));\r\n                        router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/${btnPage}`)\r\n                    },\r\n                },\r\n            ];\r\n            return (\r\n                <ActionTable\r\n                    Title={title || translate(\"Candidates List\")}\r\n                    Columns={customColumns || columns}\r\n                    Data={data.map(item => { return { ...item, full_name: `${item.person ?.first_name} ${item.father ?.first_name} ${item.person ?.last_name}` } })}\r\n                    Options={options}\r\n                    Actions={actions}\r\n                />\r\n            );\r\n        } else return <Placeholder />;\r\n    };\r\n\r\n    // Dynamic Export\r\n    const [showExportColumns, setShowExportColumns] = React.useState(false);\r\n    const [selectedColumns, setSelectedColumns] = React.useState([]);\r\n    const [checked, setChecked] = React.useState([]);\r\n    const handleExportData = () => {\r\n        setShowExportColumns(!showExportColumns);\r\n    };\r\n    const csvOptions = {\r\n        fieldSeparator: \",\",\r\n        quoteStrings: '\"',\r\n        decimalSeparator: \".\",\r\n        showLabels: true,\r\n        useBom: true,\r\n        useKeysAsHeaders: false,\r\n        headers: selectedColumns.map((c) => c.title),\r\n    };\r\n    const csvExporter = new ExportToCsv(csvOptions);\r\n    const generateExcel = () => {\r\n        csvExporter.generateCsv(\r\n            Candidates.map((ct) => {\r\n                let object = {};\r\n                selectedColumns.forEach((item, index) => {\r\n                    if (item.field == \"full_name\")\r\n                        _.set(object, `col ${index}`, `${ct.person ?.first_name} ${ct.father ?.first_name} ${ct.person ?.last_name}`);\r\n                    else\r\n                        _.set(object, `col ${index}`, _.get(ct, item.field) ?? \"\");\r\n                });\r\n                console.log(object);\r\n                return object;\r\n            })\r\n        );\r\n    };\r\n\r\n    const handleCheck = (event) => {\r\n        var updatedList = [...checked];\r\n        if (event.target.checked) {\r\n            updatedList = [...checked, event.target.value];\r\n        } else {\r\n            updatedList.splice(checked.indexOf(event.target.value), 1);\r\n        }\r\n        setChecked(updatedList);\r\n        setSelectedColumns(\r\n            columns.filter((item) => {\r\n                return updatedList.includes(item.field);\r\n            })\r\n        );\r\n    };\r\n    const handleAllExportData = () => {\r\n        let allColumns = [\r\n            {\r\n                title: \"رقم التسجيل\",\r\n                field: \"registeration_number\",\r\n                hidden: true,\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"الاسم الثلاثي\",\r\n                field: \"full_name\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"رقم الاكتتاب\",\r\n                field: \"certificates[0].subscription_number\",\r\n                hidden: true,\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"المحافظة\",\r\n                field: \"certificates[0].city\",\r\n                filtering: false,\r\n                type: \"string\",\r\n            },\r\n            {\r\n                title: \"الدورة\",\r\n                field: \"certificates[0].round\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"2400\",\r\n                field: \"certificates[0].result\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"رياضيات\",\r\n                field: \"certificates[0].details[4].value\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"فيزياء\",\r\n                field: \"certificates[0].details[5].value\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"كيمياء\",\r\n                field: \"certificates[0].details[6].value\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"3600\",\r\n                field: \"registerations[0].mark_3600\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"الهاتف\",\r\n                field: \"person.phones[0].phone\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"امتحان قبول الرياضيات\",\r\n                field: \"registerations[0].math\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"امتحان قبول الفيزياء\",\r\n                field: \"registerations[0].physics\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"3400\",\r\n                field: \"registerations[0].mark_3400\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"أولى\",\r\n                field: \"desires[0].speciality.ar_name\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"ثانية\",\r\n                field: \"desires[1].speciality.ar_name\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"ثالثة\",\r\n                field: \"desires[2].speciality.ar_name\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"رابعة\",\r\n                field: \"desires[3].speciality.ar_name\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"خامسة\",\r\n                field: \"desires[4].speciality.ar_name\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"سادسة\",\r\n                field: \"desires[5].speciality.ar_name\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"مثبتة\",\r\n                field: \"\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"مكان القبول\",\r\n                field: \"registerations[0].accept_place\",\r\n                filtering: false,\r\n            },\r\n            {\r\n                title: \"حالة القبول\",\r\n                field: \"registerations[0].status\",\r\n                filtering: false,\r\n            },\r\n        ];\r\n        let localCsvOptions = {\r\n            fieldSeparator: \",\",\r\n            quoteStrings: '\"',\r\n            decimalSeparator: \".\",\r\n            showLabels: true,\r\n            useBom: true,\r\n            useKeysAsHeaders: false,\r\n            headers: allColumns.map((c) => c.title),\r\n        };\r\n        let localCsvExporter = new ExportToCsv(localCsvOptions);\r\n        setTimeout(() => {\r\n            localCsvExporter.generateCsv(\r\n                Candidates.map((ct) => {\r\n                    let object = {};\r\n                    allColumns.forEach((item, index) => {\r\n                        if (item.field == \"full_name\")\r\n                            _.set(object, `col ${index}`, `${ct.person ?.first_name} ${ct.father ?.first_name} ${ct.person ?.last_name}`);\r\n                        else if (item.field == \"registerations[0].mark_3600\") {\r\n                            let value = parseInt(ct ?.certificates[0] ?.result) + parseInt(ct.certificates[0] ?.details[4] ?.value) + parseInt(ct.certificates[0] ?.details[5] ?.value) + parseInt(ct.certificates[0] ?.details[6] ?.value);\r\n                            _.set(object, `col ${index}`, `${value}`);\r\n                        }\r\n                        else if (item.field == \"registerations[0].mark_3400\") {\r\n                            let value = parseInt(ct ?.certificates[0] ?.result) + parseInt(ct ?.registerations[0] ?.math) + parseInt(ct ?.registerations[0] ?.physics);\r\n                            _.set(object, `col ${index}`, `${value}`);\r\n                        }\r\n                        else\r\n                            _.set(object, `col ${index}`, _.get(ct, item.field) ?? \"\");\r\n                    });\r\n                    return object;\r\n                })\r\n            );\r\n        }, 2000);\r\n    }\r\n    return (\r\n        <GridContainer>\r\n            <GridItem md={12}>\r\n                {!forRegistrations && (\r\n                    <React.Fragment>\r\n                        <Button style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"contained\"\r\n                            className={classes.submitBtn}\r\n                            onClick={handleOpen}\r\n                        >\r\n                            {translate(\"Add New Candidate\")}\r\n                        </Button>\r\n                        <Button style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"contained\"\r\n                            className={classes.submitBtn}\r\n                            onClick={handleOpenOutsideCandidate}\r\n                        >\r\n                            {translate(\"Add Candidate\")} {translate(\"out-side of ministry data\")}\r\n                        </Button>\r\n                        <SuiButton style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"gradient\"\r\n                            onClick={handleOpenTestResults}\r\n                            color={'dark'}\r\n                        >\r\n                            {translate(\"Add acceptance test results\")}\r\n                        </SuiButton>\r\n                        <SuiButton style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"gradient\"\r\n                            onClick={handleExportData}\r\n                            color={'dark'}\r\n                        >\r\n                            {translate(\"Export\")}\r\n                        </SuiButton>\r\n                        <SuiButton style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"gradient\"\r\n                            onClick={handleAllExportData}\r\n                            color={'dark'}\r\n                        >\r\n                            {translate(\"تصدير كامل المعلومات\")}\r\n                        </SuiButton>\r\n                    </React.Fragment>\r\n                )}\r\n                {showExportColumns && (\r\n                    <GridItem style={{ marginBottom: \"1em\" }}>\r\n                        <Accordion>\r\n                            <AccordionDetails>\r\n                                <GridItem container>\r\n                                    <GridItem\r\n                                        md={12}\r\n                                        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                                    >\r\n                                        <Typography\r\n                                            style={{\r\n                                                backgroundColor: \"lightgray\",\r\n                                                boxShadow:\r\n                                                    \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\r\n                                                padding: \"0em 1.2em\",\r\n                                                margin: \"0em 0em .5em 0em\",\r\n                                            }}\r\n                                        >\r\n                                            {translate(\"Select Columns\")}\r\n                                        </Typography>\r\n                                    </GridItem>\r\n                                    <GridItem md={12}>\r\n                                        <GridItem\r\n                                            className=\"list-container\"\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                justifyContent: \"space-between\",\r\n                                            }}\r\n                                        >\r\n                                            {columns\r\n                                                // .filter((item) => !item.hidden)\r\n                                                .map((item, index) => (\r\n                                                    <GridItem key={index}>\r\n                                                        <input\r\n                                                            value={item.field}\r\n                                                            type=\"checkbox\"\r\n                                                            onChange={handleCheck}\r\n                                                        />\r\n                                                        <span>{item.title}</span>\r\n                                                    </GridItem>\r\n                                                ))}\r\n                                        </GridItem>\r\n                                        <GridItem\r\n                                            md={12}\r\n                                            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{ margin: \"0px 5px\" }}\r\n                                                disabled={false}\r\n                                                variant=\"contained\"\r\n                                                className={classes.successText}\r\n                                                onClick={generateExcel}\r\n                                            >\r\n                                                <span style={{ padding: \"0px 0px 0px 10px\" }}>\r\n                                                    {translate(\"Export\")}\r\n                                                </span>\r\n                                                <Description />\r\n                                            </Button>\r\n                                        </GridItem>\r\n                                    </GridItem>\r\n                                </GridItem>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </GridItem>\r\n                )}\r\n                {renderCandidates()}\r\n            </GridItem>\r\n            <SearchAddCandidateModal\r\n                searchResult={searchResult}\r\n                onAddClick={submitAddCandidate}\r\n                key={\"addCandidate\"}\r\n                title={translate(\"Add Candidate\")}\r\n                open={open}\r\n                formScheme={AddCandidateScheme}\r\n                handleClose={handleClose}\r\n                initValues={initAddCandidate}\r\n                submitForm={submitSearchCandidate}\r\n            ></SearchAddCandidateModal>\r\n            <AddTestResultsFileModal\r\n                key={\"addAcceptanceTestResults\"}\r\n                title={translate(\"Add acceptance test results\")}\r\n                open={openTestResults}\r\n                handleClose={handleCloseTestResults}\r\n                submitForm={() => handleCloseTestResults()}\r\n            ></AddTestResultsFileModal>\r\n            <AddCandidateOutSideMinistryModal\r\n                key={\"addOutsideCandidate\"}\r\n                // title={translate(\"Add acceptance test results\")}\r\n                open={openOutsideCandidate}\r\n                handleClose={handleCloseOutsideCandidate}\r\n            ></AddCandidateOutSideMinistryModal>\r\n        </GridContainer>\r\n    );\r\n};\r\n(CandidatesList as any).auth = true;\r\n(CandidatesList as any).layout = Admin;\r\nexport default CandidatesList;\r\n"]},"metadata":{},"sourceType":"module"}