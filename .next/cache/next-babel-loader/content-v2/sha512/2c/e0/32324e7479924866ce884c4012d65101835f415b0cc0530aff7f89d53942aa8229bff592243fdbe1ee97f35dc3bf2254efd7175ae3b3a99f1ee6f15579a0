{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\initialize-year\\\\planCourses.tsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Select, MenuItem, FormControl, InputLabel, TextField, InputAdornment, OutlinedInput, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Accordion, Typography, AccordionDetails } from \"@material-ui/core\";\nimport { FilterList, Sort, Search, Print, Description, FileCopy } from \"@material-ui/icons\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport CourseService from \"../../../../Services/CourseService\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { ExportToCsv } from \"export-to-csv\";\nimport { useReactToPrint } from \"react-to-print\";\nimport _ from \"lodash\";\n\nconst PlanCourses = ({}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const [showCourseDetail, setshowCourseDetail] = React.useState(false);\n  const [course, setCourse] = React.useState();\n  const [searchResult, setSearchResult] = React.useState(null);\n\n  const setShow = () => {\n    setshowCourseDetail(!showCourseDetail);\n  };\n\n  const {\n    0: isCreate,\n    1: setIsCreate\n  } = useState(true);\n  /********************** Filter && Sort *********/\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    var _inputLabel$current;\n\n    setLabelWidth(inputLabel === null || inputLabel === void 0 ? void 0 : (_inputLabel$current = inputLabel.current) === null || _inputLabel$current === void 0 ? void 0 : _inputLabel$current.offsetWidth);\n  }, []);\n  const inputSortLabel = React.useRef(null);\n  const [sortLabelWidth, setSortLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    var _inputSortLabel$curre;\n\n    setSortLabelWidth(inputSortLabel === null || inputSortLabel === void 0 ? void 0 : (_inputSortLabel$curre = inputSortLabel.current) === null || _inputSortLabel$curre === void 0 ? void 0 : _inputSortLabel$curre.offsetWidth);\n  }, []);\n  const filters = [{\n    value: 0,\n    label: translate(\"None\")\n  }, {\n    value: \"1\",\n    label: translate(\"Name\")\n  }, {\n    value: \"2\",\n    label: translate(\"Course Code\")\n  }, {\n    value: \"3\",\n    label: translate(\"Year\")\n  }, {\n    value: \"4\",\n    label: translate(\"Speciality\")\n  }, {\n    value: \"5\",\n    label: translate(\"Semester\")\n  }]; // Courses\n\n  const [Courses, setCourses] = React.useState(null); // Specialities\n\n  const [Specialities, setSpecialities] = React.useState(null);\n  const [filteredCourses, setFilteredCourses] = React.useState(null);\n  const [filter, setFilter] = React.useState(0);\n  const [search, setSearch] = React.useState(\"\"); // ---- Handle File --------------------------------\n\n  const filterData = () => {\n    let _filteredCourses = Courses;\n    let _value = search;\n\n    if (filter == 0) {\n      _filteredCourses = Courses.filter((course, index) => {\n        var _course$current_descr, _course$current_descr2;\n\n        return course.ar_name.includes(_value) || course.en_name.includes(_value) || course.fr_name.includes(_value) || ((_course$current_descr = course.current_description) === null || _course$current_descr === void 0 ? void 0 : _course$current_descr.total_hours.toString().includes(_value)) || ((_course$current_descr2 = course.current_description) === null || _course$current_descr2 === void 0 ? void 0 : _course$current_descr2.credit.toString().includes(_value));\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (filter == 1) {\n      _filteredCourses = Courses.filter((course, index) => {\n        return course.ar_name.includes(_value) || course.en_name.includes(_value) || course.fr_name.includes(_value);\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (filter == 2) {\n      _filteredCourses = Courses.filter((course, index) => {\n        var _course$current_descr3;\n\n        return (_course$current_descr3 = course.current_description) === null || _course$current_descr3 === void 0 ? void 0 : _course$current_descr3.total_hours.toString().includes(_value);\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (filter == 3) {\n      _filteredCourses = Courses.filter((course, index) => {\n        var _course$current_descr4;\n\n        return (_course$current_descr4 = course.current_description) === null || _course$current_descr4 === void 0 ? void 0 : _course$current_descr4.credit.toString().includes(_value);\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n  };\n\n  const handleChangeFilter = event => {\n    setFilter(event.target.value);\n    filterData();\n  };\n\n  const handleSearch = event => {\n    var _event$target;\n\n    let _value = event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;\n\n    setSearch(_value);\n    filterData();\n  }; // ---- Handle Sort --------------------------------\n\n\n  const [sortBy, setSortBy] = React.useState(0);\n\n  const handleSortBy = event => {\n    var _event$target2;\n\n    let _value = event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.value;\n\n    setSortBy(_value);\n    let _filteredCourses = Courses;\n\n    if (sortBy == 1) {\n      _filteredCourses = Courses.sort((a, b) => {\n        if (a.ar_name > b.ar_name) {\n          return 1;\n        } else if (a.ar_name < b.ar_name) {\n          return -1;\n        }\n\n        if (a.en_name > b.en_name) {\n          return 1;\n        } else if (a.en_name < b.en_name) {\n          return -1;\n        }\n\n        if (a.fr_name > b.fr_name) {\n          return 1;\n        } else if (a.fr_name < b.fr_name) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (sortBy == 2) {\n      _filteredCourses = Courses.sort((a, b) => {\n        var _a$current_descriptio, _b$current_descriptio, _a$current_descriptio2, _b$current_descriptio2;\n\n        if (((_a$current_descriptio = a.current_description) === null || _a$current_descriptio === void 0 ? void 0 : _a$current_descriptio.total_hours) > ((_b$current_descriptio = b.current_description) === null || _b$current_descriptio === void 0 ? void 0 : _b$current_descriptio.total_hours)) {\n          return 1;\n        } else if (((_a$current_descriptio2 = a.current_description) === null || _a$current_descriptio2 === void 0 ? void 0 : _a$current_descriptio2.total_hours) < ((_b$current_descriptio2 = b.current_description) === null || _b$current_descriptio2 === void 0 ? void 0 : _b$current_descriptio2.total_hours)) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n\n    if (sortBy == 3) {\n      _filteredCourses = Courses.sort((a, b) => {\n        var _a$current_descriptio3, _b$current_descriptio3, _a$current_descriptio4, _b$current_descriptio4;\n\n        if (((_a$current_descriptio3 = a.current_description) === null || _a$current_descriptio3 === void 0 ? void 0 : _a$current_descriptio3.credit) > ((_b$current_descriptio3 = b.current_description) === null || _b$current_descriptio3 === void 0 ? void 0 : _b$current_descriptio3.credit)) {\n          return 1;\n        } else if (((_a$current_descriptio4 = a.current_description) === null || _a$current_descriptio4 === void 0 ? void 0 : _a$current_descriptio4.credit) < ((_b$current_descriptio4 = b.current_description) === null || _b$current_descriptio4 === void 0 ? void 0 : _b$current_descriptio4.credit)) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      setFilteredCourses(_filteredCourses);\n    }\n  };\n  /************************** Data ****************************/\n\n\n  useEffect(() => {// CourseService.GetAll()\n    //   .then((res) => {\n    //     console.log(\"Courses\", res.result);\n    //     setFilteredCourses(res.result as ICourseModel[]);\n    //     setCourses(res.result as ICourseModel[]);\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"error\", error);\n    //   });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  /**************************  Handle Export data ****************************/\n\n  const [showExportColumns, setShowExportColumns] = React.useState(false);\n  const {\n    0: checked,\n    1: setChecked\n  } = useState([]);\n  const {\n    0: selectedColumns,\n    1: setSelectedColumns\n  } = useState([]);\n\n  const handleCheck = event => {\n    var updatedList = [...checked];\n\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n\n    setChecked(updatedList);\n    setSelectedColumns(columns.filter(item => {\n      return updatedList.includes(item.field);\n    }));\n  };\n\n  const csvOptions = {\n    fieldSeparator: \",\",\n    quoteStrings: '\"',\n    decimalSeparator: \".\",\n    showLabels: true,\n    useBom: true,\n    useKeysAsHeaders: false,\n    headers: selectedColumns.map(c => c.title)\n  };\n  const csvExporter = new ExportToCsv(csvOptions);\n\n  const handleExportData = () => {\n    setShowExportColumns(!showExportColumns);\n  };\n\n  const generateExcel = () => {\n    csvExporter.generateCsv(filteredCourses.map(course => {\n      let object = {};\n      selectedColumns.forEach((item, index) => {\n        var _$get;\n\n        _.set(object, `col ${index}`, (_$get = _.get(course, item.field)) !== null && _$get !== void 0 ? _$get : \"\");\n      });\n      console.log(object);\n      return object;\n    }));\n  };\n  /************************** Finish Handle Export Data ****************************/\n\n\n  const [confirm, setConfirm] = React.useState(false);\n  const [deleteCourse, setDeleteCourse] = React.useState(false); // -------- Handle Table Actions --------\n\n  const getCourse = data => {\n    let _course = Courses.find((item, index) => item.id === (data === null || data === void 0 ? void 0 : data.id));\n\n    CourseService.Get(data.id).then(res => {\n      let _course = res.result;\n      setCourse(_course);\n      console.log(_course);\n      setIsCreate(false);\n      setIsEditable(false);\n      setshowCourseDetail(true);\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  };\n\n  const handleDeleteCourse = () => {};\n\n  const handleCourse = () => {};\n\n  const ConfirmDialog = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: confirm,\n      onClose: handleConfirmClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: translate(\"Delete a course\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: translate(\"Are you sure you want to delete this course\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteCourse,\n          children: translate(\"Yes\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmClose,\n          autoFocus: true,\n          children: translate(\"No\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n  /************************** Handle Delete Course ****************************/\n\n\n  const tableRef = useRef();\n  const generatePDF = useReactToPrint({\n    content: () => tableRef.current,\n    documentTitle: translate(\"Courses\")\n  });\n  const columns = [{\n    title: translate(\"Id\"),\n    field: \"id\",\n    hidden: true\n  }, {\n    title: translate(\"Program\"),\n    field: \"program\"\n  }, {\n    title: translate(\"Course Code\"),\n    field: \"course_code\",\n    hidden: true\n  }, {\n    title: translate(\"Course Name\"),\n    field: \"course_name\",\n    hidden: true\n  }, {\n    title: translate(\"Year\"),\n    field: \"year\"\n  }, {\n    title: translate(\"Speciality\"),\n    field: \"speciality\"\n  }, {\n    title: translate(\"Semester\"),\n    field: \"semester\"\n  }];\n\n  const renderPlanCourses = () => {\n    if (filteredCourses != null && filteredCourses.length > 0) {\n      let data = [];\n      let options = {\n        // exportAllData: true,\n        // exportButton: true,\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\",\n        search: false,\n        tableLayout: \"auto\"\n      };\n      let actions = [{\n        icon: () => /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            minWidth: 80,\n            color: \"#dc3545\",\n            backgroundColor: \"transparent\",\n            border: \"1px solid #dc3545\"\n          },\n          color: \"danger\",\n          children: translate(\"Delete\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this),\n        onClick: (evt, data) => deleteCourse(data)\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            minWidth: 140,\n            width: 140\n          },\n          color: \"primary\",\n          children: [translate(\"Course Details\"), /*#__PURE__*/_jsxDEV(FileCopy, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this),\n        onClick: (evt, data) => getCourse(data)\n      }];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: tableRef,\n        children: /*#__PURE__*/_jsxDEV(ActionTable, {\n          Title: `${translate(\"All\")} ${data.length}`,\n          Columns: columns,\n          Data: data,\n          Options: options,\n          Actions: actions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {\n      loading: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 19\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      md: 12,\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        container: true,\n        md: 12,\n        style: {\n          margin: \"0px 0px 10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          md: 7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        style: {\n          marginBottom: \"1em\",\n          marginTop: \"2em\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            minWidth: 150,\n            margin: \"0 0 0 1em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              display: \"flex\"\n            },\n            shrink: true,\n            ref: inputLabel,\n            htmlFor: \"outlined-filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: translate(\"Filter\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"select-filter\",\n            value: filter,\n            onChange: handleChangeFilter,\n            label: filters[filter].label,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              notched: true,\n              labelWidth: labelWidth,\n              name: \"filter\",\n              id: \"outlined-filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this),\n            children: filters.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onKeyUp: handleSearch,\n            size: \"small\",\n            id: \"outlined-basic\",\n            label: \"\\u0628\\u062D\\u062B\",\n            variant: \"outlined\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            minWidth: 150,\n            margin: \"0 1em 0 1em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              display: \"flex\"\n            },\n            shrink: true,\n            ref: inputSortLabel,\n            htmlFor: \"outlined-sort\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: translate(\"Sort By\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            displayEmpty: true,\n            fullWidth: true,\n            labelId: \"autowidth-label\",\n            id: \"select-sort\",\n            value: sortBy,\n            onChange: handleSortBy,\n            autoWidth: true,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              notched: true,\n              labelWidth: sortLabelWidth,\n              name: \"sort\",\n              id: \"outlined-sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this),\n            label: filters[sortBy].label,\n            children: filters.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"0px 5px\"\n          },\n          disabled: false,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: generatePDF,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"0px 0px 0px 10px\"\n            },\n            children: translate(\"Print\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Print, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"0px 5px\"\n          },\n          disabled: false,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleExportData,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"0px 0px 0px 10px\"\n            },\n            children: translate(\"Export to excel\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), showExportColumns && /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                md: 12,\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    backgroundColor: \"lightgray\",\n                    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n                    padding: \"0em 1.2em\",\n                    margin: \"0em 0em .5em 0em\"\n                  },\n                  children: translate(\"Select Columns\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                md: 12,\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  className: \"list-container\",\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  },\n                  children: columns // .filter((item) => !item.hidden)\n                  .map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      value: item.field,\n                      type: \"checkbox\",\n                      onChange: handleCheck\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 12,\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      margin: \"0px 5px\"\n                    },\n                    disabled: false,\n                    variant: \"contained\",\n                    className: classes.successText,\n                    onClick: generateExcel,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        padding: \"0px 0px 0px 10px\"\n                      },\n                      children: translate(\"Export\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      md: 12,\n      style: {\n        marginTop: \"1em\"\n      },\n      children: renderPlanCourses()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PlanCourses;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/initialize-year/planCourses.tsx"],"names":["React","useEffect","useRef","useState","Button","Select","MenuItem","FormControl","InputLabel","TextField","InputAdornment","OutlinedInput","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Accordion","Typography","AccordionDetails","FilterList","Sort","Search","Print","Description","FileCopy","styles","makeStyles","GridContainer","GridItem","ActionTable","Placeholder","useRouter","useTranslation","CourseService","SuiButton","ExportToCsv","useReactToPrint","_","PlanCourses","translate","useStyles","classes","router","showCourseDetail","setshowCourseDetail","course","setCourse","searchResult","setSearchResult","setShow","isCreate","setIsCreate","inputLabel","labelWidth","setLabelWidth","current","offsetWidth","inputSortLabel","sortLabelWidth","setSortLabelWidth","filters","value","label","Courses","setCourses","Specialities","setSpecialities","filteredCourses","setFilteredCourses","filter","setFilter","search","setSearch","filterData","_filteredCourses","_value","index","ar_name","includes","en_name","fr_name","current_description","total_hours","toString","credit","handleChangeFilter","event","target","handleSearch","sortBy","setSortBy","handleSortBy","sort","a","b","showExportColumns","setShowExportColumns","checked","setChecked","selectedColumns","setSelectedColumns","handleCheck","updatedList","splice","indexOf","columns","item","field","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","useBom","useKeysAsHeaders","headers","map","c","title","csvExporter","handleExportData","generateExcel","generateCsv","object","forEach","set","get","console","log","confirm","setConfirm","deleteCourse","setDeleteCourse","getCourse","data","_course","find","id","Get","then","res","result","setIsEditable","catch","error","handleDeleteCourse","handleCourse","ConfirmDialog","handleConfirmClose","tableRef","generatePDF","content","documentTitle","hidden","renderPlanCourses","length","options","actionsColumnIndex","headerStyle","backgroundColor","color","fontWeight","filtering","paging","pageSize","maxBodyHeight","tableLayout","actions","icon","minWidth","border","onClick","evt","width","margin","marginBottom","marginTop","display","option","startAdornment","submitBtn","padding","justifyContent","boxShadow","successText"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  TextField,\r\n  InputAdornment,\r\n  OutlinedInput,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Accordion,\r\n  Typography,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  FilterList,\r\n  Sort,\r\n  Search,\r\n  Print,\r\n  Add,\r\n  FilterListSharp,\r\n  AddComment,\r\n  AddBox,\r\n  Folder,\r\n  PostAdd,\r\n  Description,\r\n  ExpandMore,\r\n  FileCopy,\r\n} from \"@material-ui/icons\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\r\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\r\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\r\nimport Placeholder from \"../../../../Utility/Placeholders\";\r\nimport * as Yup from \"yup\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport { ICourseModel } from \"../../../../Models/Courses/CourseModel\";\r\nimport CourseService from \"../../../../Services/CourseService\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport CandidateDetails from \"../candidates/candidate-details\";\r\nimport { ExportToCsv } from \"export-to-csv\";\r\nimport ReactToPrint, { useReactToPrint } from \"react-to-print\";\r\nimport _ from \"lodash\";\r\nimport { ISpecialityModel } from \"../../../../Models/ApiResponse/SpecialityModel\";\r\ninterface IPlanCoursesProps {}\r\nconst PlanCourses: React.FC<IPlanCoursesProps> = ({}) => {\r\n  const { translate } = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const [showCourseDetail, setshowCourseDetail] = React.useState(false);\r\n  const [course, setCourse] = React.useState<ICourseModel>();\r\n  const [searchResult, setSearchResult] = React.useState(null);\r\n  const setShow = () => {\r\n    setshowCourseDetail(!showCourseDetail);\r\n  };\r\n\r\n  const [isCreate, setIsCreate] = useState<boolean>(true);\r\n\r\n  /********************** Filter && Sort *********/\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel?.current?.offsetWidth);\r\n  }, []);\r\n\r\n  const inputSortLabel = React.useRef(null);\r\n  const [sortLabelWidth, setSortLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setSortLabelWidth(inputSortLabel?.current?.offsetWidth);\r\n  }, []);\r\n\r\n  const filters = [\r\n    {\r\n      value: 0,\r\n      label: translate(\"None\"),\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: translate(\"Name\"),\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: translate(\"Course Code\"),\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: translate(\"Year\"),\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: translate(\"Speciality\"),\r\n    },\r\n    {\r\n      value: \"5\",\r\n      label: translate(\"Semester\"),\r\n    },\r\n  ];\r\n\r\n  // Courses\r\n  const [Courses, setCourses] = React.useState<ICourseModel[]>(null);\r\n\r\n  // Specialities\r\n  const [Specialities, setSpecialities] =\r\n    React.useState<ISpecialityModel[]>(null);\r\n\r\n  const [filteredCourses, setFilteredCourses] =\r\n    React.useState<ICourseModel[]>(null);\r\n\r\n  const [filter, setFilter] = React.useState(0);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  // ---- Handle File --------------------------------\r\n  const filterData = () => {\r\n    let _filteredCourses = Courses;\r\n    let _value = search;\r\n    if (filter == 0) {\r\n      _filteredCourses = Courses.filter((course, index) => {\r\n        return (\r\n          course.ar_name.includes(_value) ||\r\n          course.en_name.includes(_value) ||\r\n          course.fr_name.includes(_value) ||\r\n          course.current_description?.total_hours.toString().includes(_value) ||\r\n          course.current_description?.credit.toString().includes(_value)\r\n        );\r\n      });\r\n      setFilteredCourses(_filteredCourses);\r\n    }\r\n    if (filter == 1) {\r\n      _filteredCourses = Courses.filter((course, index) => {\r\n        return (\r\n          course.ar_name.includes(_value) ||\r\n          course.en_name.includes(_value) ||\r\n          course.fr_name.includes(_value)\r\n        );\r\n      });\r\n      setFilteredCourses(_filteredCourses);\r\n    }\r\n    if (filter == 2) {\r\n      _filteredCourses = Courses.filter((course, index) => {\r\n        return course.current_description?.total_hours\r\n          .toString()\r\n          .includes(_value);\r\n      });\r\n      setFilteredCourses(_filteredCourses);\r\n    }\r\n    if (filter == 3) {\r\n      _filteredCourses = Courses.filter((course, index) => {\r\n        return course.current_description?.credit.toString().includes(_value);\r\n      });\r\n      setFilteredCourses(_filteredCourses);\r\n    }\r\n  };\r\n  const handleChangeFilter = (event) => {\r\n    setFilter(event.target.value);\r\n    filterData();\r\n  };\r\n  const handleSearch = (event) => {\r\n    let _value = event?.target?.value;\r\n    setSearch(_value);\r\n    filterData();\r\n  };\r\n  // ---- Handle Sort --------------------------------\r\n  const [sortBy, setSortBy] = React.useState(0);\r\n  const handleSortBy = (event) => {\r\n    let _value = event?.target?.value;\r\n    setSortBy(_value);\r\n    let _filteredCourses = Courses;\r\n    if (sortBy == 1) {\r\n      _filteredCourses = Courses.sort((a, b) => {\r\n        if (a.ar_name > b.ar_name) {\r\n          return 1;\r\n        } else if (a.ar_name < b.ar_name) {\r\n          return -1;\r\n        }\r\n        if (a.en_name > b.en_name) {\r\n          return 1;\r\n        } else if (a.en_name < b.en_name) {\r\n          return -1;\r\n        }\r\n        if (a.fr_name > b.fr_name) {\r\n          return 1;\r\n        } else if (a.fr_name < b.fr_name) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      setFilteredCourses(_filteredCourses);\r\n    }\r\n    if (sortBy == 2) {\r\n      _filteredCourses = Courses.sort((a, b) => {\r\n        if (\r\n          a.current_description?.total_hours >\r\n          b.current_description?.total_hours\r\n        ) {\r\n          return 1;\r\n        } else if (\r\n          a.current_description?.total_hours <\r\n          b.current_description?.total_hours\r\n        ) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      setFilteredCourses(_filteredCourses);\r\n    }\r\n    if (sortBy == 3) {\r\n      _filteredCourses = Courses.sort((a, b) => {\r\n        if (a.current_description?.credit > b.current_description?.credit) {\r\n          return 1;\r\n        } else if (\r\n          a.current_description?.credit < b.current_description?.credit\r\n        ) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      setFilteredCourses(_filteredCourses);\r\n    }\r\n  };\r\n  /************************** Data ****************************/\r\n  useEffect(() => {\r\n    // CourseService.GetAll()\r\n    //   .then((res) => {\r\n    //     console.log(\"Courses\", res.result);\r\n    //     setFilteredCourses(res.result as ICourseModel[]);\r\n    //     setCourses(res.result as ICourseModel[]);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error(\"error\", error);\r\n    //   });\r\n  }, []);\r\n  /************************** Finish Data ****************************/\r\n\r\n  /**************************  Handle Export data ****************************/\r\n  const [showExportColumns, setShowExportColumns] = React.useState(false);\r\n  const [checked, setChecked] = useState([]);\r\n  const [selectedColumns, setSelectedColumns] = useState([]);\r\n  const handleCheck = (event) => {\r\n    var updatedList = [...checked];\r\n    if (event.target.checked) {\r\n      updatedList = [...checked, event.target.value];\r\n    } else {\r\n      updatedList.splice(checked.indexOf(event.target.value), 1);\r\n    }\r\n    setChecked(updatedList);\r\n    setSelectedColumns(\r\n      columns.filter((item) => {\r\n        return updatedList.includes(item.field);\r\n      })\r\n    );\r\n  };\r\n  const csvOptions = {\r\n    fieldSeparator: \",\",\r\n    quoteStrings: '\"',\r\n    decimalSeparator: \".\",\r\n    showLabels: true,\r\n    useBom: true,\r\n    useKeysAsHeaders: false,\r\n    headers: selectedColumns.map((c) => c.title),\r\n  };\r\n  const csvExporter = new ExportToCsv(csvOptions);\r\n  const handleExportData = () => {\r\n    setShowExportColumns(!showExportColumns);\r\n  };\r\n  const generateExcel = () => {\r\n    csvExporter.generateCsv(\r\n      filteredCourses.map((course) => {\r\n        let object = {};\r\n        selectedColumns.forEach((item, index) => {\r\n          _.set(object, `col ${index}`, _.get(course, item.field) ?? \"\");\r\n        });\r\n        console.log(object);\r\n        return object;\r\n      })\r\n    );\r\n  };\r\n  /************************** Finish Handle Export Data ****************************/\r\n  const [confirm, setConfirm] = React.useState(false);\r\n  const [deleteCourse, setDeleteCourse] = React.useState(false);\r\n\r\n  // -------- Handle Table Actions --------\r\n  const getCourse = (data: any) => {\r\n    let _course = Courses.find((item, index) => item.id === data?.id);\r\n    CourseService.Get(data.id)\r\n      .then((res) => {\r\n        let _course = res.result as ICourseModel;\r\n        setCourse(_course);\r\n        console.log(_course);\r\n        setIsCreate(false);\r\n        setIsEditable(false);\r\n        setshowCourseDetail(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      });\r\n  };\r\n  \r\n  const handleDeleteCourse = () => {};\r\n  const handleCourse = () => {};\r\n\r\n  const ConfirmDialog = () => (\r\n    <div>\r\n      <Dialog\r\n        open={confirm}\r\n        onClose={handleConfirmClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {translate(\"Delete a course\")}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {translate(\"Are you sure you want to delete this course\")}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCourse}>{translate(\"Yes\")}</Button>\r\n          <Button onClick={handleConfirmClose} autoFocus>\r\n            {translate(\"No\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n\r\n  /************************** Handle Delete Course ****************************/\r\n  const tableRef = useRef();\r\n  const generatePDF = useReactToPrint({\r\n    content: () => tableRef.current,\r\n    documentTitle: translate(\"Courses\"),\r\n  });\r\n  const columns = [\r\n    {\r\n      title: translate(\"Id\"),\r\n      field: \"id\",\r\n      hidden: true,\r\n    },\r\n    {\r\n      title: translate(\"Program\"),\r\n      field: \"program\",\r\n    },\r\n    {\r\n      title: translate(\"Course Code\"),\r\n      field: \"course_code\",\r\n      hidden: true,\r\n    },\r\n    {\r\n      title: translate(\"Course Name\"),\r\n      field: \"course_name\",\r\n      hidden: true,\r\n    },\r\n    {\r\n      title: translate(\"Year\"),\r\n      field: \"year\",\r\n    },\r\n    {\r\n      title: translate(\"Speciality\"),\r\n      field: \"speciality\",\r\n    },\r\n    {\r\n      title: translate(\"Semester\"),\r\n      field: \"semester\",\r\n    },\r\n  ];\r\n  const renderPlanCourses = () => {\r\n    if (filteredCourses != null && filteredCourses.length > 0) {\r\n      let data = [];\r\n      let options = {\r\n        // exportAllData: true,\r\n        // exportButton: true,\r\n        actionsColumnIndex: -1,\r\n        headerStyle: {\r\n          backgroundColor: \"#01579b\",\r\n          color: \"#FFF\",\r\n          fontWeight: \"bold\",\r\n        },\r\n        filtering: false,\r\n        paging: true,\r\n        pageSize: 10,\r\n        maxBodyHeight: \"500px\",\r\n        search: false,\r\n        tableLayout: \"auto\",\r\n      };\r\n      let actions = [\r\n        {\r\n          icon: () => (\r\n            <SuiButton\r\n              style={{\r\n                minWidth: 80,\r\n                color: \"#dc3545\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"1px solid #dc3545\",\r\n              }}\r\n              color={\"danger\"}\r\n            >\r\n              {translate(\"Delete\")}\r\n            </SuiButton>\r\n          ),\r\n          onClick: (evt, data) => deleteCourse(data),\r\n        },\r\n        {\r\n          icon: () => (\r\n            <SuiButton style={{ minWidth: 140, width: 140 }} color={\"primary\"}>\r\n              {translate(\"Course Details\")}\r\n              <FileCopy />\r\n            </SuiButton>\r\n          ),\r\n          onClick: (evt, data) => getCourse(data),\r\n        },\r\n      ];\r\n      return (\r\n        <div ref={tableRef}>\r\n          <ActionTable\r\n            Title={`${translate(\"All\")} ${data.length}`}\r\n            Columns={columns}\r\n            Data={data}\r\n            Options={options}\r\n            Actions={actions}\r\n          />\r\n        </div>\r\n      );\r\n    } else return <Placeholder loading={false} />;\r\n  };\r\n  return (\r\n    <GridContainer>\r\n      <GridItem md={12}>\r\n        <GridItem container md={12} style={{ margin: \"0px 0px 10px 0\" }}>\r\n          <GridItem md={7}></GridItem>\r\n          <GridItem></GridItem>\r\n        </GridItem>\r\n        <GridItem style={{ marginBottom: \"1em\", marginTop: \"2em\" }}>\r\n          <FormControl\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            style={{ minWidth: 150, margin: \"0 0 0 1em\" }}\r\n          >\r\n            <InputLabel\r\n              style={{ display: \"flex\" }}\r\n              shrink\r\n              ref={inputLabel}\r\n              htmlFor=\"outlined-filter\"\r\n            >\r\n              <span>{translate(\"Filter\")}</span>\r\n              <FilterList />\r\n            </InputLabel>\r\n            <Select\r\n              id=\"select-filter\"\r\n              value={filter}\r\n              onChange={handleChangeFilter}\r\n              label={filters[filter].label}\r\n              input={\r\n                <OutlinedInput\r\n                  notched\r\n                  labelWidth={labelWidth}\r\n                  name=\"filter\"\r\n                  id=\"outlined-filter\"\r\n                />\r\n              }\r\n            >\r\n              {filters.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl>\r\n            <TextField\r\n              onKeyUp={handleSearch}\r\n              size=\"small\"\r\n              id=\"outlined-basic\"\r\n              label=\"بحث\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Search />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            ></TextField>\r\n          </FormControl>\r\n          <FormControl\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            style={{ minWidth: 150, margin: \"0 1em 0 1em\" }}\r\n          >\r\n            <InputLabel\r\n              style={{ display: \"flex\" }}\r\n              shrink\r\n              ref={inputSortLabel}\r\n              htmlFor=\"outlined-sort\"\r\n            >\r\n              <span>{translate(\"Sort By\")}</span>\r\n              <Sort />\r\n            </InputLabel>\r\n            <Select\r\n              displayEmpty\r\n              fullWidth\r\n              labelId=\"autowidth-label\"\r\n              id=\"select-sort\"\r\n              value={sortBy}\r\n              onChange={handleSortBy}\r\n              autoWidth\r\n              input={\r\n                <OutlinedInput\r\n                  notched\r\n                  labelWidth={sortLabelWidth}\r\n                  name=\"sort\"\r\n                  id=\"outlined-sort\"\r\n                />\r\n              }\r\n              label={filters[sortBy].label}\r\n            >\r\n              {filters.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <Button\r\n            style={{ margin: \"0px 5px\" }}\r\n            disabled={false}\r\n            variant=\"contained\"\r\n            className={classes.submitBtn}\r\n            onClick={generatePDF}\r\n          >\r\n            <span style={{ padding: \"0px 0px 0px 10px\" }}>\r\n              {translate(\"Print\")}\r\n            </span>\r\n            <Print />\r\n          </Button>\r\n          <Button\r\n            style={{ margin: \"0px 5px\" }}\r\n            disabled={false}\r\n            variant=\"contained\"\r\n            className={classes.submitBtn}\r\n            onClick={handleExportData}\r\n          >\r\n            <span style={{ padding: \"0px 0px 0px 10px\" }}>\r\n              {translate(\"Export to excel\")}\r\n            </span>\r\n            <Description />\r\n          </Button>\r\n        </GridItem>\r\n        {showExportColumns && (\r\n          <GridItem>\r\n            <Accordion>\r\n              <AccordionDetails>\r\n                <GridItem container>\r\n                  <GridItem\r\n                    md={12}\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  >\r\n                    <Typography\r\n                      style={{\r\n                        backgroundColor: \"lightgray\",\r\n                        boxShadow:\r\n                          \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\r\n                        padding: \"0em 1.2em\",\r\n                        margin: \"0em 0em .5em 0em\",\r\n                      }}\r\n                    >\r\n                      {translate(\"Select Columns\")}\r\n                    </Typography>\r\n                  </GridItem>\r\n                  <GridItem md={12}>\r\n                    <GridItem\r\n                      className=\"list-container\"\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      {columns\r\n                        // .filter((item) => !item.hidden)\r\n                        .map((item, index) => (\r\n                          <GridItem key={index}>\r\n                            <input\r\n                              value={item.field}\r\n                              type=\"checkbox\"\r\n                              onChange={handleCheck}\r\n                            />\r\n                            <span>{item.title}</span>\r\n                          </GridItem>\r\n                        ))}\r\n                    </GridItem>\r\n                    <GridItem\r\n                      md={12}\r\n                      style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                    >\r\n                      <Button\r\n                        style={{ margin: \"0px 5px\" }}\r\n                        disabled={false}\r\n                        variant=\"contained\"\r\n                        className={classes.successText}\r\n                        onClick={generateExcel}\r\n                      >\r\n                        <span style={{ padding: \"0px 0px 0px 10px\" }}>\r\n                          {translate(\"Export\")}\r\n                        </span>\r\n                        <Description />\r\n                      </Button>\r\n                    </GridItem>\r\n                  </GridItem>\r\n                </GridItem>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </GridItem>\r\n        )}\r\n      </GridItem>\r\n      <GridItem md={12} style={{ marginTop: \"1em\" }}>\r\n        {renderPlanCourses()}\r\n      </GridItem>\r\n      <ConfirmDialog />\r\n    </GridContainer>\r\n  );\r\n};\r\nexport default PlanCourses;\r\n"]},"metadata":{},"sourceType":"module"}