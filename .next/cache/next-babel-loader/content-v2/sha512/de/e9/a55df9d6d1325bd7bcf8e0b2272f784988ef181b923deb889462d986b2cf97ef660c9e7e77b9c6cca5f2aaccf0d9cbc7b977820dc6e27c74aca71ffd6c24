{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\initialize-year\\\\assign-teachers\\\\AssignedTeachers.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport SuiButton from \"../../../../../components/SuiButton\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../../Utility/Translations/useTranslation\";\nimport { Box, Button, Dialog, DialogActions, DialogTitle, IconButton, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport ActionTable from \"../../../../../components/MaterialTable/ActionTable\";\nimport { toast } from \"react-toastify\";\nimport Placeholder from \"../../../../../Utility/Placeholders\";\nimport GridContainer from \"../../../../../components/Grid/GridContainer\";\nimport GridItem from \"../../../../../components/Grid/GridItem\";\nimport TeacherService from \"../../../../../Services/TeacherService\";\nexport const AssignedTeachers = ({\n  planData,\n  refresh\n}) => {\n  _s();\n\n  const router = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const {\n    0: deleteId,\n    1: setDeleteId\n  } = useState(null);\n  const [confirmDelete, setConfirmDelete] = React.useState(false);\n  const [assignedTeachers, setAssignedTeachers] = React.useState([]);\n  const tableRef = useRef();\n  const {\n    0: teachers,\n    1: setTeachers\n  } = useState([]);\n\n  const fetch = () => {\n    TeacherService.GetAll().then(res => {\n      setTeachers(res.result);\n\n      if (planData.id && planData.edu_year_id) {\n        TeacherService.GetTeachersAssignments(planData.id, planData.edu_year_id).then(resp => {\n          if (resp.result != null && resp.result.length > 0) {\n            let assignedTeachers = resp.result.map(entity => {\n              var _res$result, _teacher$person, _teacher$person2;\n\n              const teacher = (_res$result = res.result) === null || _res$result === void 0 ? void 0 : _res$result.find(e => e.id == (entity === null || entity === void 0 ? void 0 : entity.teacher_id));\n              return {\n                id: entity.id,\n                teacher_id: entity.teacher_id,\n                teacher: `${teacher === null || teacher === void 0 ? void 0 : teacher.prefix_name} \n                                ${teacher === null || teacher === void 0 ? void 0 : (_teacher$person = teacher.person) === null || _teacher$person === void 0 ? void 0 : _teacher$person.first_name} \n                                ${teacher === null || teacher === void 0 ? void 0 : (_teacher$person2 = teacher.person) === null || _teacher$person2 === void 0 ? void 0 : _teacher$person2.last_name}`,\n                theo: `${entity.theoretical_hours}/${entity.theoretical_classes}`,\n                pract: `${entity.practical_hours}/${entity.practical_classes}`,\n                mixed: `${entity.mixed_hours}/${entity.mixed_classes}`\n              };\n            });\n            console.log(assignedTeachers);\n            setAssignedTeachers(assignedTeachers);\n          }\n        }).catch(err => {});\n      }\n    }).catch(err => {\n      toast.error(err === null || err === void 0 ? void 0 : err.error);\n    });\n  }; // useEffect(() => {\n  //   fetch();\n  // }, []);\n\n\n  useEffect(() => {\n    fetch();\n  }, [refresh]);\n  const columns = [{\n    title: \"المعرّف\",\n    field: \"id\",\n    hidden: true\n  }, {\n    title: \"المدرّس\",\n    field: \"teacher\"\n  }, {\n    title: \"نظري س/ف\",\n    field: \"theo\"\n  }, {\n    title: \"عملي س/ف\",\n    field: \"pract\"\n  }, {\n    title: \"نظري/عملي س/ف\",\n    field: \"mixed\"\n  }];\n\n  const ConfirmDialog = ({\n    id,\n    show,\n    handleClose,\n    handleDeleteCourse\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: show,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"\\u0647\\u0644 \\u062A\\u0631\\u064A\\u062F \\u062A\\u0623\\u0643\\u064A\\u062F \\u0625\\u0646\\u0647\\u0627\\u0621 \\u062A\\u0643\\u0644\\u064A\\u0641 \\u0627\\u0644\\u0645\\u062F\\u0631\\u0651\\u0633 \\u0627\\u0644\\u0645\\u0642\\u0631\\u0631\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          variant: \"contained\",\n          children: translate(\"Cancel\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDeleteCourse(id),\n          color: \"primary\",\n          variant: \"contained\",\n          children: translate(\"Confirm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleDeleteCourse = () => {\n    if (deleteId) {\n      TeacherService.DeleteTeachersAssignments(deleteId).then(resp => {\n        if (resp.success) {\n          toast.success(translate(\"Teacher disengage successfully\"));\n          setConfirmDelete(false);\n          fetch();\n        }\n      }).catch(err => {});\n    } else toast.error(\"يجب تحديد معرّف\");\n  };\n\n  const handleConfirmDialog = id => {\n    setDeleteId(id);\n    setConfirmDelete(true);\n  };\n\n  const handleCloseConfirmDialog = () => {\n    setDeleteId(null);\n    setConfirmDelete(false);\n  };\n\n  const renderPlanCourses = () => {\n    if (assignedTeachers != null && assignedTeachers.length > 0) {\n      let options = {\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\",\n        search: false,\n        tableLayout: \"auto\"\n      };\n      let actions = [{\n        icon: () => /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            minWidth: 80,\n            color: \"#dc3545\",\n            backgroundColor: \"transparent\",\n            border: \"1px solid #dc3545\"\n          },\n          color: \"danger\",\n          children: translate(\"Delete\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this),\n        onClick: (evt, data) => handleConfirmDialog(data.id)\n      }];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: tableRef,\n        children: [/*#__PURE__*/_jsxDEV(ActionTable, {\n          Title: `${translate(\"All\")} ${assignedTeachers.length}`,\n          Columns: columns,\n          Data: assignedTeachers,\n          Options: options,\n          Actions: actions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n          id: deleteId,\n          show: confirmDelete,\n          handleClose: handleCloseConfirmDialog,\n          handleDeleteCourse: handleDeleteCourse\n        }, \"Confirm Delete Course\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {\n      loading: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: /*#__PURE__*/_jsxDEV(GridItem, {\n      md: 12,\n      style: {\n        marginTop: \"1em .5em\"\n      },\n      children: renderPlanCourses()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AssignedTeachers, \"hfNJz0zcUvS4IQ+H9U/n+Y7wyaQ=\", false, function () {\n  return [useRouter, useTranslation];\n});\n\n_c = AssignedTeachers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedTeachers\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/initialize-year/assign-teachers/AssignedTeachers.tsx"],"names":["React","useState","useRef","useEffect","SuiButton","useRouter","useTranslation","Box","Button","Dialog","DialogActions","DialogTitle","IconButton","Typography","Close","ActionTable","toast","Placeholder","GridContainer","GridItem","TeacherService","AssignedTeachers","planData","refresh","router","translate","deleteId","setDeleteId","confirmDelete","setConfirmDelete","assignedTeachers","setAssignedTeachers","tableRef","teachers","setTeachers","fetch","GetAll","then","res","result","id","edu_year_id","GetTeachersAssignments","resp","length","map","entity","teacher","find","e","teacher_id","prefix_name","person","first_name","last_name","theo","theoretical_hours","theoretical_classes","pract","practical_hours","practical_classes","mixed","mixed_hours","mixed_classes","console","log","catch","err","error","columns","title","field","hidden","ConfirmDialog","show","handleClose","handleDeleteCourse","DeleteTeachersAssignments","success","handleConfirmDialog","handleCloseConfirmDialog","renderPlanCourses","options","actionsColumnIndex","headerStyle","backgroundColor","color","fontWeight","filtering","paging","pageSize","maxBodyHeight","search","tableLayout","actions","icon","minWidth","border","onClick","evt","data","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport SuiButton from \"../../../../../components/SuiButton\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"../../../../../Utility/Translations/useTranslation\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport ActionTable from \"../../../../../components/MaterialTable/ActionTable\";\r\nimport { toast } from \"react-toastify\";\r\nimport Placeholder from \"../../../../../Utility/Placeholders\";\r\nimport GridContainer from \"../../../../../components/Grid/GridContainer\";\r\nimport GridItem from \"../../../../../components/Grid/GridItem\";\r\nimport TeacherService from \"../../../../../Services/TeacherService\";\r\nimport { error } from \"console\";\r\n\r\ninterface IProps {\r\n  planData: any;\r\n  refresh: boolean;\r\n}\r\nexport const AssignedTeachers: React.FC<IProps> = ({ planData, refresh }) => {\r\n  const router = useRouter();\r\n  const { translate } = useTranslation();\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [confirmDelete, setConfirmDelete] = React.useState(false);\r\n  const [assignedTeachers, setAssignedTeachers] = React.useState([]);\r\n  const tableRef = useRef();\r\n  const [teachers, setTeachers] = useState([]);\r\n\r\n  const fetch = () => {\r\n    TeacherService.GetAll()\r\n      .then((res) => {\r\n        setTeachers(res.result);\r\n        if (planData.id && planData.edu_year_id) {\r\n          TeacherService.GetTeachersAssignments(\r\n            planData.id,\r\n            planData.edu_year_id\r\n          )\r\n            .then((resp) => {\r\n              if (resp.result != null && resp.result.length > 0) {\r\n                let assignedTeachers = resp.result.map((entity) => {\r\n                  const teacher = res.result?.find(\r\n                    (e) => e.id == entity?.teacher_id\r\n                  );\r\n                  return {\r\n                    id: entity.id,\r\n                    teacher_id: entity.teacher_id,\r\n                    teacher: `${teacher?.prefix_name} \r\n                                ${teacher?.person?.first_name} \r\n                                ${teacher?.person?.last_name}`,\r\n                    theo: `${entity.theoretical_hours}/${entity.theoretical_classes}`,\r\n                    pract: `${entity.practical_hours}/${entity.practical_classes}`,\r\n                    mixed: `${entity.mixed_hours}/${entity.mixed_classes}`,\r\n                  };\r\n                });\r\n                console.log(assignedTeachers);\r\n                setAssignedTeachers(assignedTeachers);\r\n              }\r\n            })\r\n            .catch((err) => {});\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err?.error);\r\n      });\r\n  };\r\n  // useEffect(() => {\r\n  //   fetch();\r\n  // }, []);\r\n  useEffect(() => {\r\n    fetch();\r\n  }, [refresh]);\r\n  const columns = [\r\n    {\r\n      title: \"المعرّف\",\r\n      field: \"id\",\r\n      hidden: true,\r\n    },\r\n    {\r\n      title: \"المدرّس\",\r\n      field: \"teacher\",\r\n    },\r\n    {\r\n      title: \"نظري س/ف\",\r\n      field: \"theo\",\r\n    },\r\n    {\r\n      title: \"عملي س/ف\",\r\n      field: \"pract\",\r\n    },\r\n    {\r\n      title: \"نظري/عملي س/ف\",\r\n      field: \"mixed\",\r\n    },\r\n  ];\r\n  const ConfirmDialog = ({ id, show, handleClose, handleDeleteCourse }) => {\r\n    return (\r\n      <Dialog open={show} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          <Typography>هل تريد تأكيد إنهاء تكليف المدرّس المقرر</Typography>\r\n        </DialogTitle>\r\n        <Box position=\"absolute\" top={0} right={0}>\r\n          <IconButton onClick={handleClose}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\" variant=\"contained\">\r\n            {translate(\"Cancel\")}\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDeleteCourse(id)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            {translate(\"Confirm\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n  const handleDeleteCourse = () => {\r\n    if (deleteId) {\r\n      TeacherService.DeleteTeachersAssignments(deleteId)\r\n        .then((resp) => {\r\n          if (resp.success) {\r\n            toast.success(translate(\"Teacher disengage successfully\"));\r\n            setConfirmDelete(false);\r\n            fetch();\r\n          }\r\n        })\r\n        .catch((err) => {});\r\n    } else toast.error(\"يجب تحديد معرّف\");\r\n  };\r\n  const handleConfirmDialog = (id) => {\r\n    setDeleteId(id);\r\n    setConfirmDelete(true);\r\n  };\r\n  const handleCloseConfirmDialog = () => {\r\n    setDeleteId(null);\r\n    setConfirmDelete(false);\r\n  };\r\n  const renderPlanCourses = () => {\r\n    if (assignedTeachers != null && assignedTeachers.length > 0) {\r\n      let options = {\r\n        actionsColumnIndex: -1,\r\n        headerStyle: {\r\n          backgroundColor: \"#01579b\",\r\n          color: \"#FFF\",\r\n          fontWeight: \"bold\",\r\n        },\r\n        filtering: false,\r\n        paging: true,\r\n        pageSize: 10,\r\n        maxBodyHeight: \"500px\",\r\n        search: false,\r\n        tableLayout: \"auto\",\r\n      };\r\n      let actions = [\r\n        {\r\n          icon: () => (\r\n            <SuiButton\r\n              style={{\r\n                minWidth: 80,\r\n                color: \"#dc3545\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"1px solid #dc3545\",\r\n              }}\r\n              color={\"danger\"}\r\n            >\r\n              {translate(\"Delete\")}\r\n            </SuiButton>\r\n          ),\r\n          onClick: (evt, data) => handleConfirmDialog(data.id),\r\n        },\r\n      ];\r\n      return (\r\n        <div ref={tableRef}>\r\n          <ActionTable\r\n            Title={`${translate(\"All\")} ${assignedTeachers.length}`}\r\n            Columns={columns}\r\n            Data={assignedTeachers}\r\n            Options={options}\r\n            Actions={actions}\r\n          />\r\n          <ConfirmDialog\r\n            key={\"Confirm Delete Course\"}\r\n            id={deleteId}\r\n            show={confirmDelete}\r\n            handleClose={handleCloseConfirmDialog}\r\n            handleDeleteCourse={handleDeleteCourse}\r\n          />\r\n        </div>\r\n      );\r\n    } else return <Placeholder loading={false} />;\r\n  };\r\n  return (\r\n    <GridContainer>\r\n      <GridItem md={12} style={{ marginTop: \"1em .5em\" }}>\r\n        {renderPlanCourses()}\r\n      </GridItem>\r\n    </GridContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}