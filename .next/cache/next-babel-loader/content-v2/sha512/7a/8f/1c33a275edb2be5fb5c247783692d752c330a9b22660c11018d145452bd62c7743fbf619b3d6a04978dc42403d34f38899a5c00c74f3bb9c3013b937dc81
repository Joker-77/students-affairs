{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\candidates\\\\CandidateCertificateInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Formik, Form, FieldArray } from \"formik\";\nimport { TextField, Box, Typography, MenuItem, Grid } from \"@material-ui/core\";\nimport Card from \"../../../../components/Card/Card.js\";\nimport CardHeader from \"../../../../components/Card/CardHeader.js\";\nimport CardBody from \"../../../../components/Card/CardBody.js\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport { governorates } from \"../../../../Static/resources\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle\";\n\nconst AddCertificateModal = ({\n  initValues,\n  callback\n}) => {\n  _s();\n\n  const {\n    locale\n  } = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  useEffect(() => console.log(initValues), []);\n  const courses = [{\n    id: 'math',\n    value: translate('Math')\n  }, {\n    id: 'physics',\n    value: translate('Physics')\n  }, // {\n  //   id: 'arabic',\n  //   value: translate('Arabic'),\n  // },\n  {\n    id: 'chemestry',\n    value: translate('Chemistry')\n  }, {\n    id: 'sum',\n    value: translate('Sum')\n  } // {\n  //   id: 'science',\n  //   value: translate('Science'),\n  // },\n  // {\n  //   id: 'nationality',\n  //   value: translate('Nationality Course'),\n  // },\n  ]; // const langCourses = [\n  //   {\n  //     id: 'english',\n  //     value: translate('English'),\n  //   },\n  //   {\n  //     id: 'الفرنسية',\n  //     value: translate('French'),\n  //   },\n  //   {\n  //     id: 'الروسية',\n  //     value: translate('Russian'),\n  //   },\n  // ];\n\n  const [disabled, setDisabled] = React.useState(true);\n  const formScheme = Yup.object().shape({// type: Yup.string().required(translate(\"{0} is required\", \"Type\")),\n    // year: Yup.string().required(translate(\"{0} is required\", \"Year\")),\n    // result: Yup.string().required(translate(\"{0} is required\", \"Result\")),\n    // city: Yup.string().required(translate(\"{0} is required\", \"City\")),\n    // round: Yup.string().required(translate(\"{0} is required\", \"Round\")),\n    // subscription_number: Yup.string().required(translate(\"{0} is required\", \"Subscription number\")),\n    // candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\")),\n  });\n\n  const submitForm = async (values, setSubmitting) => {// setSubmitting(true);\n    // console.log(\"values\", values);\n    // CertificateService.Edit(values)\n    //     .then((res) => {\n    //       console.log(\"Certificate\", res);\n    //     })\n    //     .catch((error) => {\n    //       console.error(\"error\", error);\n    //     })\n    //     .finally(() => {\n    //       setSubmitting(false);\n    //     });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"#01579b\"\n          },\n          children: [translate(\"Certificate Details\"), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initValues,\n          validationSchema: formScheme,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting);\n          },\n          children: formik => {\n            var _values$details;\n\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty\n            } = formik;\n            let validCourses = (_values$details = values.details) === null || _values$details === void 0 ? void 0 : _values$details.filter(item => courses.map(c => c.id).includes(item.key)); // const sumValidCourses = validCourses.reduce((partialSum, a) => partialSum + +a.value, 0);\n            // validCourses = [...validCourses, {key: 'sum', value: sumValidCourses + values.result}];\n\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Year\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      min: 0,\n                      id: \"year\",\n                      name: \"year\",\n                      value: values.year,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.year && errors.year),\n                      helperText: touched.year && errors.year,\n                      placeholder: translate(\"Year\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Result\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      min: 0,\n                      id: \"result\",\n                      name: \"result\",\n                      value: values.result,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.result && errors.result),\n                      helperText: touched.result && errors.result,\n                      placeholder: translate(\"Result\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"City\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: `city`,\n                      name: `city`,\n                      select: true,\n                      value: values.city,\n                      onChange: handleChange(`city`),\n                      onBlur: handleBlur,\n                      placeholder: translate(\"City\"),\n                      fullWidth: true,\n                      children: governorates(translate).map(city => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: city.value,\n                        children: city.value\n                      }, city.value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 37\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Round\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"round\",\n                      name: \"round\",\n                      value: values.round,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.round && errors.round),\n                      helperText: touched.round && errors.round,\n                      placeholder: translate(\"Round\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Subscription number\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      min: 0,\n                      id: \"subscription_number\",\n                      name: \"subscription_number\",\n                      value: values.subscription_number,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.subscription_number && errors.subscription_number),\n                      helperText: touched.subscription_number && errors.subscription_number,\n                      placeholder: translate(\"Subscription number\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  mb: 1,\n                  ml: 0.5,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"label\",\n                    variant: \"caption\",\n                    children: translate(\"Marks\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                  name: `details`,\n                  render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [validCourses && validCourses.length > 0 ? validCourses.map((mark, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            disabled: disabled,\n                            variant: \"outlined\",\n                            size: \"small\",\n                            type: \"select\",\n                            id: `details.${index}.key`,\n                            name: `details.${index}.key`,\n                            select: true,\n                            value: mark.key,\n                            onChange: handleChange(`details.${index}.key`),\n                            onBlur: handleBlur,\n                            placeholder: translate(\"Course\"),\n                            fullWidth: true,\n                            children: courses.map(course => /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: course.id,\n                              children: course.value\n                            }, course.id, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 332,\n                              columnNumber: 57\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 317,\n                            columnNumber: 51\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            disabled: disabled,\n                            onChange: handleChange(`details.${index}.value`),\n                            variant: \"outlined\",\n                            size: \"small\",\n                            type: \"number\",\n                            min: 0,\n                            id: `details.${index}.value`,\n                            name: `details.${index}.value`,\n                            value: mark.value,\n                            onBlur: handleBlur,\n                            error: Boolean((touched === null || touched === void 0 ? void 0 : touched.details) && (errors === null || errors === void 0 ? void 0 : errors.details)),\n                            helperText: (touched === null || touched === void 0 ? void 0 : touched.details) && (errors === null || errors === void 0 ? void 0 : errors.details),\n                            placeholder: translate(\"Mark\") //fullWidth\n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 340,\n                            columnNumber: 51\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 339,\n                          columnNumber: 49\n                        }, this), !disabled && /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(SuiButton, {\n                            style: {\n                              margin: 5\n                            },\n                            color: \"error\",\n                            onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                            ,\n                            children: \"-\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 359,\n                            columnNumber: 51\n                          }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n                            style: {\n                              margin: 5\n                            },\n                            color: \"primary\",\n                            onClick: () => arrayHelpers.insert(index + 1, {\n                              phone: '',\n                              type: ''\n                            }) // insert an empty string at a position\n                            ,\n                            children: \"+\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 367,\n                            columnNumber: 51\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 358,\n                          columnNumber: 63\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 47\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 45\n                    }, this)) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: !disabled && /*#__PURE__*/_jsxDEV(SuiButton, {\n                        variant: \"gradient\",\n                        color: \"primary\",\n                        onClick: () => arrayHelpers.push(''),\n                        children: translate(\"Add a mark\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 381,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: translate(\"Weighted mark\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 393,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: values.weighted_mark\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 396,\n                            columnNumber: 44\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 396,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 23\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddCertificateModal, \"V8lPOMWqOP8lc7zCqwLcTiRv8i0=\", true, function () {\n  return [useRouter, useTranslation];\n});\n\n_c = AddCertificateModal;\nexport default AddCertificateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCertificateModal\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/candidates/CandidateCertificateInfo.tsx"],"names":["React","useEffect","Formik","Form","FieldArray","TextField","Box","Typography","MenuItem","Grid","Card","CardHeader","CardBody","SuiButton","useRouter","useTranslation","governorates","Yup","makeStyles","styles","AddCertificateModal","initValues","callback","locale","translate","useStyles","classes","console","log","courses","id","value","disabled","setDisabled","useState","formScheme","object","shape","submitForm","values","setSubmitting","fontWeight","color","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","validCourses","details","filter","item","map","c","includes","key","year","Boolean","result","city","round","subscription_number","arrayHelpers","length","mark","index","course","margin","remove","insert","phone","type","push","weighted_mark"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {Formik, Form, FieldArray} from \"formik\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  MenuItem,\r\n  IconButton,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport Card from \"../../../../components/Card/Card.js\";\r\nimport CardHeader from \"../../../../components/Card/CardHeader.js\";\r\nimport CardBody from \"../../../../components/Card/CardBody.js\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport {useRouter} from \"next/router\";\r\nimport {useTranslation} from \"../../../../Utility/Translations/useTranslation\";\r\nimport {governorates} from \"../../../../Static/resources\";\r\nimport * as Yup from \"yup\";\r\nimport CertificateService from \"../../../../Services/CertificateService\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle\";\r\n\r\ninterface ICusomModalProps {\r\n  initValues: any;\r\n  callback();\r\n}\r\nconst AddCertificateModal: React.FC<ICusomModalProps> = ({initValues, callback}) => {\r\n  const {locale} = useRouter();\r\n  const {translate} = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => console.log(initValues), []);\r\n\r\n\r\n  const courses = [\r\n    {\r\n      id: 'math',\r\n      value: translate('Math'),\r\n    },\r\n    {\r\n      id: 'physics',\r\n      value: translate('Physics'),\r\n    },\r\n    // {\r\n    //   id: 'arabic',\r\n    //   value: translate('Arabic'),\r\n    // },\r\n    {\r\n      id: 'chemestry',\r\n      value: translate('Chemistry'),\r\n    },\r\n    {\r\n      id: 'sum',\r\n      value: translate('Sum'),\r\n    },\r\n    // {\r\n    //   id: 'science',\r\n    //   value: translate('Science'),\r\n    // },\r\n    // {\r\n    //   id: 'nationality',\r\n    //   value: translate('Nationality Course'),\r\n    // },\r\n  ];\r\n\r\n  // const langCourses = [\r\n  //   {\r\n  //     id: 'english',\r\n  //     value: translate('English'),\r\n  //   },\r\n  //   {\r\n  //     id: 'الفرنسية',\r\n  //     value: translate('French'),\r\n  //   },\r\n  //   {\r\n  //     id: 'الروسية',\r\n  //     value: translate('Russian'),\r\n  //   },\r\n  // ];\r\n\r\n  const [disabled, setDisabled] = React.useState<boolean>(true);\r\n\r\n  const formScheme = Yup.object().shape({\r\n    // type: Yup.string().required(translate(\"{0} is required\", \"Type\")),\r\n    // year: Yup.string().required(translate(\"{0} is required\", \"Year\")),\r\n    // result: Yup.string().required(translate(\"{0} is required\", \"Result\")),\r\n    // city: Yup.string().required(translate(\"{0} is required\", \"City\")),\r\n    // round: Yup.string().required(translate(\"{0} is required\", \"Round\")),\r\n    // subscription_number: Yup.string().required(translate(\"{0} is required\", \"Subscription number\")),\r\n    // candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\")),\r\n  });\r\n\r\n\r\n  const submitForm = async (values: any, setSubmitting) => {\r\n    // setSubmitting(true);\r\n    // console.log(\"values\", values);\r\n    // CertificateService.Edit(values)\r\n    //     .then((res) => {\r\n    //       console.log(\"Certificate\", res);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.error(\"error\", error);\r\n    //     })\r\n    //     .finally(() => {\r\n    //       setSubmitting(false);\r\n    //     });\r\n  };\r\n\r\n  return (\r\n\r\n        <Box>\r\n          <Card>\r\n            <CardHeader>\r\n              <h4 style={{ fontWeight: \"bold\", color: \"#01579b\" }}>{translate(\"Certificate Details\")} </h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Formik\r\n                  initialValues={initValues}\r\n                  validationSchema={formScheme}\r\n                  onSubmit={(values, { setSubmitting }) => {\r\n                    submitForm(values, setSubmitting);\r\n                  }}\r\n              >\r\n                {(formik) => {\r\n                  const {\r\n                    values,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    errors,\r\n                    touched,\r\n                    handleBlur,\r\n                    isSubmitting,\r\n                    isValid,\r\n                    dirty,\r\n                  } = formik;\r\n\r\n                  let validCourses = values.details?.filter((item) => courses.map(c=>c.id).includes(item.key));\r\n                  // const sumValidCourses = validCourses.reduce((partialSum, a) => partialSum + +a.value, 0);\r\n                  // validCourses = [...validCourses, {key: 'sum', value: sumValidCourses + values.result}];\r\n                  return (\r\n                      <Form>\r\n\r\n                        <Grid container spacing={2}>\r\n                          {/*<Grid item md={4}>*/}\r\n\r\n\r\n                          {/*  <Box mb={2}>*/}\r\n                          {/*    <Box mb={1} ml={0.5}>*/}\r\n                          {/*      <Typography component=\"label\" variant=\"caption\">*/}\r\n                          {/*        {translate(\"Type\")}*/}\r\n                          {/*      </Typography>*/}\r\n                          {/*    </Box>*/}\r\n                          {/*    <TextField*/}\r\n                          {/*        disabled={disabled}*/}\r\n                          {/*        onChange={handleChange}*/}\r\n                          {/*        variant=\"outlined\"*/}\r\n                          {/*        size=\"small\"*/}\r\n                          {/*        type=\"text\"*/}\r\n                          {/*        id=\"type\"*/}\r\n                          {/*        name=\"type\"*/}\r\n                          {/*        value={values.type}*/}\r\n                          {/*        onBlur={handleBlur}*/}\r\n                          {/*        error={Boolean(touched.type && errors.type)}*/}\r\n                          {/*        helperText={touched.type && errors.type}*/}\r\n                          {/*        placeholder={translate(\"Type\")}*/}\r\n                          {/*        fullWidth*/}\r\n                          {/*    />*/}\r\n                          {/*  </Box>*/}\r\n                          {/*</Grid>*/}\r\n                          <Grid item md={4}>\r\n                            <Box mb={2}>\r\n                              <Box mb={1} ml={0.5}>\r\n                                <Typography component=\"label\" variant=\"caption\">\r\n                                  {translate(\"Year\")}\r\n                                </Typography>\r\n                              </Box>\r\n                              <TextField\r\n                                  disabled={disabled}\r\n                                  onChange={handleChange}\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  type=\"number\"\r\n                                  min={0}\r\n                                  id=\"year\"\r\n                                  name=\"year\"\r\n                                  value={values.year}\r\n                                  onBlur={handleBlur}\r\n                                  error={Boolean(touched.year && errors.year)}\r\n                                  helperText={touched.year && errors.year}\r\n                                  placeholder={translate(\"Year\")}\r\n                                  fullWidth\r\n                              />\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item md={4}>\r\n                            <Box mb={2}>\r\n                              <Box mb={1} ml={0.5}>\r\n                                <Typography component=\"label\" variant=\"caption\">\r\n                                  {translate(\"Result\")}\r\n                                </Typography>\r\n                              </Box>\r\n                              <TextField\r\n                                  disabled={disabled}\r\n                                  onChange={handleChange}\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  type=\"number\"\r\n                                  min={0}\r\n                                  id=\"result\"\r\n                                  name=\"result\"\r\n                                  value={values.result}\r\n                                  onBlur={handleBlur}\r\n                                  error={Boolean(touched.result && errors.result)}\r\n                                  helperText={touched.result && errors.result}\r\n                                  placeholder={translate(\"Result\")}\r\n                                  fullWidth\r\n                              />\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item md={4}>\r\n                            <Box mb={2}>\r\n                              <Box mb={1} ml={0.5}>\r\n                                <Typography component=\"label\" variant=\"caption\">\r\n                                  {translate(\"City\")}\r\n                                </Typography>\r\n                              </Box>\r\n                              <TextField\r\n                                  disabled={disabled}\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  type=\"select\"\r\n                                  id={`city`}\r\n                                  name={`city`}\r\n                                  select={true}\r\n                                  value={values.city}\r\n                                  onChange={handleChange(`city`)}\r\n                                  onBlur={handleBlur}\r\n                                  placeholder={translate(\"City\")}\r\n                                  fullWidth\r\n                              >\r\n                                {governorates(translate).map((city) => (\r\n                                    <MenuItem key={city.value} value={city.value}>\r\n                                      {city.value}\r\n                                    </MenuItem>\r\n                                ))}\r\n                              </TextField>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item md={4}>\r\n                            <Box mb={2}>\r\n                              <Box mb={1} ml={0.5}>\r\n                                <Typography component=\"label\" variant=\"caption\">\r\n                                  {translate(\"Round\")}\r\n                                </Typography>\r\n                              </Box>\r\n                              <TextField\r\n                                  disabled={disabled}\r\n                                  onChange={handleChange}\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  type=\"text\"\r\n                                  id=\"round\"\r\n                                  name=\"round\"\r\n                                  value={values.round}\r\n                                  onBlur={handleBlur}\r\n                                  error={Boolean(touched.round && errors.round)}\r\n                                  helperText={touched.round && errors.round}\r\n                                  placeholder={translate(\"Round\")}\r\n                                  fullWidth\r\n                              />\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item md={4}>\r\n                            <Box mb={2}>\r\n                              <Box mb={1} ml={0.5}>\r\n                                <Typography component=\"label\" variant=\"caption\">\r\n                                  {translate(\"Subscription number\")}\r\n                                </Typography>\r\n                              </Box>\r\n                              <TextField\r\n                                  disabled={disabled}\r\n                                  onChange={handleChange}\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  type=\"number\"\r\n                                  min={0}\r\n                                  id=\"subscription_number\"\r\n                                  name=\"subscription_number\"\r\n                                  value={values.subscription_number}\r\n                                  onBlur={handleBlur}\r\n                                  error={Boolean(touched.subscription_number && errors.subscription_number)}\r\n                                  helperText={touched.subscription_number && errors.subscription_number}\r\n                                  placeholder={translate(\"Subscription number\")}\r\n                                  fullWidth\r\n                              />\r\n                            </Box>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Box mb={2}>\r\n                          <Box mb={1} ml={0.5}>\r\n                            <Typography component=\"label\" variant=\"caption\">\r\n                              {translate(\"Marks\")}\r\n                            </Typography>\r\n                          </Box>\r\n                          <FieldArray\r\n                              name={`details`}\r\n                              render={arrayHelpers => (\r\n                                  <div>\r\n                                    {validCourses && validCourses.length > 0 ? (\r\n                                        validCourses.map((mark, index) => (\r\n                                            <div key={index}>\r\n\r\n                                              <Grid container spacing={2}>\r\n                                                <Grid item xs={4}>\r\n                                                  <TextField\r\n                                                      disabled={disabled}\r\n                                                      variant=\"outlined\"\r\n                                                      size=\"small\"\r\n                                                      type=\"select\"\r\n                                                      id={`details.${index}.key`}\r\n                                                      name={`details.${index}.key`}\r\n                                                      select={true}\r\n                                                      value={mark.key}\r\n                                                      onChange={handleChange(`details.${index}.key`)}\r\n                                                      onBlur={handleBlur}\r\n                                                      placeholder={translate(\"Course\")}\r\n                                                      fullWidth\r\n                                                  >\r\n                                                    {courses.map((course) => (\r\n                                                        <MenuItem key={course.id} value={course.id}>\r\n                                                          {course.value}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                  </TextField>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4}>\r\n                                                  <TextField\r\n                                                      disabled={disabled}\r\n                                                      onChange={handleChange(`details.${index}.value`)}\r\n                                                      variant=\"outlined\"\r\n                                                      size=\"small\"\r\n                                                      type=\"number\"\r\n                                                      min={0}\r\n                                                      id={`details.${index}.value`}\r\n                                                      name={`details.${index}.value`}\r\n                                                      value={mark.value}\r\n                                                      onBlur={handleBlur}\r\n                                                      error={Boolean(touched?.details && errors?.details)}\r\n                                                      helperText={touched?.details && errors?.details}\r\n                                                      placeholder={translate(\"Mark\")}\r\n                                                      //fullWidth\r\n                                                  />\r\n                                                </Grid>\r\n\r\n                                                {!disabled && <Grid item xs={4}>\r\n                                                  <SuiButton\r\n                                                      style={{ margin: 5 }}\r\n                                                      color=\"error\"\r\n                                                      onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                                  >\r\n                                                    -\r\n                                                  </SuiButton>\r\n\r\n                                                  <SuiButton\r\n                                                      style={{ margin: 5 }}\r\n                                                      color=\"primary\"\r\n                                                      onClick={() => arrayHelpers.insert(index+1, {phone: '', type: ''})} // insert an empty string at a position\r\n                                                  >\r\n                                                    +\r\n                                                  </SuiButton>\r\n                                                </Grid>}\r\n                                              </Grid>\r\n\r\n                                            </div>\r\n                                        ))\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                          {!disabled && <SuiButton\r\n                                              variant=\"gradient\"\r\n                                              color=\"primary\"\r\n                                              onClick={() => arrayHelpers.push('')}>\r\n                                            {/* show this when user has removed all phones from the list */}\r\n                                            {translate(\"Add a mark\")}\r\n                                          </SuiButton>}\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                    <div></div>\r\n                                    <Grid container spacing={2}>\r\n                                      <Grid item xs={6}>\r\n                                        <p>{translate(\"Weighted mark\")}</p>\r\n                                      </Grid>\r\n                                      <Grid item xs={6}>\r\n                                        <p><strong>{values.weighted_mark}</strong></p>\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </div>\r\n                              )}\r\n                          />\r\n                        </Box>\r\n\r\n\r\n                        {/*<Box mt={4} mb={1}>*/}\r\n                        {/*  {isSubmitting ? (*/}\r\n                        {/*      <SuiButton*/}\r\n                        {/*          disabled={true}*/}\r\n                        {/*          variant=\"gradient\"*/}\r\n                        {/*          color=\"info\"*/}\r\n                        {/*          fullWidth*/}\r\n                        {/*      >*/}\r\n                        {/*        {translate('Processing ...')}*/}\r\n                        {/*      </SuiButton>*/}\r\n                        {/*  ) : (*/}\r\n                        {/*      <SuiButton*/}\r\n                        {/*          disabled={!(dirty && isValid)}*/}\r\n                        {/*          type=\"submit\"*/}\r\n                        {/*          variant=\"gradient\"*/}\r\n                        {/*          color=\"info\"*/}\r\n                        {/*          fullWidth*/}\r\n                        {/*      >*/}\r\n                        {/*        {translate(\"Save\")}*/}\r\n                        {/*      </SuiButton>*/}\r\n                        {/*  )}*/}\r\n                        {/*</Box>*/}\r\n                      </Form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </CardBody>\r\n          </Card>\r\n        </Box>\r\n  );\r\n};\r\n\r\nexport default AddCertificateModal;\r\n"]},"metadata":{},"sourceType":"module"}