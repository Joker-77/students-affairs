{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport apiConnector from \"./TokenizedApiClient\";\n\nvar ObserverService = /*#__PURE__*/function () {\n  function ObserverService() {\n    _classCallCheck(this, ObserverService);\n  }\n\n  _createClass(ObserverService, null, [{\n    key: \"GetAll\",\n    value: function () {\n      var _GetAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var listUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                listUrl = process.env.LIST_OBSERVER_URL;\n                console.clear();\n                console.log(listUrl);\n                _context.next = 5;\n                return apiConnector.get(listUrl).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 5:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function GetAll() {\n        return _GetAll.apply(this, arguments);\n      }\n\n      return GetAll;\n    }()\n  }, {\n    key: \"Add\",\n    value: function () {\n      var _Add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        var addUrl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                addUrl = process.env.ADD_OBSERVER_URL;\n                _context2.next = 3;\n                return apiConnector.post(addUrl, payload).then(function (response) {\n                  var _response$data;\n\n                  if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n                    var result = response === null || response === void 0 ? void 0 : response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function Add(_x) {\n        return _Add.apply(this, arguments);\n      }\n\n      return Add;\n    }()\n  }, {\n    key: \"Edit\",\n    value: function () {\n      var _Edit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(payload) {\n        var editUrl;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                editUrl = process.env.EDIT_OBSERVER_URL;\n                _context3.next = 3;\n                return apiConnector.post(editUrl, payload).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function Edit(_x2) {\n        return _Edit.apply(this, arguments);\n      }\n\n      return Edit;\n    }()\n  }, {\n    key: \"Get\",\n    value: function () {\n      var _Get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n        var detailUrl;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                detailUrl = process.env.LIST_OBSERVER_URL + \"/\".concat(id);\n                _context4.next = 3;\n                return apiConnector.get(detailUrl).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  console.log(\"Api Error:\", error);\n                  throw error;\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function Get(_x3) {\n        return _Get.apply(this, arguments);\n      }\n\n      return Get;\n    }()\n  }, {\n    key: \"GetLevels\",\n    value: function () {\n      var _GetLevels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var listUrl;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                listUrl = process.env.LIST_FUNCTIONAL_BODIES_URL;\n                console.clear();\n                console.log(listUrl);\n                _context5.next = 5;\n                return apiConnector.get(listUrl).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 5:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function GetLevels() {\n        return _GetLevels.apply(this, arguments);\n      }\n\n      return GetLevels;\n    }()\n  }, {\n    key: \"GetActivities\",\n    value: function () {\n      var _GetActivities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var listUrl;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                listUrl = process.env.LIST_ACTIVITIES_URL;\n                console.clear();\n                console.log(listUrl);\n                _context6.next = 5;\n                return apiConnector.get(listUrl).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 5:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function GetActivities() {\n        return _GetActivities.apply(this, arguments);\n      }\n\n      return GetActivities;\n    }()\n  }]);\n\n  return ObserverService;\n}();\n\nexport { ObserverService as default };","map":null,"metadata":{},"sourceType":"module"}