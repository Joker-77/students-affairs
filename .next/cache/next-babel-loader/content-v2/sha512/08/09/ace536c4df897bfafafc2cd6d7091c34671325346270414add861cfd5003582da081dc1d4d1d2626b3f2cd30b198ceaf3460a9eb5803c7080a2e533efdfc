{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\initialize-year\\\\assign-teachers\\\\AssignTeacher.tsx\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport * as yup from \"yup\";\nimport Admin from \"../../../../../layouts/Admin\";\nimport { Card, Grid, Select, TextField, Typography } from \"@material-ui/core\";\nimport GridItem from \"../../../../../components/Grid/GridItem\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../../Utility/Translations/useTranslation\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport SuiButton from \"../../../../../components/SuiButton\";\n\nconst AssignTeacher = ({\n  show,\n  setShow,\n  teachers\n}) => {\n  const {\n    0: teacher,\n    1: setTeacher\n  } = useState(null);\n  const router = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  let asssignTeacherSchema = yup.object({\n    teacher_id: yup.number(translate(\"Teacher\")).required(translate(\"Field is required\")),\n    theoretical_hours: yup.number(translate(\"Theoretical Hours\")).required(translate(\"Field is required\")),\n    practical_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    mixed_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    theoretical_classes: yup.number(translate(\"Theoretical Classes\")).required(translate(\"Field is required\")),\n    practical_classes: yup.number(\"Practical Classes\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    mixed_classes: yup.number(\"Mixed Classes\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    notes: yup.string().nullable()\n  });\n\n  const submitForm = (values, setSubmitting) => {\n    // CourseService.Add(payload)\n    //   .then((response) => {\n    //     if (response.success) {\n    //       toast.success(\"Course Added Successfully\");\n    //     } else {\n    //       console.log(response.error);\n    //       toast.error(response.error.message);\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(error.message);\n    //     toast.error(error.message);\n    //     throw new Error(error);\n    //   });\n    setSubmitting(false); // CourseService.Add(payload)\n    //   .then(() => {})\n    //   .catch((e) => console.error(e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    md: 12,\n    sm: 12,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      md: 12,\n      sm: 12,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"1em 4em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            item: true,\n            md: 9,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: [translate(\"Course Name\"), \":\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mb: 1.5\n              },\n              color: \"text.secondary\",\n              children: translate(\"Course Details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            md: 3,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(SuiButton, {\n              onClick: setShow,\n              color: \"warning\",\n              children: [/*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), translate(\"Back To Previous Page\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"3em 3em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true //initialValues={initialValues}\n          ,\n          validationSchema: asssignTeacherSchema,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting); // console.clear();\n            // console.log(values);\n          },\n          children: formik => {\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty,\n              setFieldValue\n            } = formik;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  style: {\n                    margin: \"1em 0em\",\n                    color: \"red\",\n                    display: errors && // ðŸ‘ˆ null and undefined check\n                    Object.keys(errors).length === 0 && Object.getPrototypeOf(errors) === Object.prototype ? \"none\" : \"block\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 3,\n                    md: 3,\n                    style: {\n                      color: \"red\"\n                    },\n                    children: JSON.stringify(errors)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"ar_name\",\n                      name: \"ar_name\",\n                      value: values.ar_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.ar_name && errors.ar_name),\n                      helperText: touched.ar_name && errors.ar_name,\n                      placeholder: translate(\"Arabic Name\"),\n                      label: translate(\"Arabic Name\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"theoretical_hours\",\n                      name: \"theoretical_hours\",\n                      value: values.theoretical_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.theoretical_hours && errors.theoretical_hours),\n                      helperText: touched.theoretical_hours && errors.theoretical_hours,\n                      placeholder: translate(\"Theoretical Hours\"),\n                      label: translate(\"Theoretical Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"theoretical_classes\",\n                      name: \"theoretical_classes\",\n                      value: values.theoretical_classes,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.theoretical_classes && errors.theoretical_classes),\n                      helperText: touched.theoretical_classes && errors.theoretical_classes,\n                      placeholder: translate(\"Theoretical Classes\"),\n                      label: translate(\"Theoretical Classes\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"mixed_hours\",\n                      name: \"mixed_hours\",\n                      value: values.code,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.mixed_hours && errors.mixed_hours),\n                      helperText: touched.mixed_hours && errors.mixed_hours,\n                      placeholder: translate(\"Mixed Hours\"),\n                      label: translate(\"Mixed Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 4,\n                mb: 1,\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"space-between\"\n                },\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(SuiButton, {\n                  type: \"button\",\n                  disabled: true,\n                  variant: \"gradient\",\n                  color: \"info\",\n                  children: translate(\"Processing ...\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                  style: {\n                    color: \"rgb(255, 255, 255)\",\n                    background: \"rgb(23, 193, 232)\"\n                  },\n                  disabled: !isValid && isSubmitting,\n                  type: \"submit\",\n                  children: translate(\"Save\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\nAssignTeacher.layout = Admin;\nAssignTeacher.auth = false;\nexport default AssignTeacher;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/initialize-year/assign-teachers/AssignTeacher.tsx"],"names":["Form","Formik","React","useState","yup","Admin","Card","Grid","Select","TextField","Typography","GridItem","useRouter","useTranslation","ArrowBack","SuiButton","AssignTeacher","show","setShow","teachers","teacher","setTeacher","router","translate","asssignTeacherSchema","object","teacher_id","number","required","theoretical_hours","practical_hours","min","mixed_hours","theoretical_classes","practical_classes","mixed_classes","notes","string","nullable","submitForm","values","setSubmitting","padding","margin","mb","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","setFieldValue","color","display","Object","keys","length","getPrototypeOf","prototype","JSON","stringify","ar_name","Boolean","code","justifyContent","background","layout","auth"],"mappings":"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","sourcesContent":["import { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport Admin from \"../../../../../layouts/Admin\";\r\nimport { Card, Grid, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport GridItem from \"../../../../../components/Grid/GridItem\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"../../../../../Utility/Translations/useTranslation\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IAssignTeacherModel } from \"../../../../../Models/Teachers/TeacherModel\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport SuiButton from \"../../../../../components/SuiButton\";\r\n\r\ninterface IAssignTeacherProps {\r\n  title: string;\r\n  teachers: any;\r\n  show: boolean;\r\n  setShow: () => void;\r\n}\r\nconst AssignTeacher: React.FC<IAssignTeacherProps> = ({\r\n  show,\r\n  setShow,\r\n  teachers,\r\n}) => {\r\n  const [teacher, setTeacher] = useState(null);\r\n  const router = useRouter();\r\n  const { translate } = useTranslation();\r\n\r\n  let asssignTeacherSchema = yup.object({\r\n    teacher_id: yup\r\n      .number(translate(\"Teacher\"))\r\n      .required(translate(\"Field is required\")),\r\n    theoretical_hours: yup\r\n      .number(translate(\"Theoretical Hours\"))\r\n      .required(translate(\"Field is required\")),\r\n    practical_hours: yup\r\n      .number(\"Practical Hours\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    mixed_hours: yup\r\n      .number(\"Practical Hours\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    theoretical_classes: yup\r\n      .number(translate(\"Theoretical Classes\"))\r\n      .required(translate(\"Field is required\")),\r\n    practical_classes: yup\r\n      .number(\"Practical Classes\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    mixed_classes: yup\r\n      .number(\"Mixed Classes\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    notes: yup.string().nullable(),\r\n  });\r\n\r\n  const submitForm = (values, setSubmitting) => {\r\n    // CourseService.Add(payload)\r\n    //   .then((response) => {\r\n    //     if (response.success) {\r\n    //       toast.success(\"Course Added Successfully\");\r\n    //     } else {\r\n    //       console.log(response.error);\r\n    //       toast.error(response.error.message);\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error.message);\r\n    //     toast.error(error.message);\r\n    //     throw new Error(error);\r\n    //   });\r\n    setSubmitting(false);\r\n    // CourseService.Add(payload)\r\n    //   .then(() => {})\r\n    //   .catch((e) => console.error(e));\r\n  };\r\n  return (\r\n    <Grid container md={12} sm={12}>\r\n      <Grid md={12} sm={12} xs={12}>\r\n        <Card style={{ padding: \"1em 4em\", margin: \"5px 0px\" }}>\r\n          <Grid container>\r\n            <GridItem item md={9} xs={12} sm={12}>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                {translate(\"Course Name\")}:{\" \"}\r\n              </Typography>\r\n              <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                {translate(\"Course Details\")}\r\n              </Typography>\r\n            </GridItem>\r\n            <GridItem md={3} xs={12} sm={12}>\r\n              <SuiButton onClick={setShow} color={\"warning\"}>\r\n                <ArrowBack />\r\n                {translate(\"Back To Previous Page\")}\r\n              </SuiButton>\r\n            </GridItem>\r\n          </Grid>\r\n        </Card>\r\n        <Card style={{ padding: \"3em 3em\", margin: \"5px 0px\" }}>\r\n          <Formik\r\n            enableReinitialize\r\n            //initialValues={initialValues}\r\n            validationSchema={asssignTeacherSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              submitForm(values, setSubmitting);\r\n              // console.clear();\r\n              // console.log(values);\r\n            }}\r\n          >\r\n            {(formik) => {\r\n              const {\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                isSubmitting,\r\n                isValid,\r\n                dirty,\r\n                setFieldValue,\r\n              } = formik;\r\n              return (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Grid container md={12} xs={12} style={{ margin: \"1em 0em\" }}>\r\n                    <Grid\r\n                      container\r\n                      md={12}\r\n                      style={{\r\n                        margin: \"1em 0em\",\r\n                        color: \"red\",\r\n                        display:\r\n                          errors && // ðŸ‘ˆ null and undefined check\r\n                          Object.keys(errors).length === 0 &&\r\n                          Object.getPrototypeOf(errors) === Object.prototype\r\n                            ? \"none\"\r\n                            : \"block\",\r\n                      }}\r\n                    >\r\n                      <Grid item xs={3} md={3} style={{ color: \"red\" }}>\r\n                        {JSON.stringify(errors)}\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <Select\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"ar_name\"\r\n                          name=\"ar_name\"\r\n                          value={values.ar_name}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.ar_name && errors.ar_name)}\r\n                          helperText={touched.ar_name && errors.ar_name}\r\n                          placeholder={translate(\"Arabic Name\")}\r\n                          label={translate(\"Arabic Name\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"theoretical_hours\"\r\n                          name=\"theoretical_hours\"\r\n                          value={values.theoretical_hours}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.theoretical_hours &&\r\n                              errors.theoretical_hours\r\n                          )}\r\n                          helperText={\r\n                            touched.theoretical_hours &&\r\n                            errors.theoretical_hours\r\n                          }\r\n                          placeholder={translate(\"Theoretical Hours\")}\r\n                          label={translate(\"Theoretical Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"theoretical_classes\"\r\n                          name=\"theoretical_classes\"\r\n                          value={values.theoretical_classes}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.theoretical_classes &&\r\n                              errors.theoretical_classes\r\n                          )}\r\n                          helperText={\r\n                            touched.theoretical_classes &&\r\n                            errors.theoretical_classes\r\n                          }\r\n                          placeholder={translate(\"Theoretical Classes\")}\r\n                          label={translate(\"Theoretical Classes\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"mixed_hours\"\r\n                          name=\"mixed_hours\"\r\n                          value={values.code}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.mixed_hours && errors.mixed_hours\r\n                          )}\r\n                          helperText={touched.mixed_hours && errors.mixed_hours}\r\n                          placeholder={translate(\"Mixed Hours\")}\r\n                          label={translate(\"Mixed Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container md={12} xs={12} style={{ margin: \"1em 0em\" }}>\r\n                    <Grid item xs={3} md={3}></Grid>\r\n                  </Grid>\r\n                  <Box\r\n                    mt={4}\r\n                    mb={1}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    {isSubmitting ? (\r\n                      <SuiButton\r\n                        type=\"button\"\r\n                        disabled={true}\r\n                        variant=\"gradient\"\r\n                        color=\"info\"\r\n                      >\r\n                        {translate(\"Processing ...\")}\r\n                      </SuiButton>\r\n                    ) : (\r\n                      <SuiButton\r\n                        style={{\r\n                          color: \"rgb(255, 255, 255)\",\r\n                          background: \"rgb(23, 193, 232)\",\r\n                        }}\r\n                        disabled={!isValid && isSubmitting}\r\n                        type=\"submit\"\r\n                      >\r\n                        {translate(\"Save\")}\r\n                      </SuiButton>\r\n                    )}\r\n                  </Box>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n(AssignTeacher as any).layout = Admin;\r\n(AssignTeacher as any).auth = false;\r\n\r\nexport default AssignTeacher;\r\n"]},"metadata":{},"sourceType":"module"}