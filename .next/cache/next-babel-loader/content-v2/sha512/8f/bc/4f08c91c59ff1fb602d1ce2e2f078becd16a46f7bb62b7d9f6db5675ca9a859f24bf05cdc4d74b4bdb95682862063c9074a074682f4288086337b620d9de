{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\candidates\\\\candidates-list.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { Button, AccordionDetails, Accordion } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport { ExportToCsv } from \"export-to-csv\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport CandidateService from \"../../../../Services/CandidateService\";\nimport SearchAddCandidateModal from \"../../../../components/Modals/SearchAddCandidateModal\";\nimport * as Yup from \"yup\";\nimport { useRouter } from 'next/router';\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { setCandidate, useAppDispatch } from \"../../../../redux\";\nimport AddTestResultsFileModal from \"../../../../components/Modals/AddTestResultsFileModal\";\nimport AddCandidateOutSideMinistryModal from \"../../../../components/Modals/AddCandidateOutSideMinistryModal\";\nimport _ from \"lodash\";\n\nconst CandidatesList = ({\n  forRegistrations = false,\n  title,\n  customColumns\n}) => {\n  const router = useRouter();\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [searchResult, setSearchResult] = React.useState(null);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setSearchResult(null);\n    setOpen(false);\n  };\n\n  const [initAddCandidate, setInitAddCandidate] = React.useState({\n    subscription_number: \"\",\n    year: \"\",\n    governorate: \"\",\n    round: \"\"\n  });\n  const AddCandidateScheme = Yup.object().shape({\n    subscription_number: Yup.string().required(translate(\"{0} is required\", \"Subscription number\")),\n    year: Yup.string().required(translate(\"{0} is required\", \"Year\")),\n    governorate: Yup.string().required(translate(\"{0} is required\", \"City\")),\n    round: Yup.string().required(translate(\"{0} is required\", \"Round\"))\n  });\n  const [openTestResults, setOpenTestResults] = React.useState(false);\n\n  const handleOpenTestResults = () => {\n    setOpenTestResults(true);\n  };\n\n  const handleCloseTestResults = () => {\n    setOpenTestResults(false);\n  };\n\n  const [openOutsideCandidate, setOpenOutsideCandidate] = React.useState(false);\n\n  const handleOpenOutsideCandidate = () => {\n    setOpenOutsideCandidate(true);\n  };\n\n  const handleCloseOutsideCandidate = () => {\n    setOpenOutsideCandidate(false);\n  };\n\n  const submitSearchCandidate = async (values, setSubmitting) => {\n    setSubmitting(true);\n    CandidateService.Search(values).then(res => {\n      setSearchResult({\n        found: Boolean(res.result),\n        result: res.result\n      }); // setOpen(false);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n    ;\n  };\n\n  const submitAddCandidate = async (values, setSubmitting) => {\n    setSubmitting(true);\n    CandidateService.AddAfterSearch(values).then(res => {\n      const candidatesCopy = [res.result, ...Candidates];\n      setCandidates(candidatesCopy);\n      handleClose();\n      dispatch(setCandidate(res.result));\n      router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/candidate-details`);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n    ;\n  };\n\n  const [loading, setLoading] = React.useState(false);\n  /************************** Data ****************************/\n\n  useEffect(() => {\n    setLoading(true);\n    CandidateService.GetAll().then(res => {\n      var _res$result;\n\n      console.log(\"Candidates\", res);\n      var list = forRegistrations ? (_res$result = res.result) === null || _res$result === void 0 ? void 0 : _res$result.filter(item => {\n        var _item$registerations;\n\n        return ((_item$registerations = item.registerations) === null || _item$registerations === void 0 ? void 0 : _item$registerations.length) > 0;\n      }) : res.result; // if(forRegistrations) {\n      //     list = list.map(item => {\n      //         return {\n      //             ...item,\n      //             class_id: registerations[0].status,//registerations[0].status\n      //             status_id: registerations[0].status,\n      //         }\n      //     });\n      // }\n\n      setCandidates(list);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  const [Candidates, setCandidates] = React.useState(null);\n\n  const renderCandidates = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(Placeholder, {\n      loading: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }, this);\n\n    if (Candidates != null && Candidates.length > 0) {\n      let columns = [{\n        title: translate(\"Id\"),\n        field: \"id\",\n        hidden: true,\n        filtering: false\n      }, {\n        title: translate(\"Name\"),\n        field: \"full_name\",\n        filtering: false\n      }, {\n        title: translate(\"Father\"),\n        field: \"father.first_name\",\n        hidden: true,\n        filtering: false\n      }, {\n        title: translate(\"Mother\"),\n        field: \"mother.first_name\",\n        hidden: true,\n        filtering: false\n      }, {\n        title: translate(\"Registeration number\"),\n        field: \"registeration_number\",\n        filtering: false,\n        type: \"string\"\n      }, {\n        title: translate(\"Subscription number\"),\n        field: \"certificates[0].subscription_number\",\n        filtering: false\n      }, {\n        title: translate(\"City\"),\n        field: \"certificates[0].city\",\n        filtering: false\n      }, {\n        title: translate(\"Round\"),\n        field: \"certificates[0].round\",\n        filtering: false\n      }, {\n        title: translate(\"Subscription number\"),\n        field: \"certificates[0].subscription_number\",\n        hidden: true,\n        filtering: false\n      } // {\n      //     title: translate(\"Result\"),\n      //     field: \"certificates[0].result\",\n      // },\n      ];\n      let data = Candidates;\n      let options = {\n        exportAllData: true,\n        exportButton: true,\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: true,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\"\n      };\n      const btnLabel = !forRegistrations ? \"Candidate Details\" : \"Edit Registration\";\n      const btnPage = !forRegistrations ? \"candidate-details\" : \"edit-registration\";\n      let actions = [{\n        icon: () => /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            minWidth: 140\n          },\n          color: 'primary',\n          children: translate(btnLabel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 33\n        }, this),\n        onClick: (evt, data) => {\n          dispatch(setCandidate(data));\n          router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/${btnPage}`);\n        }\n      }];\n      return /*#__PURE__*/_jsxDEV(ActionTable, {\n        Title: title || translate(\"Candidates List\"),\n        Columns: customColumns || columns,\n        Data: data.map(item => {\n          var _item$person, _item$father, _item$person2;\n\n          return _objectSpread(_objectSpread({}, item), {}, {\n            full_name: `${(_item$person = item.person) === null || _item$person === void 0 ? void 0 : _item$person.first_name} ${(_item$father = item.father) === null || _item$father === void 0 ? void 0 : _item$father.first_name} ${(_item$person2 = item.person) === null || _item$person2 === void 0 ? void 0 : _item$person2.last_name}`\n          });\n        }),\n        Options: options,\n        Actions: actions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 23\n    }, this);\n  }; // Dynamic Export\n\n\n  const [showExportColumns, setShowExportColumns] = React.useState(false);\n  const [selectedColumns, setSelectedColumns] = React.useState([]);\n\n  const handleExportData = () => {\n    setShowExportColumns(!showExportColumns);\n  };\n\n  const csvOptions = {\n    fieldSeparator: \",\",\n    quoteStrings: '\"',\n    decimalSeparator: \".\",\n    showLabels: true,\n    useBom: true,\n    useKeysAsHeaders: false,\n    headers: selectedColumns.map(c => c.title)\n  };\n  const csvExporter = new ExportToCsv(csvOptions);\n\n  const generateExcel = () => {\n    csvExporter.generateCsv(Candidates.map(course => {\n      let object = {};\n      selectedColumns.forEach((item, index) => {\n        var _$get;\n\n        _.set(object, `col ${index}`, (_$get = _.get(course, item.field)) !== null && _$get !== void 0 ? _$get : \"\");\n      });\n      console.log(object);\n      return object;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      md: 12,\n      children: [!forRegistrations && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleOpen,\n          children: translate(\"Add New Candidate\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleOpenOutsideCandidate,\n          children: [translate(\"Add Candidate\"), \" \", translate(\"out-side of ministry data\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"gradient\",\n          onClick: handleOpenTestResults,\n          color: 'dark',\n          children: translate(\"Add acceptance test results\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n          style: {\n            marginLeft: 10\n          },\n          disabled: false,\n          variant: \"gradient\",\n          onClick: handleExportData,\n          color: 'dark',\n          children: translate(\"Export\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), showExportColumns && /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                md: 12,\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    backgroundColor: \"lightgray\",\n                    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n                    padding: \"0em 1.2em\",\n                    margin: \"0em 0em .5em 0em\"\n                  },\n                  children: translate(\"Select Columns\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                md: 12,\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  className: \"list-container\",\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  },\n                  children: columns // .filter((item) => !item.hidden)\n                  .map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      value: item.field,\n                      type: \"checkbox\",\n                      onChange: handleCheck\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 57\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  md: 12,\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      margin: \"0px 5px\"\n                    },\n                    disabled: false,\n                    variant: \"contained\",\n                    className: classes.successText,\n                    onClick: generateExcel,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        padding: \"0px 0px 0px 10px\"\n                      },\n                      children: translate(\"Export\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this), renderCandidates()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchAddCandidateModal, {\n      searchResult: searchResult,\n      onAddClick: submitAddCandidate,\n      title: translate(\"Add Candidate\"),\n      open: open,\n      formScheme: AddCandidateScheme,\n      handleClose: handleClose,\n      initValues: initAddCandidate,\n      submitForm: submitSearchCandidate\n    }, \"addCandidate\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTestResultsFileModal, {\n      title: translate(\"Add acceptance test results\"),\n      open: openTestResults,\n      handleClose: handleCloseTestResults,\n      submitForm: () => handleCloseTestResults()\n    }, \"addAcceptanceTestResults\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddCandidateOutSideMinistryModal, {\n      // title={translate(\"Add acceptance test results\")}\n      open: openOutsideCandidate,\n      handleClose: handleCloseOutsideCandidate\n    }, \"addOutsideCandidate\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 9\n  }, this);\n};\n\nCandidatesList.auth = true;\nCandidatesList.layout = Admin;\nexport default CandidatesList;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/candidates/candidates-list.tsx"],"names":["React","useEffect","Button","AccordionDetails","Accordion","Admin","styles","makeStyles","GridContainer","GridItem","ExportToCsv","ActionTable","Placeholder","CandidateService","SearchAddCandidateModal","Yup","useRouter","useTranslation","SuiButton","setCandidate","useAppDispatch","AddTestResultsFileModal","AddCandidateOutSideMinistryModal","_","CandidatesList","forRegistrations","title","customColumns","router","translate","useStyles","classes","dispatch","open","setOpen","useState","searchResult","setSearchResult","handleOpen","handleClose","initAddCandidate","setInitAddCandidate","subscription_number","year","governorate","round","AddCandidateScheme","object","shape","string","required","openTestResults","setOpenTestResults","handleOpenTestResults","handleCloseTestResults","openOutsideCandidate","setOpenOutsideCandidate","handleOpenOutsideCandidate","handleCloseOutsideCandidate","submitSearchCandidate","values","setSubmitting","Search","then","res","found","Boolean","result","catch","error","console","finally","submitAddCandidate","AddAfterSearch","candidatesCopy","Candidates","setCandidates","push","locale","loading","setLoading","GetAll","log","list","filter","item","registerations","length","renderCandidates","columns","field","hidden","filtering","type","data","options","exportAllData","exportButton","actionsColumnIndex","headerStyle","backgroundColor","color","fontWeight","paging","pageSize","maxBodyHeight","btnLabel","btnPage","actions","icon","minWidth","onClick","evt","map","full_name","person","first_name","father","last_name","showExportColumns","setShowExportColumns","selectedColumns","setSelectedColumns","handleExportData","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","useBom","useKeysAsHeaders","headers","c","csvExporter","generateExcel","generateCsv","course","forEach","index","set","get","marginLeft","submitBtn","display","justifyContent","boxShadow","padding","margin","handleCheck","successText","auth","layout"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, AccordionDetails, Accordion } from \"@material-ui/core\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\r\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\r\nimport { ExportToCsv } from \"export-to-csv\";\r\nimport {\r\n    ICandidateModel,\r\n} from \"../../../../Models/ApiResponse/CandidateModel\";\r\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\r\nimport Placeholder from \"../../../../Utility/Placeholders\";\r\nimport CandidateService from \"../../../../Services/CandidateService\";\r\nimport SearchAddCandidateModal from \"../../../../components/Modals/SearchAddCandidateModal\";\r\nimport * as Yup from \"yup\";\r\nimport { useRouter } from 'next/router';\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport { setCandidate, useAppDispatch } from \"../../../../redux\";\r\nimport AddTestResultsFileModal from \"../../../../components/Modals/AddTestResultsFileModal\";\r\nimport AddCandidateOutSideMinistryModal from \"../../../../components/Modals/AddCandidateOutSideMinistryModal\";\r\nimport _ from \"lodash\";\r\n\r\ninterface ICandidatesListProps {\r\n    forRegistrations: boolean;\r\n    title: string;\r\n    customColumns: any[];\r\n}\r\nconst CandidatesList: React.FC<ICandidatesListProps> = ({\r\n    forRegistrations = false,\r\n    title,\r\n    customColumns,\r\n}) => {\r\n\r\n    const router = useRouter();\r\n    const { translate } = useTranslation();\r\n    const useStyles = makeStyles(styles);\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [searchResult, setSearchResult] = React.useState(null);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setSearchResult(null);\r\n        setOpen(false);\r\n    };\r\n    const [initAddCandidate, setInitAddCandidate] = React.useState<object>({\r\n        subscription_number: \"\",\r\n        year: \"\",\r\n        governorate: \"\",\r\n        round: \"\",\r\n    });\r\n\r\n    const AddCandidateScheme = Yup.object().shape({\r\n        subscription_number: Yup.string().required(translate(\"{0} is required\", \"Subscription number\")),\r\n        year: Yup.string().required(translate(\"{0} is required\", \"Year\")),\r\n        governorate: Yup.string().required(translate(\"{0} is required\", \"City\")),\r\n        round: Yup.string().required(translate(\"{0} is required\", \"Round\")),\r\n    });\r\n\r\n    const [openTestResults, setOpenTestResults] = React.useState(false);\r\n\r\n    const handleOpenTestResults = () => {\r\n        setOpenTestResults(true);\r\n    };\r\n    const handleCloseTestResults = () => {\r\n        setOpenTestResults(false);\r\n    };\r\n\r\n    const [openOutsideCandidate, setOpenOutsideCandidate] = React.useState(false);\r\n\r\n    const handleOpenOutsideCandidate = () => {\r\n        setOpenOutsideCandidate(true);\r\n    };\r\n    const handleCloseOutsideCandidate = () => {\r\n        setOpenOutsideCandidate(false);\r\n    };\r\n\r\n    const submitSearchCandidate = async (values: any, setSubmitting) => {\r\n        setSubmitting(true);\r\n        CandidateService.Search(values)\r\n            .then((res) => {\r\n                setSearchResult({ found: Boolean(res.result), result: res.result });\r\n                // setOpen(false);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"error\", error);\r\n            })\r\n            .finally(() => {\r\n                setSubmitting(false);\r\n            });\r\n        ;\r\n    };\r\n\r\n    const submitAddCandidate = async (values: any, setSubmitting) => {\r\n        setSubmitting(true);\r\n        CandidateService.AddAfterSearch(values)\r\n            .then((res) => {\r\n                const candidatesCopy = [res.result, ...Candidates];\r\n                setCandidates(candidatesCopy);\r\n                handleClose();\r\n                dispatch(setCandidate(res.result));\r\n                router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/candidate-details`)\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"error\", error);\r\n            })\r\n            .finally(() => {\r\n                setSubmitting(false);\r\n            });\r\n        ;\r\n    };\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    /************************** Data ****************************/\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        CandidateService.GetAll()\r\n            .then((res) => {\r\n                console.log(\"Candidates\", res);\r\n                var list = forRegistrations ? res.result ?.filter(item => item.registerations ?.length > 0) : res.result;\r\n                // if(forRegistrations) {\r\n                //     list = list.map(item => {\r\n                //         return {\r\n                //             ...item,\r\n                //             class_id: registerations[0].status,//registerations[0].status\r\n                //             status_id: registerations[0].status,\r\n                //         }\r\n                //     });\r\n                // }\r\n                setCandidates(list);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"error\", error);\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n    /************************** Finish Data ****************************/\r\n\r\n    const [Candidates, setCandidates] = React.useState<ICandidateModel[]>(null);\r\n    const renderCandidates = () => {\r\n        if (loading) return <Placeholder loading />\r\n        if (Candidates != null && Candidates.length > 0) {\r\n            let columns = [\r\n                {\r\n                    title: translate(\"Id\"),\r\n                    field: \"id\",\r\n                    hidden: true,\r\n                    filtering: false,\r\n                },\r\n                {\r\n                    title: translate(\"Name\"),\r\n                    field: \"full_name\",\r\n                    filtering: false,\r\n                },\r\n                {\r\n                    title: translate(\"Father\"),\r\n                    field: \"father.first_name\",\r\n                    hidden: true,\r\n                    filtering: false,\r\n                },\r\n                {\r\n                    title: translate(\"Mother\"),\r\n                    field: \"mother.first_name\",\r\n                    hidden: true,\r\n                    filtering: false,\r\n                },\r\n                {\r\n                    title: translate(\"Registeration number\"),\r\n                    field: \"registeration_number\",\r\n                    filtering: false,\r\n                    type: \"string\",\r\n                },\r\n                {\r\n                    title: translate(\"Subscription number\"),\r\n                    field: \"certificates[0].subscription_number\",\r\n                    filtering: false,\r\n                },\r\n                {\r\n                    title: translate(\"City\"),\r\n                    field: \"certificates[0].city\",\r\n                    filtering: false,\r\n                },\r\n                {\r\n                    title: translate(\"Round\"),\r\n                    field: \"certificates[0].round\",\r\n                    filtering: false,\r\n                },\r\n\r\n                {\r\n                    title: translate(\"Subscription number\"),\r\n                    field: \"certificates[0].subscription_number\",\r\n                    hidden: true,\r\n                    filtering: false,\r\n                }\r\n                // {\r\n                //     title: translate(\"Result\"),\r\n                //     field: \"certificates[0].result\",\r\n                // },\r\n            ];\r\n            let data = Candidates;\r\n            let options = {\r\n                exportAllData: true,\r\n                exportButton: true,\r\n                actionsColumnIndex: -1,\r\n                headerStyle: {\r\n                    backgroundColor: \"#01579b\",\r\n                    color: \"#FFF\",\r\n                    fontWeight: \"bold\",\r\n                },\r\n                filtering: true,\r\n                paging: true,\r\n                pageSize: 10,\r\n                maxBodyHeight: \"500px\",\r\n            };\r\n            const btnLabel = !forRegistrations ? \"Candidate Details\" : \"Edit Registration\";\r\n            const btnPage = !forRegistrations ? \"candidate-details\" : \"edit-registration\";\r\n            let actions = [\r\n                {\r\n                    icon: () => <SuiButton style={{ minWidth: 140 }} color={'primary'}>{translate(btnLabel)}</SuiButton>,\r\n                    onClick: (evt, data) => {\r\n                        dispatch(setCandidate(data));\r\n                        router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/${btnPage}`)\r\n                    },\r\n                },\r\n            ];\r\n            return (\r\n                <ActionTable\r\n                    Title={title || translate(\"Candidates List\")}\r\n                    Columns={customColumns || columns}\r\n                    Data={data.map(item => { return { ...item, full_name: `${item.person ?.first_name} ${item.father ?.first_name} ${item.person ?.last_name}` } })}\r\n                    Options={options}\r\n                    Actions={actions}\r\n                />\r\n            );\r\n        } else return <Placeholder />;\r\n    };\r\n\r\n    // Dynamic Export\r\n    const [showExportColumns, setShowExportColumns] = React.useState(false);\r\n    const [selectedColumns, setSelectedColumns] = React.useState([]);\r\n    const handleExportData = () => {\r\n        setShowExportColumns(!showExportColumns);\r\n    };\r\n    const csvOptions = {\r\n        fieldSeparator: \",\",\r\n        quoteStrings: '\"',\r\n        decimalSeparator: \".\",\r\n        showLabels: true,\r\n        useBom: true,\r\n        useKeysAsHeaders: false,\r\n        headers: selectedColumns.map((c) => c.title),\r\n    };\r\n    const csvExporter = new ExportToCsv(csvOptions);\r\n    const generateExcel = () => {\r\n        csvExporter.generateCsv(\r\n            Candidates.map((course) => {\r\n                let object = {};\r\n                selectedColumns.forEach((item, index) => {\r\n                    _.set(object, `col ${index}`, _.get(course, item.field) ?? \"\");\r\n                });\r\n                console.log(object);\r\n                return object;\r\n            })\r\n        );\r\n    };\r\n    return (\r\n        <GridContainer>\r\n            <GridItem md={12}>\r\n                {!forRegistrations && (\r\n                    <React.Fragment>\r\n                        <Button style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"contained\"\r\n                            className={classes.submitBtn}\r\n                            onClick={handleOpen}\r\n                        >\r\n                            {translate(\"Add New Candidate\")}\r\n                        </Button>\r\n                        <Button style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"contained\"\r\n                            className={classes.submitBtn}\r\n                            onClick={handleOpenOutsideCandidate}\r\n                        >\r\n                            {translate(\"Add Candidate\")} {translate(\"out-side of ministry data\")}\r\n                        </Button>\r\n                        <SuiButton style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"gradient\"\r\n                            onClick={handleOpenTestResults}\r\n                            color={'dark'}\r\n                        >\r\n                            {translate(\"Add acceptance test results\")}\r\n                        </SuiButton>\r\n                        <SuiButton style={{ marginLeft: 10 }}\r\n                            disabled={false}\r\n                            variant=\"gradient\"\r\n                            onClick={handleExportData}\r\n                            color={'dark'}\r\n                        >\r\n                            {translate(\"Export\")}\r\n                        </SuiButton>\r\n                    </React.Fragment>\r\n                )}\r\n                {showExportColumns && (\r\n                    <GridItem>\r\n                        <Accordion>\r\n                            <AccordionDetails>\r\n                                <GridItem container>\r\n                                    <GridItem\r\n                                        md={12}\r\n                                        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                                    >\r\n                                        <Typography\r\n                                            style={{\r\n                                                backgroundColor: \"lightgray\",\r\n                                                boxShadow:\r\n                                                    \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\r\n                                                padding: \"0em 1.2em\",\r\n                                                margin: \"0em 0em .5em 0em\",\r\n                                            }}\r\n                                        >\r\n                                            {translate(\"Select Columns\")}\r\n                                        </Typography>\r\n                                    </GridItem>\r\n                                    <GridItem md={12}>\r\n                                        <GridItem\r\n                                            className=\"list-container\"\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                justifyContent: \"space-between\",\r\n                                            }}\r\n                                        >\r\n                                            {columns\r\n                                                // .filter((item) => !item.hidden)\r\n                                                .map((item, index) => (\r\n                                                    <GridItem key={index}>\r\n                                                        <input\r\n                                                            value={item.field}\r\n                                                            type=\"checkbox\"\r\n                                                            onChange={handleCheck}\r\n                                                        />\r\n                                                        <span>{item.title}</span>\r\n                                                    </GridItem>\r\n                                                ))}\r\n                                        </GridItem>\r\n                                        <GridItem\r\n                                            md={12}\r\n                                            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{ margin: \"0px 5px\" }}\r\n                                                disabled={false}\r\n                                                variant=\"contained\"\r\n                                                className={classes.successText}\r\n                                                onClick={generateExcel}\r\n                                            >\r\n                                                <span style={{ padding: \"0px 0px 0px 10px\" }}>\r\n                                                    {translate(\"Export\")}\r\n                                                </span>\r\n                                                <Description />\r\n                                            </Button>\r\n                                        </GridItem>\r\n                                    </GridItem>\r\n                                </GridItem>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </GridItem>\r\n                )}\r\n                {renderCandidates()}\r\n            </GridItem>\r\n            <SearchAddCandidateModal\r\n                searchResult={searchResult}\r\n                onAddClick={submitAddCandidate}\r\n                key={\"addCandidate\"}\r\n                title={translate(\"Add Candidate\")}\r\n                open={open}\r\n                formScheme={AddCandidateScheme}\r\n                handleClose={handleClose}\r\n                initValues={initAddCandidate}\r\n                submitForm={submitSearchCandidate}\r\n            ></SearchAddCandidateModal>\r\n            <AddTestResultsFileModal\r\n                key={\"addAcceptanceTestResults\"}\r\n                title={translate(\"Add acceptance test results\")}\r\n                open={openTestResults}\r\n                handleClose={handleCloseTestResults}\r\n                submitForm={() => handleCloseTestResults()}\r\n            ></AddTestResultsFileModal>\r\n            <AddCandidateOutSideMinistryModal\r\n                key={\"addOutsideCandidate\"}\r\n                // title={translate(\"Add acceptance test results\")}\r\n                open={openOutsideCandidate}\r\n                handleClose={handleCloseOutsideCandidate}\r\n            ></AddCandidateOutSideMinistryModal>\r\n        </GridContainer>\r\n    );\r\n};\r\n(CandidatesList as any).auth = true;\r\n(CandidatesList as any).layout = Admin;\r\nexport default CandidatesList;\r\n"]},"metadata":{},"sourceType":"module"}