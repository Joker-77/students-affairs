{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MaterialTable from \"material-table\";\nimport React from \"react\";\nimport { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport { Phone, AddIcCall, PhoneDisabled } from \"@material-ui/icons\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Info } from \"@material-ui/icons\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport { useTranslation } from \"../../Utility/Translations/useTranslation\";\nimport { useRouter } from \"next/router\";\nexport default function ActionTable(props) {\n  const {\n    translate\n  } = useTranslation();\n  const {\n    locale\n  } = useRouter();\n  const tableIcons = {\n    Info: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Info, _objectSpread(_objectSpread({\n      style: {\n        color: \"blue\"\n      }\n    }, props), {}, {\n      ref: ref\n    }))),\n    Add: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(AddBox, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    AddPhone: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(AddIcCall, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    PhoneDisabled: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(PhoneDisabled, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Phone: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Phone, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Check: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Check, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Clear: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Clear, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Delete: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(DeleteOutline, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    DetailPanel: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(ChevronRight, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Edit: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Edit, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Export: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(SaveAlt, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Filter: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(FilterList, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n\n    /* -------- With rtl -------*/\n    FirstPage: /*#__PURE__*/forwardRef((props, ref) => locale === \"ar\" ? /*#__PURE__*/_jsx(LastPage, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })) : /*#__PURE__*/_jsx(FirstPage, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    LastPage: /*#__PURE__*/forwardRef((props, ref) => locale === \"ar\" ? /*#__PURE__*/_jsx(FirstPage, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })) : /*#__PURE__*/_jsx(LastPage, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    NextPage: /*#__PURE__*/forwardRef((props, ref) => locale === \"ar\" ? /*#__PURE__*/_jsx(ChevronLeft, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })) : /*#__PURE__*/_jsx(ChevronRight, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    PreviousPage: /*#__PURE__*/forwardRef((props, ref) => locale === \"ar\" ? /*#__PURE__*/_jsx(ChevronRight, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })) : /*#__PURE__*/_jsx(ChevronLeft, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n\n    /* --------------------------*/\n    ResetSearch: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Clear, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    Search: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Search, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    SortArrow: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(ArrowDownward, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    ThirdStateCheck: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(Remove, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    ViewColumn: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(ViewColumn, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    }))),\n    PublicIcon: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsx(PublicIcon, _objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })))\n  };\n  return /*#__PURE__*/_jsx(MaterialTable, _objectSpread({\n    icons: tableIcons,\n    title: props.Title,\n    columns: props.Columns.map(column => {\n      return _objectSpread({\n        cellStyle: {\n          textAlign: locale === \"ar\" ? \"right\" : \"left\"\n        },\n        headerStyle: {\n          textAlign: locale === \"ar\" ? \"right\" : \"left\"\n        }\n      }, column);\n    }),\n    data: props.Data,\n    options: props.Options //onSelectionChange={(rows) => props.ChangeSelected(rows)}\n    ,\n    actions: props.Actions,\n    localization: {\n      header: {\n        actions: \"\"\n      },\n      pagination: {\n        firstTooltip: translate(\"First Page\"),\n        previousTooltip: translate(\"Previous Page\"),\n        nextTooltip: translate(\"Next Page\"),\n        labelDisplayedRows: \"{from}-{to} \" + translate(\"of\") + \" {count}\",\n        labelRowsPerPage: translate(\"Rows per page\"),\n        lastTooltip: translate(\"Last Page\"),\n        labelRowsSelect: translate(\"Rows\")\n      },\n      toolbar: {\n        exportTitle: translate(\"Export\"),\n        exportName: translate(\"Export to excel\")\n      }\n    }\n  }, props));\n}","map":null,"metadata":{},"sourceType":"module"}