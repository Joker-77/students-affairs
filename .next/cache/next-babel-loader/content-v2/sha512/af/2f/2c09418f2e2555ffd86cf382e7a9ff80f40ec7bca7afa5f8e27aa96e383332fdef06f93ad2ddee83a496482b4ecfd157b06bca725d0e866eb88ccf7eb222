{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport apiConnector from \"./TokenizedApiClient\";\n\nvar ExamService = /*#__PURE__*/function () {\n  function ExamService() {\n    _classCallCheck(this, ExamService);\n  }\n\n  _createClass(ExamService, null, [{\n    key: \"GetAllCourses\",\n    value: function () {\n      var _GetAllCourses = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(programId, eduYearId) {\n        var listUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                listUrl = process.env.LIST_EXAM_COURSE_URL;\n                console.clear();\n                console.log(\"\".concat(listUrl, \"?program_id=\").concat(programId, \"&edu_year_id=\").concat(eduYearId));\n                _context.next = 5;\n                return apiConnector.get(\"\".concat(listUrl, \"?program_id=\").concat(programId, \"&edu_year_id=\").concat(eduYearId)).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 5:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function GetAllCourses(_x, _x2) {\n        return _GetAllCourses.apply(this, arguments);\n      }\n\n      return GetAllCourses;\n    }()\n  }, {\n    key: \"GetAllPlans\",\n    value: function () {\n      var _GetAllPlans = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(programId, eduYearId, eduCourseId, methodId) {\n        var listUrl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                listUrl = process.env.LIST_EXAM_URL;\n                _context2.next = 3;\n                return apiConnector.get(\"\".concat(listUrl, \"/plan?program_id=\").concat(programId, \"&edu_year_id=\\n            \").concat(eduYearId, \"&edu_course_id=\").concat(eduCourseId, \"&method_id=\").concat(methodId)).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function GetAllPlans(_x3, _x4, _x5, _x6) {\n        return _GetAllPlans.apply(this, arguments);\n      }\n\n      return GetAllPlans;\n    }()\n  }, {\n    key: \"GetAllHalls\",\n    value: function () {\n      var _GetAllHalls = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(date) {\n        var edu_year_id,\n            listUrl,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                edu_year_id = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : \"1\";\n                listUrl = process.env.LIST_EXAM_URL;\n                _context3.next = 4;\n                return apiConnector.get(\"\".concat(listUrl, \"halls?edu_year_id=\").concat(edu_year_id, \"&date=\").concat(date)).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 4:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function GetAllHalls(_x7) {\n        return _GetAllHalls.apply(this, arguments);\n      }\n\n      return GetAllHalls;\n    }()\n  }, {\n    key: \"Add\",\n    value: function () {\n      var _Add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(payload) {\n        var createUrl;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                createUrl = process.env.CREATE_COURSE_URL;\n                console.log(createUrl);\n                _context4.next = 4;\n                return apiConnector.post(createUrl, payload).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 4:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function Add(_x8) {\n        return _Add.apply(this, arguments);\n      }\n\n      return Add;\n    }()\n  }, {\n    key: \"getExams\",\n    value: function () {\n      var _getExams = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(plan_id) {\n        var getUrl;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                getUrl = process.env.LIST_EXAM_URL;\n                _context5.next = 3;\n                return apiConnector.get(getUrl + \"?plan_id=\" + plan_id).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getExams(_x9) {\n        return _getExams.apply(this, arguments);\n      }\n\n      return getExams;\n    }()\n  }, {\n    key: \"getMarks\",\n    value: function () {\n      var _getMarks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(exam_id) {\n        var getUrl;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                getUrl = process.env.MARK_URL;\n                _context6.next = 3;\n                return apiConnector.get(getUrl + \"?exam_id=\" + exam_id).then(function (response) {\n                  if (response.data.success) {\n                    var result = response.data;\n                    return result;\n                  }\n                }).catch(function (error) {\n                  throw error;\n                });\n\n              case 3:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getMarks(_x10) {\n        return _getMarks.apply(this, arguments);\n      }\n\n      return getMarks;\n    }()\n  }]);\n\n  return ExamService;\n}();\n\nexport { ExamService as default };","map":null,"metadata":{},"sourceType":"module"}