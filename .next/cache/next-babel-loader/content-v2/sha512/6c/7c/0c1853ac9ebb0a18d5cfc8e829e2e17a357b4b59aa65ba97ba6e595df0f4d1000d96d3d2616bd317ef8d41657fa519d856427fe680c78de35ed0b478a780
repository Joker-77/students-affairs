{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Admin from \"../../../layouts/Admin\";\nimport styles from \"../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../Utility/Placeholders\";\nimport PersonService from \"../../../Services/PersonService\";\nimport AddPersonModal from \"../../../components/Modals/AddPersonModal\";\nimport * as Yup from \"yup\";\nimport AddPhoneModal from \"../../../components/Modals/AddPhoneModal\";\n\nvar PeopleList = function PeopleList(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedPerson = _React$useState4[0],\n      setSelectedPerson = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    gender: \"male\",\n    nationalId: \"\",\n    nationality: \"\",\n    passportFirstName: \"\",\n    passportLastName: \"\",\n    passportNumber: \"\"\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      initAddPerson = _React$useState6[0],\n      setInitAddPerson = _React$useState6[1];\n\n  var AddPersonScheme = Yup.object().shape({\n    firstName: Yup.string().required(\"First name is required\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n    gender: Yup.string().required(\"Gender is required\"),\n    passportFirstName: Yup.string().required(\"Passport First Name is required\"),\n    passportLastName: Yup.string().required(\"Passport Last Name is required\"),\n    nationality: Yup.string().required(\"Nationality is required\"),\n    nationalId: Yup.string().required(\"NationalId is required\"),\n    passportNumber: Yup.string().required(\"Passport Number is required\")\n  });\n  var UpdatePersonScheme = Yup.object().shape({\n    firstName: Yup.string().required(\"First name is required\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n    gender: Yup.string().required(\"Gender is required\"),\n    passportFirstName: Yup.string().required(\"Passport First Name is required\"),\n    passportLastName: Yup.string().required(\"Passport Last Name is required\"),\n    nationality: Yup.string().required(\"Nationality is required\"),\n    nationalId: Yup.string().required(\"NationalId is required\"),\n    passportNumber: Yup.string().required(\"Passport Number is required\")\n  });\n\n  var submitAddPerson = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"values\", values);\n              setSubmitting(false);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitAddPerson(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /************************** Phone ****************************/\n\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      openPhone = _React$useState8[0],\n      setOpenPhone = _React$useState8[1];\n\n  var handleOpenPhone = function handleOpenPhone() {\n    setOpenPhone(true);\n  };\n\n  var handleClosePhone = function handleClosePhone() {\n    setOpenPhone(false);\n  };\n\n  var _React$useState9 = React.useState({\n    id: 0,\n    name: \"\",\n    type: \"\"\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      initAddPhone = _React$useState10[0],\n      setInitAddPhone = _React$useState10[1];\n\n  var AddPhoneScheme = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    type: Yup.string().required(\"Type is required\")\n  });\n\n  var submitAddPhone = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"values\", values);\n              setSubmitting(false);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function submitAddPhone(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /************************** Phone Update ****************************/\n\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      openPhoneUpdate = _React$useState12[0],\n      setOpenPhoneUpdate = _React$useState12[1];\n\n  var handleOpenPhoneUpdate = function handleOpenPhoneUpdate() {\n    setOpenPhoneUpdate(true);\n  };\n\n  var handleClosePhoneUpdate = function handleClosePhoneUpdate() {\n    setOpenPhoneUpdate(false);\n  };\n\n  var _React$useState13 = React.useState({\n    id: 0,\n    name: \"\",\n    type: \"\"\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      initUpdatePhone = _React$useState14[0],\n      setInitUpdatePhone = _React$useState14[1];\n\n  var UpdatePhoneScheme = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    type: Yup.string().required(\"Type is required\")\n  });\n\n  var submitUpdatePhone = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(\"values\", values);\n              setSubmitting(false);\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function submitUpdatePhone(_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  /************************** Data ****************************/\n\n\n  useEffect(function () {\n    PersonService.GetAll().then(function (res) {\n      console.log(\"people\", res);\n      setPeople(res.result);\n    }).catch(function (error) {\n      console.error(\"roles\", error);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  /************************** Handle edit data ****************************/\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      openUpdatePerson = _React$useState16[0],\n      setOpenUpdatePerson = _React$useState16[1];\n\n  var handleOpenUpdatePerson = function handleOpenUpdatePerson(data) {\n    console.log(\"data\", data);\n    setInitUpdatePerson({\n      id: data.id,\n      firstName: data.firstName,\n      gender: data.gender,\n      lastName: data.lastName,\n      nationalId: data.nationalId,\n      nationality: data.nationality,\n      passportFirstName: data.passportFirstName,\n      passportLastName: data.passportLastName,\n      passportNumber: data.passportNumber\n    });\n    setOpenUpdatePerson(true);\n  };\n\n  var handleCloseUpdatePerson = function handleCloseUpdatePerson() {\n    setDisabled(false);\n    setOpenUpdatePerson(false);\n  };\n\n  var _React$useState17 = React.useState({\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    gender: \"male\",\n    nationalId: \"\",\n    nationality: \"\",\n    passportFirstName: \"\",\n    passportLastName: \"\",\n    passportNumber: \"\"\n  }),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      initUpdatePerson = _React$useState18[0],\n      setInitUpdatePerson = _React$useState18[1];\n\n  var submitUpdatePerson = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(\"values\", values);\n              setSubmitting(false);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function submitUpdatePerson(_x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  /************************** Finish Handle edit data ****************************/\n\n\n  var _React$useState19 = React.useState(false),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      disabled = _React$useState20[0],\n      setDisabled = _React$useState20[1];\n\n  var handleDetails = function handleDetails(data) {\n    setDisabled(true);\n    setOpenUpdatePerson(true);\n  };\n\n  var handleEdit = function handleEdit(data) {\n    throw new Error(\"Function not implemented.\");\n  };\n\n  var handleAddPhone = function handleAddPhone(id) {\n    throw new Error(\"Function not implemented.\");\n  };\n\n  var _React$useState21 = React.useState(null),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      people = _React$useState22[0],\n      setPeople = _React$useState22[1];\n\n  var renderPeople = function renderPeople() {\n    if (people != null && people.length > 0) {\n      var columns = [{\n        title: \"Id\",\n        field: \"id\",\n        hidden: true\n      }, {\n        title: \"First Name\",\n        field: \"firstName\"\n      }, {\n        title: \"Last Name\",\n        field: \"lastName\"\n      }, {\n        title: \"Gender\",\n        field: \"gender\"\n      }, {\n        title: \"Nationality\",\n        field: \"nationality\"\n      }, {\n        title: \"National Id\",\n        field: \"nationalId\"\n      }, {\n        title: \"Passport First Name\",\n        field: \"passportFirstName\",\n        hidden: true\n      }, {\n        title: \"Passport Last Name\",\n        field: \"passportLastName\",\n        hidden: true\n      }, {\n        title: \"Passport Number\",\n        field: \"passportNumber\",\n        hidden: true\n      }];\n      var data = people;\n      var options = {\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        maxBodyHeight: \"500px\"\n      };\n      return /*#__PURE__*/_jsx(ActionTable, {\n        Title: \"People List\",\n        Columns: columns,\n        Data: data,\n        Options: options,\n        Actions: [{\n          tooltip: \"Person Details\",\n          icon: \"details\",\n          onClick: function onClick(evt, data) {\n            return handleDetails(data.id);\n          }\n        }, {\n          tooltip: \"Edit Person\",\n          icon: \"edit\",\n          onClick: function onClick(evt, data) {\n            return handleOpenUpdatePerson(data);\n          }\n        }, {\n          tooltip: \"Add Phone\",\n          icon: \"add_phone\",\n          onClick: function onClick(evt, data) {\n            return handleOpenPhone();\n          }\n        }, {\n          tooltip: \"Phone Details\",\n          icon: \"phone\",\n          onClick: function onClick(evt, data) {\n            return handleAddPhone(data.id);\n          }\n        }, {\n          tooltip: \"Delete Phone\",\n          icon: \"phone_disabled\",\n          onClick: function onClick(evt, data) {\n            return handleAddPhone(data.id);\n          }\n        }]\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  };\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    children: [/*#__PURE__*/_jsxs(GridItem, {\n      md: 12,\n      children: [/*#__PURE__*/_jsx(Button, {\n        disabled: false,\n        variant: \"contained\",\n        className: classes.submitBtn,\n        onClick: handleOpen,\n        children: \"Add New Person\"\n      }), renderPeople()]\n    }), /*#__PURE__*/_jsx(AddPersonModal, {\n      disabled: disabled,\n      title: \"Add Person\",\n      open: open,\n      formScheme: AddPersonScheme,\n      handleClose: handleClose,\n      initValues: initAddPerson,\n      submitForm: submitAddPerson\n    }, \"addPerson\"), /*#__PURE__*/_jsx(AddPersonModal, {\n      disabled: disabled,\n      title: \"Update Person\",\n      open: openUpdatePerson,\n      formScheme: UpdatePersonScheme,\n      handleClose: handleCloseUpdatePerson,\n      initValues: initUpdatePerson,\n      submitForm: submitUpdatePerson\n    }, \"updatePerson\"), /*#__PURE__*/_jsx(AddPhoneModal, {\n      title: \"Add Phone\",\n      open: openPhone,\n      formScheme: AddPhoneScheme,\n      handleClose: handleClosePhone,\n      initValues: initAddPhone,\n      submitForm: submitAddPhone\n    }, \"addPhone\"), /*#__PURE__*/_jsx(AddPhoneModal, {\n      title: \"Edit Phone\",\n      open: openPhoneUpdate,\n      formScheme: UpdatePhoneScheme,\n      handleClose: handleClosePhoneUpdate,\n      initValues: initUpdatePhone,\n      submitForm: submitUpdatePhone\n    }, \"editPhone\")]\n  });\n};\n\nPeopleList.auth = true;\nPeopleList.layout = Admin;\nexport default PeopleList;","map":null,"metadata":{},"sourceType":"module"}