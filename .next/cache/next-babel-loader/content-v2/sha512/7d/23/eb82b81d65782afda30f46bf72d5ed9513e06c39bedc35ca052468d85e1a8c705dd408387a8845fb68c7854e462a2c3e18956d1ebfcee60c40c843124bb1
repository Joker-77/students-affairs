{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport DesireService from \"../../../../Services/DesireService\";\nimport AddDesireModal from \"../../../../components/Modals/AddDesireModal\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\";\nimport SpecialityService from \"../../../../Services/SpecialityService\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardBody from \"../../../../components/Card/CardBody\";\n\nvar CandidateDesireList = function CandidateDesireList(_ref) {\n  var candidateId = _ref.candidateId;\n\n  var _useTranslation = useTranslation(),\n      translate = _useTranslation.translate;\n\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      specialities = _React$useState4[0],\n      setSpecialities = _React$useState4[1];\n\n  useEffect(function () {\n    SpecialityService.GetAll().then(function (res) {\n      console.log(\"Speciality\", res);\n      setSpecialities(res.result);\n    }).catch(function (error) {\n      console.error(\"error\", error);\n    });\n  }, []);\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selectedDesire = _React$useState6[0],\n      setSelectedDesire = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    id: 0,\n    order: 0,\n    speciality_id: 0,\n    candidate_id: +candidateId\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      initAddDesire = _React$useState8[0],\n      setInitAddDesire = _React$useState8[1];\n\n  var AddDesireScheme = Yup.object().shape({\n    order: Yup.string().required(translate(\"{0} is required\", \"Order\")),\n    speciality_id: Yup.string().required(translate(\"{0} is required\", \"Speciality\")),\n    candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\"))\n  });\n  var UpdateDesireScheme = Yup.object().shape({\n    order: Yup.string().required(translate(\"{0} is required\", \"Order\")),\n    speciality_id: Yup.string().required(translate(\"{0} is required\", \"Speciality\")),\n    candidate_id: Yup.string().required(translate(\"{0} is required\", \"Candidate\"))\n  });\n\n  var submitAddDesire = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting(true);\n              DesireService.Save(values).then(function (res) {\n                console.log(\"Desire\", res);\n                var DesireCopy = [res.result].concat(_toConsumableArray(Desires));\n                setDesires(DesireCopy);\n                setOpen(false);\n              }).catch(function (error) {\n                console.error(\"error\", error);\n              }).finally(function () {\n                setSubmitting(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitAddDesire(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /************************** Data ****************************/\n\n\n  useEffect(function () {\n    DesireService.GetAll(candidateId).then(function (res) {\n      console.log(\"Desire\", res);\n      setDesires(res.result);\n    }).catch(function (error) {\n      console.error(\"error\", error);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  /************************** Handle edit data ****************************/\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      openUpdateDesire = _React$useState10[0],\n      setOpenUpdateDesire = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      openModalForDetails = _React$useState12[0],\n      setOpenModalForDetails = _React$useState12[1];\n\n  var handleOpenUpdateDesire = function handleOpenUpdateDesire(data) {\n    console.log(\"data\", data);\n    setInitUpdateDesire({\n      id: data.id,\n      speciality_id: data.speciality_id,\n      order: data.order,\n      candidate_id: data.candidate_id\n    });\n    setOpenUpdateDesire(true);\n  };\n\n  var handleCloseUpdateDesire = function handleCloseUpdateDesire() {\n    setOpenModalForDetails(false);\n    setDisabled(false);\n    setOpenUpdateDesire(false);\n  };\n\n  var _React$useState13 = React.useState({\n    id: 0,\n    speciality_id: 0,\n    order: 0,\n    candidate_id: +candidateId\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      initUpdateDesire = _React$useState14[0],\n      setInitUpdateDesire = _React$useState14[1];\n\n  var submitUpdateDesire = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, setSubmitting) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setSubmitting(true);\n              console.log(\"values\", values);\n              DesireService.Edit(values).then(function (res) {\n                console.log(\"Desire\", res);\n\n                var DesireCopy = _toConsumableArray(Desires).map(function (item) {\n                  return item.id == res.result.id ? res.result : item;\n                });\n\n                setDesires(DesireCopy);\n                setOpenUpdateDesire(false);\n              }).catch(function (error) {\n                console.error(\"roles\", error);\n              }).finally(function () {\n                setSubmitting(false);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function submitUpdateDesire(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /************************** Finish Handle edit data ****************************/\n\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      disabled = _React$useState16[0],\n      setDisabled = _React$useState16[1];\n\n  var handleDetails = function handleDetails(data) {\n    setOpenModalForDetails(true);\n    setDisabled(true);\n    handleOpenUpdateDesire(data);\n  };\n\n  var _React$useState17 = React.useState(null),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      Desires = _React$useState18[0],\n      setDesires = _React$useState18[1];\n\n  var renderDesire = function renderDesire() {\n    if (Desires != null && Desires.length > 0) {\n      var columns = [{\n        title: translate(\"Id\"),\n        field: \"id\",\n        hidden: true\n      }, {\n        title: translate(\"Speciality\"),\n        field: (router === null || router === void 0 ? void 0 : router.locale) === 'ar' ? \"speciality.ar_name\" : \"speciality.en_name\"\n      }, {\n        title: translate(\"Order\"),\n        field: \"order\"\n      } // {\n      //   title: \"candidate_id\",\n      //   field: \"candidate_id\",\n      // },\n      ];\n      var data = Desires;\n      var options = {\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        maxBodyHeight: \"500px\"\n      };\n      return /*#__PURE__*/_jsx(ActionTable, {\n        Title: translate(\"Desire List\"),\n        Columns: columns,\n        Data: data,\n        Options: options,\n        Actions: [{\n          tooltip: translate(\"Desire Details\"),\n          icon: \"details\",\n          onClick: function onClick(evt, data) {\n            return handleDetails(data);\n          }\n        }, {\n          tooltip: translate(\"Edit Desire\"),\n          icon: \"edit\",\n          onClick: function onClick(evt, data) {\n            return handleOpenUpdateDesire(data);\n          }\n        }]\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {});\n  };\n\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(CardHeader, {\n      children: /*#__PURE__*/_jsx(\"h4\", {\n        style: {\n          fontWeight: \"bold\",\n          color: \"#01579b\"\n        },\n        children: translate('Desires')\n      })\n    }), /*#__PURE__*/_jsx(CardBody, {\n      children: /*#__PURE__*/_jsxs(GridContainer, {\n        children: [/*#__PURE__*/_jsxs(GridItem, {\n          md: 12,\n          children: [/*#__PURE__*/_jsx(Button, {\n            disabled: false,\n            variant: \"contained\",\n            className: classes.submitBtn,\n            onClick: handleOpen,\n            children: translate(\"Add New Desire\")\n          }), renderDesire()]\n        }), /*#__PURE__*/_jsx(AddDesireModal, {\n          disabled: disabled,\n          title: translate(\"Add Desire\"),\n          open: open,\n          formScheme: AddDesireScheme,\n          handleClose: handleClose,\n          initValues: initAddDesire,\n          submitForm: submitAddDesire,\n          specialities: specialities\n        }, \"addDesire\"), /*#__PURE__*/_jsx(AddDesireModal, {\n          disabled: disabled,\n          title: !openModalForDetails ? translate(\"Update Desire\") : translate(\"Desire Details\"),\n          open: openUpdateDesire,\n          formScheme: UpdateDesireScheme,\n          handleClose: handleCloseUpdateDesire,\n          initValues: initUpdateDesire,\n          submitForm: submitUpdateDesire,\n          specialities: specialities\n        }, \"updateDesire\")]\n      })\n    })]\n  });\n};\n\nCandidateDesireList.auth = true;\nCandidateDesireList.layout = Admin;\nexport default CandidateDesireList;","map":null,"metadata":{},"sourceType":"module"}