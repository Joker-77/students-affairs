{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\teachers\\\\teacher-details.tsx\";\nimport React, { useState } from \"react\";\nimport Admin from \"../../../../layouts/Admin\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport * as yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { toast } from \"react-toastify\";\nimport TeacherService from \"../../../../Services/TeacherService\";\nimport { useRouter } from \"next/router\";\nimport { ArrowBack, AttachFile //CheckBox,\n, CloudDownload } from \"@material-ui/icons\";\nimport Card from \"../../../../components/Card/Card\";\nimport { Box, CardActions, Divider, Grid, MenuItem, TextField, Typography, RadioGroup, Radio, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport { name_prefixes, work_fields, genders, degrees, statuses, authorities } from \"../../../../Static/resources\";\nconst TeacherDetail = /*#__PURE__*/React.forwardRef(({\n  isCreate,\n  details,\n  isEditable,\n  setShow,\n  activateEdit\n}, ref) => {\n  var _teacher$attachements, _teacher$person, _teacher$person2, _teacher$person3, _teacher$person4, _teacher$person5, _teacher$person5$phon, _teacher$person5$phon2, _teacher$person6, _teacher$person6$phon, _teacher$person6$phon2, _teacher$person7, _teacher$person7$phon, _teacher$person7$phon2, _teacher$person8, _teacher$person8$phon, _teacher$person8$phon2, _teacher$person9, _teacher$person9$phon, _teacher$person9$phon2, _details$person;\n\n  const {\n    translate\n  } = useTranslation();\n  const router = useRouter();\n  const {\n    0: teacher,\n    1: setDetails\n  } = useState(details);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState(teacher === null || teacher === void 0 ? void 0 : (_teacher$attachements = teacher.attachements[0]) === null || _teacher$attachements === void 0 ? void 0 : _teacher$attachements.name);\n  let teacherSchema = //isCreate ?\n  yup.object({\n    first_name: yup.string(translate(\"First name\")).required(translate(\"Field is required\")),\n    last_name: yup.string(translate(\"Last name\")).required(translate(\"Field is required\")),\n    father_name: yup.string(translate(\"Father name\")).required(translate(\"Field is required\")),\n    national_number: yup.number(translate(\"National number\")).required(translate(\"Field is required\")),\n    number: yup.number(translate(\"ID Number\")),\n    //.required(translate(\"Field is required\")),\n    gender: yup.string(translate(\"Gender\")).required(translate(\"Field is required\")),\n    authority: yup.string(translate(\"Functional Body\")),\n\n    /*work_field: yup\r\n      .string(translate(\"Work Field\"))\r\n      .required(translate(\"Field is required\")),*/\n\n    /*activity: yup\r\n      .string(translate(\"Activity\"))\r\n      .required(translate(\"Field is required\")),*/\n\n    /*prefix_name: yup\r\n      .string(translate(\"Name prefix\"))\r\n      .required(translate(\"Field is required\")),*/\n    primary_number: yup.number(translate(\"Primary number\")).required(translate(\"Field is required\")),\n    secondary_number: yup.number(translate(\"Secondary number\")),\n    office_number: yup.number(translate(\"Office number\")),\n    mobile_1: yup.number(translate(\"Mobile 1\")).required(translate(\"Field is required\")),\n    mobile_2: yup.number(translate(\"Mobile 2\")),\n    degree: yup.string(translate(\"Degree\")).required(translate(\"Field is required\")),\n\n    /*hiast_graduate: yup\r\n      .boolean(translate(\"HIAST graduate\"))\r\n      .required(translate(\"Field is required\")),*/\n    status: yup.string(translate(\"Status\")).required(translate(\"Field is required\")),\n    attachement: yup.mixed() //.required(translate(\"Need an attachement for this teacher\")),\n\n  });\n  /*: yup.object({\r\n      en_name: yup\r\n        .string(translate(\"English Name\"))\r\n        .required(translate(\"Field is required\")),\r\n      ar_name: yup\r\n        .string(translate(\"Arabic Name\"))\r\n        .required(translate(\"Field is required\")),\r\n      fr_name: yup\r\n        .string(translate(\"French Name\"))\r\n        .required(translate(\"Field is required\")),\r\n      code: yup\r\n        .string(translate(\"Teacher Code\"))\r\n        .required(translate(\"Field is required\")),\r\n      attachement: yup\r\n        .mixed()\r\n        .required(translate(\"Need an attachement for this teacher\")),\r\n    });*/\n\n  let initialValues = //isCreate ?\n  {\n    first_name: teacher === null || teacher === void 0 ? void 0 : (_teacher$person = teacher.person) === null || _teacher$person === void 0 ? void 0 : _teacher$person.first_name,\n    last_name: teacher === null || teacher === void 0 ? void 0 : (_teacher$person2 = teacher.person) === null || _teacher$person2 === void 0 ? void 0 : _teacher$person2.last_name,\n    father_name: teacher === null || teacher === void 0 ? void 0 : teacher.father_name,\n    national_number: teacher === null || teacher === void 0 ? void 0 : (_teacher$person3 = teacher.person) === null || _teacher$person3 === void 0 ? void 0 : _teacher$person3.national_number,\n    number: teacher === null || teacher === void 0 ? void 0 : teacher.number,\n    gender: teacher === null || teacher === void 0 ? void 0 : (_teacher$person4 = teacher.person) === null || _teacher$person4 === void 0 ? void 0 : _teacher$person4.sex,\n    authority: teacher === null || teacher === void 0 ? void 0 : teacher.authority,\n    work_field: teacher && teacher.work_field ? teacher.work_field : work_fields(translate)[0].id,\n    activity: teacher === null || teacher === void 0 ? void 0 : teacher.activity,\n    prefix_name: teacher && teacher.prefix_name ? teacher.prefix_name : name_prefixes(translate)[0].id,\n    primary_number: teacher === null || teacher === void 0 ? void 0 : (_teacher$person5 = teacher.person) === null || _teacher$person5 === void 0 ? void 0 : (_teacher$person5$phon = _teacher$person5.phones) === null || _teacher$person5$phon === void 0 ? void 0 : (_teacher$person5$phon2 = _teacher$person5$phon.find(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"primary\")) === null || _teacher$person5$phon2 === void 0 ? void 0 : _teacher$person5$phon2.phone,\n    secondary_number: teacher === null || teacher === void 0 ? void 0 : (_teacher$person6 = teacher.person) === null || _teacher$person6 === void 0 ? void 0 : (_teacher$person6$phon = _teacher$person6.phones) === null || _teacher$person6$phon === void 0 ? void 0 : (_teacher$person6$phon2 = _teacher$person6$phon.find(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"secondary\")) === null || _teacher$person6$phon2 === void 0 ? void 0 : _teacher$person6$phon2.phone,\n    office_number: teacher === null || teacher === void 0 ? void 0 : (_teacher$person7 = teacher.person) === null || _teacher$person7 === void 0 ? void 0 : (_teacher$person7$phon = _teacher$person7.phones) === null || _teacher$person7$phon === void 0 ? void 0 : (_teacher$person7$phon2 = _teacher$person7$phon.find(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"office\")) === null || _teacher$person7$phon2 === void 0 ? void 0 : _teacher$person7$phon2.phone,\n    mobile_1: teacher === null || teacher === void 0 ? void 0 : (_teacher$person8 = teacher.person) === null || _teacher$person8 === void 0 ? void 0 : (_teacher$person8$phon = _teacher$person8.phones) === null || _teacher$person8$phon === void 0 ? void 0 : (_teacher$person8$phon2 = _teacher$person8$phon.find(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"personal\")) === null || _teacher$person8$phon2 === void 0 ? void 0 : _teacher$person8$phon2.phone,\n    mobile_2: teacher === null || teacher === void 0 ? void 0 : (_teacher$person9 = teacher.person) === null || _teacher$person9 === void 0 ? void 0 : (_teacher$person9$phon = _teacher$person9.phones) === null || _teacher$person9$phon === void 0 ? void 0 : (_teacher$person9$phon2 = _teacher$person9$phon.filter(phone => (phone === null || phone === void 0 ? void 0 : phone.type) === \"personal\")[1]) === null || _teacher$person9$phon2 === void 0 ? void 0 : _teacher$person9$phon2.phone,\n    degree: teacher === null || teacher === void 0 ? void 0 : teacher.degree,\n    hiast_graduate: teacher ? teacher.hiast_graduate : 1,\n    status: teacher === null || teacher === void 0 ? void 0 : teacher.status,\n    attachement: teacher === null || teacher === void 0 ? void 0 : teacher.attachement\n  };\n  /*: {\r\n      id: teacher.id,\r\n      en_name: teacher.en_name,\r\n      ar_name: teacher.ar_name,\r\n      fr_name: teacher.fr_name,\r\n      code: teacher.code,\r\n      attachement: teacher?.current_description?.attachement,\r\n    };*/\n\n  /************************* Handle Edit Teacher ************/\n\n  const handleEditTeacher = event => {\n    event.preventDefault();\n    activateEdit();\n  };\n  /*************** Handle End Add Description For Teacher ******/\n\n\n  const {\n    0: errorPercentageMsg,\n    1: setErrorPercentageMsg\n  } = useState(\"\");\n\n  const submitForm = (values, setSubmitting) => {\n    if (isCreate) {\n      const payload = {\n        first_name: values.first_name,\n        last_name: values.last_name,\n        father_name: values.father_name,\n        national_number: values.national_number,\n        number: values.number,\n        gender: values.gender,\n        authority: values.authority,\n        work_field: values.work_field,\n        activity: values.activity,\n        degree: values.degree,\n        prefix_name: values.prefix_name,\n        primary_number: values.primary_number,\n        secondary_number: values.secondary_number,\n        office_number: values.office_number,\n        mobile_1: values.mobile_1,\n        mobile_2: values.mobile_2,\n        hiast_graduate: values.hiast_graduate,\n        status: values.status\n      }; //console.clear();\n\n      const isFile = hiddenInput.current.value != \"\";\n\n      if (isFile) {\n        payload.attachement = values.attachement;\n        payload.attachement_name = fileName;\n      }\n\n      console.log(payload);\n      TeacherService.Add(payload).then(response => {\n        if (response.success) {\n          toast.success(\"Teacher Added Successfully\");\n          setShow();\n        } else {\n          console.log(response.error);\n          toast.error(response.error.message);\n        }\n      }).catch(error => {\n        console.log(error.message);\n        toast.error(error.message);\n        throw new Error(error);\n      });\n    } else {\n      const payload = {\n        id: teacher.id,\n        first_name: values.first_name,\n        last_name: values.last_name,\n        father_name: values.father_name,\n        national_number: values.national_number,\n        number: values.number,\n        gender: values.gender,\n        authority: values.authority,\n        work_field: values.work_field,\n        activity: values.activity,\n        degree: values.degree,\n        prefix_name: values.prefix_name,\n        primary_number: values.primary_number,\n        secondary_number: values.secondary_number,\n        office_number: values.office_number,\n        mobile_1: values.mobile_1,\n        mobile_2: values.mobile_2,\n        hiast_graduate: values.hiast_graduate,\n        status: values.status\n      };\n      const isFile = hiddenInput.current.value != \"\";\n\n      if (isFile) {\n        payload.attachement = values.attachement;\n        payload.attachement_name = fileName;\n      }\n\n      console.log(payload);\n      TeacherService.Edit(payload).then(response => {\n        if (response.success) {\n          toast.success(\"Teacher Edited Successfully\");\n          setShow();\n        } else {\n          console.log(response.error);\n          toast.error(response.error.message);\n        }\n      }).catch(error => {\n        console.log(error.message);\n        toast.error(error.message);\n        throw new Error(error);\n      });\n    }\n\n    setSubmitting(false); // TeacherService.Add(payload)\n    //   .then(() => {})\n    //   .catch((e) => console.error(e));\n  };\n\n  const hiddenInput = React.useRef(null);\n\n  const handleClick = event => {\n    var _hiddenInput$current;\n\n    (_hiddenInput$current = hiddenInput.current) === null || _hiddenInput$current === void 0 ? void 0 : _hiddenInput$current.click();\n  };\n\n  const {\n    0: changed,\n    1: setChanged\n  } = useState(false);\n\n  const convertToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      setFileName(file === null || file === void 0 ? void 0 : file.name);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const handleFile = async (e, setFieldValue) => {\n    const file = e.target.files[0];\n    setChanged(true); //check the size of image\n\n    if ((file === null || file === void 0 ? void 0 : file.size) / 1024 / 1024 < 2) {\n      const base64 = await convertToBase64(file);\n      setFieldValue(\"attachement\", base64);\n    } else {\n      toast.error(\"File size must be of 5MB or less\");\n    }\n  };\n\n  const initialWorkField = isCreate ? work_fields(translate)[0].id : initialValues.work_field;\n  const {\n    0: selectedWorkField,\n    1: setSelectedWorkField\n  } = useState(initialWorkField);\n\n  const handleWorkFieldChange = (event, basicHandleChange) => {\n    setSelectedWorkField(event.target.value);\n    basicHandleChange(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      md: 12,\n      sm: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        md: 12,\n        sm: 12,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: \"1em 4em\",\n            margin: \"5px 0px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              item: true,\n              md: 9,\n              xs: 12,\n              sm: 12,\n              children: !isCreate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"div\",\n                  children: [translate(\"Teacher Name\"), \":\", \" \", `${details === null || details === void 0 ? void 0 : (_details$person = details.person) === null || _details$person === void 0 ? void 0 : _details$person.first_name} ${details === null || details === void 0 ? void 0 : details.father_name} ${details === null || details === void 0 ? void 0 : details.person.last_name}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    mb: 1.5\n                  },\n                  color: \"text.secondary\",\n                  children: translate(\"Teacher Details\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: translate(\"Add New Teacher\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              md: 3,\n              xs: 12,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(SuiButton, {\n                onClick: setShow,\n                color: \"warning\",\n                children: [/*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this), translate(\"Back To Previous Page\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: \"3em 3em\",\n            margin: \"5px 0px\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            enableReinitialize: true,\n            initialValues: initialValues,\n            validationSchema: teacherSchema,\n            onSubmit: (values, {\n              setSubmitting\n            }) => {\n              const work_field = work_fields(translate).find(field => field.id == values.work_field);\n              if (work_field && work_field.activities.length === 0) values.activity = undefined;\n              submitForm(values, setSubmitting);\n            },\n            children: formik => {\n              const {\n                values,\n                handleChange,\n                handleSubmit,\n                errors,\n                touched,\n                handleBlur,\n                isSubmitting,\n                isValid,\n                dirty,\n                setFieldValue\n              } = formik;\n              return /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    md: 12,\n                    style: {\n                      margin: \"1em 0em\",\n                      color: \"red\",\n                      display: errors && // 👈 null and undefined check\n                      Object.keys(errors).length === 0 && Object.getPrototypeOf(errors) === Object.prototype ? \"none\" : \"block\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"first_name\",\n                        name: \"first_name\",\n                        value: values.first_name,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.first_name && errors.first_name),\n                        helperText: touched.first_name && errors.first_name,\n                        placeholder: translate(\"First name\"),\n                        label: translate(\"First name\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 415,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"last_name\",\n                        name: \"last_name\",\n                        value: values.last_name,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.last_name && errors.last_name),\n                        helperText: touched.last_name && errors.last_name,\n                        placeholder: translate(\"Last name\"),\n                        label: translate(\"Last name\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"father_name\",\n                        name: \"father_name\",\n                        value: values.father_name,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.father_name && errors.father_name),\n                        helperText: touched.father_name && errors.father_name,\n                        placeholder: translate(\"Father name\"),\n                        label: translate(\"Father name\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 23\n                }, this),\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"national_number\",\n                        name: \"national_number\",\n                        value: values.national_number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.national_number && errors.national_number),\n                        helperText: touched.national_number && errors.national_number,\n                        placeholder: translate(\"National number\"),\n                        label: translate(\"National number\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"number\",\n                        name: \"number\",\n                        value: values.number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.number && errors.number),\n                        helperText: touched.number && errors.number,\n                        placeholder: translate(\"ID Number\"),\n                        label: translate(\"ID Number\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 520,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"select\",\n                        id: \"gender\",\n                        name: \"gender\",\n                        select: true,\n                        value: values.gender,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.gender && errors.gender),\n                        helperText: touched.gender && errors.gender,\n                        placeholder: translate(\"Gender\"),\n                        label: translate(\"Gender\"),\n                        fullWidth: true,\n                        children: genders(translate).map(gender => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: gender.id,\n                          children: gender.value\n                        }, gender.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 558,\n                          columnNumber: 35\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this) //)}\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        label: translate(\"Work Field\"),\n                        labelPlacement: \"top\",\n                        control: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                          onChange: e => handleWorkFieldChange(e, handleChange),\n                          id: \"work_field\",\n                          name: \"work_field\",\n                          value: values.work_field,\n                          onBlur: handleBlur,\n                          placeholder: translate(\"Work Field\") //defaultValue={work_fields(translate)[0].id}\n                          ,\n                          children: work_fields(translate).map(field => {\n                            var _field$activities, _field$activities2;\n\n                            return /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                                value: field.id,\n                                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 599,\n                                  columnNumber: 52\n                                }, this),\n                                label: field.value\n                              }, field.id, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 596,\n                                columnNumber: 41\n                              }, this), //values.work_field === field.id ?\n                              selectedWorkField === field.id && ((_field$activities = field.activities) === null || _field$activities === void 0 ? void 0 : _field$activities.length) > 0 ? /*#__PURE__*/_jsxDEV(GridItem, {\n                                children: /*#__PURE__*/_jsxDEV(TextField, {\n                                  disabled: !isEditable,\n                                  onChange: handleChange,\n                                  variant: \"outlined\",\n                                  size: \"small\",\n                                  type: \"select\",\n                                  id: \"activity\",\n                                  name: \"activity\",\n                                  select: true,\n                                  value: values.activity,\n                                  onBlur: handleBlur,\n                                  error: Boolean(touched.activity && errors.activity),\n                                  helperText: touched.activity && errors.activity,\n                                  placeholder: field.activitiesLabel,\n                                  label: field.activitiesLabel,\n                                  fullWidth: true,\n                                  children: (_field$activities2 = field.activities) === null || _field$activities2 === void 0 ? void 0 : _field$activities2.map(activity => /*#__PURE__*/_jsxDEV(MenuItem, {\n                                    value: activity.id,\n                                    children: activity.value\n                                  }, activity.id, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 634,\n                                    columnNumber: 53\n                                  }, this))\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 607,\n                                  columnNumber: 47\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 606,\n                                columnNumber: 45\n                              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n                            }, void 0, true);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 583,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 579,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: !isEditable,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: \"authority\",\n                      name: \"authority\",\n                      select: true,\n                      value: values.authority,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.authority && errors.authority),\n                      helperText: touched.authority && errors.authority,\n                      placeholder: translate(\"Functional Body\"),\n                      label: translate(\"Functional Body\"),\n                      fullWidth: true,\n                      children: authorities(translate).map(authority => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: authority.id,\n                        children: authority.value\n                      }, authority.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 677,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        label: translate(\"Name prefix\"),\n                        labelPlacement: \"top\",\n                        control: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                          onChange: handleChange,\n                          id: \"prefix_name\",\n                          name: \"prefix_name\",\n                          value: values.prefix_name,\n                          onBlur: handleBlur,\n                          placeholder: translate(\"Name prefix\") //defaultValue={name_prefixes(translate)[0].id}\n                          ,\n                          children: name_prefixes(translate).map(prefix => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                            value: prefix.id,\n                            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 706,\n                              columnNumber: 50\n                            }, this),\n                            label: prefix.value\n                          }, prefix.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 703,\n                            columnNumber: 39\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 693,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 689,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 25\n                }, this) //)\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"primary_number\",\n                        name: \"primary_number\",\n                        value: values.primary_number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.primary_number && errors.primary_number),\n                        helperText: touched.primary_number && errors.primary_number,\n                        placeholder: translate(\"Primary number\"),\n                        label: translate(\"Primary number\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 728,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"secondary_number\",\n                        name: \"secondary_number\",\n                        value: values.secondary_number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.secondary_number && errors.secondary_number),\n                        helperText: touched.secondary_number && errors.secondary_number,\n                        placeholder: translate(\"Secondary number\"),\n                        label: translate(\"Secondary number\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 755,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"office_number\",\n                        name: \"office_number\",\n                        value: values.office_number,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.office_number && errors.office_number),\n                        helperText: touched.office_number && errors.office_number,\n                        placeholder: translate(\"Office number\"),\n                        label: translate(\"Office number\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 781,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 780,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 779,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 25\n                }, this) //)\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"mobile_1\",\n                        name: \"mobile_1\",\n                        value: values.mobile_1,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.mobile_1 && errors.mobile_1),\n                        helperText: touched.mobile_1 && errors.mobile_1,\n                        placeholder: translate(\"Mobile 1\"),\n                        label: translate(\"Mobile 1\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 817,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"text\",\n                        id: \"mobile_2\",\n                        name: \"mobile_2\",\n                        value: values.mobile_2,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.mobile_2 && errors.mobile_2),\n                        helperText: touched.mobile_2 && errors.mobile_2,\n                        placeholder: translate(\"Mobile 2\"),\n                        label: translate(\"Mobile 2\"),\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 839,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 838,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 837,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 859,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 25\n                }, this) //)\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"select\",\n                        id: \"degree\",\n                        name: \"degree\",\n                        select: true,\n                        value: values.degree,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.degree && errors.degree),\n                        helperText: touched.degree && errors.degree,\n                        placeholder: translate(\"Degree\"),\n                        label: translate(\"Degree\"),\n                        fullWidth: true,\n                        children: degrees(translate).map(degree => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: degree.id,\n                          children: degree.value\n                        }, degree.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 894,\n                          columnNumber: 35\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 876,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 875,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 874,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        label: translate(\"HIAST graduate\"),\n                        onChange: handleChange,\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          disabled: !isEditable,\n                          onChange: handleChange,\n                          id: \"hiast_graduate\",\n                          name: \"hiast_graduate\",\n                          checked: values.hiast_graduate == 1,\n                          onBlur: handleBlur,\n                          placeholder: translate(\"HIAST graduate\") //defaultChecked\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 908,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 904,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 903,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 902,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 922,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 25\n                }, this) //)\n                ,\n                /*#__PURE__*/\n                //isCreate && (\n                _jsxDEV(Grid, {\n                  container: true,\n                  md: 12,\n                  xs: 12,\n                  style: {\n                    margin: \"1em 0em\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        disabled: !isEditable,\n                        onChange: handleChange,\n                        variant: \"outlined\",\n                        size: \"small\",\n                        type: \"select\",\n                        id: \"status\",\n                        name: \"status\",\n                        select: true,\n                        value: values.status,\n                        onBlur: handleBlur,\n                        error: Boolean(touched.status && errors.status),\n                        helperText: touched.status && errors.status,\n                        placeholder: translate(\"Status\"),\n                        label: translate(\"Status\"),\n                        fullWidth: true,\n                        children: statuses(translate).map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: status.id,\n                          children: status.value\n                        }, status.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 956,\n                          columnNumber: 35\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 938,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 936,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(GridItem, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 965,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 964,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    md: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 967,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 930,\n                  columnNumber: 25\n                }, this) //)\n                , /*#__PURE__*/_jsxDEV(Divider, {\n                  style: {\n                    margin: \"2em 0em\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 974,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  mb: 1,\n                  ml: 0.5,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"label\",\n                    variant: \"caption\",\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: translate(\"Attachements\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 978,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 977,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 976,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(SuiButton, {\n                    disabled: !isEditable,\n                    color: \"primary\",\n                    onClick: handleClick,\n                    children: [translate(\"Upload a file\"), /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 988,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 982,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"attachement\",\n                    name: \"attachement\",\n                    type: \"file\",\n                    ref: hiddenInput,\n                    style: {\n                      display: \"none\"\n                    },\n                    onChange: event => {\n                      handleFile(event, setFieldValue);\n                    },\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 990,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    md: 4,\n                    style: {\n                      marginTop: \"1em\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      helperText: (touched === null || touched === void 0 ? void 0 : touched.attachement) && (errors === null || errors === void 0 ? void 0 : errors.attachement),\n                      error: Boolean((errors === null || errors === void 0 ? void 0 : errors.attachement) && (touched === null || touched === void 0 ? void 0 : touched.attachement)),\n                      variant: \"outlined\",\n                      type: \"text\",\n                      size: \"small\",\n                      disabled: true,\n                      placeholder: \"\",\n                      value: fileName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1002,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1001,\n                    columnNumber: 25\n                  }, this), //values.attachement != null &&\n                  //values.attachement != \"\" &&\n                  (teacher === null || teacher === void 0 ? void 0 : teacher.attachements) && (teacher === null || teacher === void 0 ? void 0 : teacher.attachements.length) != 0 && !changed && /*#__PURE__*/_jsxDEV(Grid, {\n                    md: 6,\n                    style: {\n                      marginTop: \"1em\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: process.env.BASE_URL + \"/\" + teacher.attachements[0].url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: /*#__PURE__*/_jsxDEV(SuiButton, {\n                        type: \"button\",\n                        disabled: true,\n                        variant: \"gradient\",\n                        color: \"warning\",\n                        fullWidth: true,\n                        children: [/*#__PURE__*/_jsxDEV(CloudDownload, {\n                          style: {\n                            margin: \"0em .3em\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1041,\n                          columnNumber: 37\n                        }, this), translate(\"Download\")]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1034,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1025,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1024,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 981,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  mt: 4,\n                  mb: 1,\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  },\n                  children: isEditable ? isSubmitting ? /*#__PURE__*/_jsxDEV(SuiButton, {\n                    type: \"button\",\n                    disabled: true,\n                    variant: \"gradient\",\n                    color: \"info\",\n                    children: translate(\"Processing ...\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1061,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                    style: {\n                      color: \"rgb(255, 255, 255)\",\n                      background: \"rgb(23, 193, 232)\"\n                    },\n                    disabled: !isValid && isSubmitting,\n                    type: \"submit\",\n                    children: translate(\"Save\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                    onClick: handleEditTeacher,\n                    type: \"button\",\n                    variant: \"gradient\",\n                    color: \"info\",\n                    children: translate(\"Edit Teacher\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1082,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1051,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 7\n  }, this);\n});\nTeacherDetail.layout = Admin;\nTeacherDetail.auth = false;\nexport default TeacherDetail;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/teachers/teacher-details.tsx"],"names":["React","useState","Admin","useTranslation","yup","Form","Formik","SuiButton","toast","TeacherService","useRouter","ArrowBack","AttachFile","CloudDownload","Card","Box","CardActions","Divider","Grid","MenuItem","TextField","Typography","RadioGroup","Radio","FormControlLabel","Checkbox","GridItem","name_prefixes","work_fields","genders","degrees","statuses","authorities","TeacherDetail","forwardRef","isCreate","details","isEditable","setShow","activateEdit","ref","translate","router","teacher","setDetails","fileName","setFileName","attachements","name","teacherSchema","object","first_name","string","required","last_name","father_name","national_number","number","gender","authority","primary_number","secondary_number","office_number","mobile_1","mobile_2","degree","status","attachement","mixed","initialValues","person","sex","work_field","id","activity","prefix_name","phones","find","phone","type","filter","hiast_graduate","handleEditTeacher","event","preventDefault","errorPercentageMsg","setErrorPercentageMsg","submitForm","values","setSubmitting","payload","isFile","hiddenInput","current","value","attachement_name","console","log","Add","then","response","success","error","message","catch","Error","Edit","useRef","handleClick","click","changed","setChanged","convertToBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","handleFile","e","setFieldValue","target","files","size","base64","initialWorkField","selectedWorkField","setSelectedWorkField","handleWorkFieldChange","basicHandleChange","padding","margin","mb","width","field","activities","length","undefined","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","color","display","Object","keys","getPrototypeOf","prototype","Boolean","map","activitiesLabel","prefix","marginTop","process","env","BASE_URL","url","justifyContent","background","layout","auth"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  //IAddDescriptionModel,\r\n  ITeacherModel,\r\n  ICreateTeacherModel,\r\n  IEditTeacherModel,\r\n  //IEditTeacherBasicInfo,\r\n  //IEvaluationMethod,\r\n} from \"../../../../Models/Teachers/TeacherModel\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport * as yup from \"yup\";\r\nimport { Field, FieldArray, Form, Formik, getIn, ErrorMessage } from \"formik\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport TeacherService from \"../../../../Services/TeacherService\";\r\nimport { useRouter } from \"next/router\";\r\nimport {\r\n  Add,\r\n  ArrowBack,\r\n  AttachFile,\r\n  //CheckBox,\r\n  CloudDownload,\r\n  FontDownload,\r\n} from \"@material-ui/icons\";\r\nimport Card from \"../../../../components/Card/Card\";\r\nimport {\r\n  Box,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport GridItem from \"../../../../components/Grid/GridItem\";\r\nimport {\r\n  name_prefixes,\r\n  work_fields,\r\n  genders,\r\n  degrees,\r\n  statuses,\r\n  authorities,\r\n} from \"../../../../Static/resources\";\r\n\r\ninterface ITeacherDetailProps {\r\n  isCreate: boolean;\r\n  details: ITeacherModel;\r\n  isEditable: boolean;\r\n  setShow(): void;\r\n  activateEdit(): void;\r\n}\r\n\r\nconst TeacherDetail: FC<ITeacherDetailProps> = React.forwardRef(\r\n  ({ isCreate, details, isEditable, setShow, activateEdit }, ref) => {\r\n    const { translate } = useTranslation();\r\n    const router = useRouter();\r\n\r\n    const [teacher, setDetails] = useState<ITeacherModel>(details);\r\n    const [fileName, setFileName] = useState<string>(\r\n      teacher?.attachements[0]?.name\r\n    );\r\n\r\n    let teacherSchema =\r\n      //isCreate ?\r\n      yup.object({\r\n        first_name: yup\r\n          .string(translate(\"First name\"))\r\n          .required(translate(\"Field is required\")),\r\n        last_name: yup\r\n          .string(translate(\"Last name\"))\r\n          .required(translate(\"Field is required\")),\r\n        father_name: yup\r\n          .string(translate(\"Father name\"))\r\n          .required(translate(\"Field is required\")),\r\n        national_number: yup\r\n          .number(translate(\"National number\"))\r\n          .required(translate(\"Field is required\")),\r\n        number: yup.number(translate(\"ID Number\")),\r\n        //.required(translate(\"Field is required\")),\r\n        gender: yup\r\n          .string(translate(\"Gender\"))\r\n          .required(translate(\"Field is required\")),\r\n        authority: yup.string(translate(\"Functional Body\")),\r\n        /*work_field: yup\r\n          .string(translate(\"Work Field\"))\r\n          .required(translate(\"Field is required\")),*/\r\n        /*activity: yup\r\n          .string(translate(\"Activity\"))\r\n          .required(translate(\"Field is required\")),*/\r\n        /*prefix_name: yup\r\n          .string(translate(\"Name prefix\"))\r\n          .required(translate(\"Field is required\")),*/\r\n        primary_number: yup\r\n          .number(translate(\"Primary number\"))\r\n          .required(translate(\"Field is required\")),\r\n        secondary_number: yup.number(translate(\"Secondary number\")),\r\n        office_number: yup.number(translate(\"Office number\")),\r\n        mobile_1: yup\r\n          .number(translate(\"Mobile 1\"))\r\n          .required(translate(\"Field is required\")),\r\n        mobile_2: yup.number(translate(\"Mobile 2\")),\r\n        degree: yup\r\n          .string(translate(\"Degree\"))\r\n          .required(translate(\"Field is required\")),\r\n        /*hiast_graduate: yup\r\n          .boolean(translate(\"HIAST graduate\"))\r\n          .required(translate(\"Field is required\")),*/\r\n        status: yup\r\n          .string(translate(\"Status\"))\r\n          .required(translate(\"Field is required\")),\r\n        attachement: yup.mixed(),\r\n        //.required(translate(\"Need an attachement for this teacher\")),\r\n      });\r\n    /*: yup.object({\r\n        en_name: yup\r\n          .string(translate(\"English Name\"))\r\n          .required(translate(\"Field is required\")),\r\n        ar_name: yup\r\n          .string(translate(\"Arabic Name\"))\r\n          .required(translate(\"Field is required\")),\r\n        fr_name: yup\r\n          .string(translate(\"French Name\"))\r\n          .required(translate(\"Field is required\")),\r\n        code: yup\r\n          .string(translate(\"Teacher Code\"))\r\n          .required(translate(\"Field is required\")),\r\n        attachement: yup\r\n          .mixed()\r\n          .required(translate(\"Need an attachement for this teacher\")),\r\n      });*/\r\n\r\n    let initialValues =\r\n      //isCreate ?\r\n      {\r\n        first_name: teacher?.person?.first_name,\r\n        last_name: teacher?.person?.last_name,\r\n        father_name: teacher?.father_name,\r\n        national_number: teacher?.person?.national_number,\r\n        number: teacher?.number,\r\n        gender: teacher?.person?.sex,\r\n        authority: teacher?.authority,\r\n        work_field:\r\n          teacher && teacher.work_field\r\n            ? teacher.work_field\r\n            : work_fields(translate)[0].id,\r\n        activity: teacher?.activity,\r\n        prefix_name:\r\n          teacher && teacher.prefix_name\r\n            ? teacher.prefix_name\r\n            : name_prefixes(translate)[0].id,\r\n        primary_number: teacher?.person?.phones?.find(\r\n          (phone) => phone?.type === \"primary\"\r\n        )?.phone,\r\n        secondary_number: teacher?.person?.phones?.find(\r\n          (phone) => phone?.type === \"secondary\"\r\n        )?.phone,\r\n        office_number: teacher?.person?.phones?.find(\r\n          (phone) => phone?.type === \"office\"\r\n        )?.phone,\r\n        mobile_1: teacher?.person?.phones?.find(\r\n          (phone) => phone?.type === \"personal\"\r\n        )?.phone,\r\n        mobile_2: teacher?.person?.phones?.filter(\r\n          (phone) => phone?.type === \"personal\"\r\n        )[1]?.phone,\r\n        degree: teacher?.degree,\r\n        hiast_graduate: teacher ? teacher.hiast_graduate : 1,\r\n        status: teacher?.status,\r\n        attachement: teacher?.attachement,\r\n      };\r\n    /*: {\r\n        id: teacher.id,\r\n        en_name: teacher.en_name,\r\n        ar_name: teacher.ar_name,\r\n        fr_name: teacher.fr_name,\r\n        code: teacher.code,\r\n        attachement: teacher?.current_description?.attachement,\r\n      };*/\r\n    /************************* Handle Edit Teacher ************/\r\n    const handleEditTeacher = (event) => {\r\n      event.preventDefault();\r\n      activateEdit();\r\n    };\r\n    /*************** Handle End Add Description For Teacher ******/\r\n\r\n    const [errorPercentageMsg, setErrorPercentageMsg] = useState(\"\");\r\n    const submitForm = (values, setSubmitting) => {\r\n      if (isCreate) {\r\n        const payload: ICreateTeacherModel = {\r\n          first_name: values.first_name,\r\n          last_name: values.last_name,\r\n          father_name: values.father_name,\r\n          national_number: values.national_number,\r\n          number: values.number,\r\n          gender: values.gender,\r\n          authority: values.authority,\r\n          work_field: values.work_field,\r\n          activity: values.activity,\r\n          degree: values.degree,\r\n          prefix_name: values.prefix_name,\r\n          primary_number: values.primary_number,\r\n          secondary_number: values.secondary_number,\r\n          office_number: values.office_number,\r\n          mobile_1: values.mobile_1,\r\n          mobile_2: values.mobile_2,\r\n          hiast_graduate: values.hiast_graduate,\r\n          status: values.status,\r\n        };\r\n        //console.clear();\r\n        const isFile = hiddenInput.current.value != \"\";\r\n        if (isFile) {\r\n          payload.attachement = values.attachement;\r\n          payload.attachement_name = fileName;\r\n        }\r\n        console.log(payload);\r\n        TeacherService.Add(payload)\r\n          .then((response) => {\r\n            if (response.success) {\r\n              toast.success(\"Teacher Added Successfully\");\r\n              setShow();\r\n            } else {\r\n              console.log(response.error);\r\n              toast.error(response.error.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.message);\r\n            toast.error(error.message);\r\n            throw new Error(error);\r\n          });\r\n      } else {\r\n        const payload: IEditTeacherModel = {\r\n          id: teacher.id,\r\n          first_name: values.first_name,\r\n          last_name: values.last_name,\r\n          father_name: values.father_name,\r\n          national_number: values.national_number,\r\n          number: values.number,\r\n          gender: values.gender,\r\n          authority: values.authority,\r\n          work_field: values.work_field,\r\n          activity: values.activity,\r\n          degree: values.degree,\r\n          prefix_name: values.prefix_name,\r\n          primary_number: values.primary_number,\r\n          secondary_number: values.secondary_number,\r\n          office_number: values.office_number,\r\n          mobile_1: values.mobile_1,\r\n          mobile_2: values.mobile_2,\r\n          hiast_graduate: values.hiast_graduate,\r\n          status: values.status,\r\n        };\r\n        const isFile = hiddenInput.current.value != \"\";\r\n        if (isFile) {\r\n          payload.attachement = values.attachement;\r\n          payload.attachement_name = fileName;\r\n        }\r\n        console.log(payload);\r\n        TeacherService.Edit(payload)\r\n          .then((response) => {\r\n            if (response.success) {\r\n              toast.success(\"Teacher Edited Successfully\");\r\n              setShow();\r\n            } else {\r\n              console.log(response.error);\r\n              toast.error(response.error.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.message);\r\n            toast.error(error.message);\r\n            throw new Error(error);\r\n          });\r\n      }\r\n      setSubmitting(false);\r\n      // TeacherService.Add(payload)\r\n      //   .then(() => {})\r\n      //   .catch((e) => console.error(e));\r\n    };\r\n\r\n    const hiddenInput = React.useRef(null);\r\n    const handleClick = (event) => {\r\n      hiddenInput.current?.click();\r\n    };\r\n    const [changed, setChanged] = useState(false);\r\n    const convertToBase64 = (file) => {\r\n      return new Promise((resolve, reject) => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(file);\r\n        setFileName(file?.name);\r\n        fileReader.onload = () => {\r\n          resolve(fileReader.result);\r\n        };\r\n        fileReader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n      });\r\n    };\r\n\r\n    const handleFile = async (e, setFieldValue) => {\r\n      const file = e.target.files[0];\r\n      setChanged(true);\r\n      //check the size of image\r\n      if (file?.size / 1024 / 1024 < 2) {\r\n        const base64 = await convertToBase64(file);\r\n        setFieldValue(\"attachement\", base64);\r\n      } else {\r\n        toast.error(\"File size must be of 5MB or less\");\r\n      }\r\n    };\r\n\r\n    const initialWorkField = isCreate\r\n      ? work_fields(translate)[0].id\r\n      : initialValues.work_field;\r\n    const [selectedWorkField, setSelectedWorkField] =\r\n      useState(initialWorkField);\r\n    const handleWorkFieldChange = (event, basicHandleChange) => {\r\n      setSelectedWorkField(event.target.value);\r\n      basicHandleChange(event);\r\n    };\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <Grid container md={12} sm={12}>\r\n          <Grid md={12} sm={12} xs={12}>\r\n            <Card style={{ padding: \"1em 4em\", margin: \"5px 0px\" }}>\r\n              <Grid container>\r\n                <GridItem item md={9} xs={12} sm={12}>\r\n                  {!isCreate ? (\r\n                    <>\r\n                      <Typography variant=\"h5\" component=\"div\">\r\n                        {translate(\"Teacher Name\")}:{\" \"}\r\n                        {`${details?.person?.first_name} ${details?.father_name} ${details?.person.last_name}`}\r\n                      </Typography>\r\n                      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                        {translate(\"Teacher Details\")}\r\n                      </Typography>\r\n                    </>\r\n                  ) : (\r\n                    <Typography variant=\"h5\" component=\"div\">\r\n                      {translate(\"Add New Teacher\")}\r\n                    </Typography>\r\n                  )}\r\n                </GridItem>\r\n                <GridItem md={3} xs={12} sm={12}>\r\n                  <SuiButton onClick={setShow} color={\"warning\"}>\r\n                    <ArrowBack />\r\n                    {translate(\"Back To Previous Page\")}\r\n                  </SuiButton>\r\n                </GridItem>\r\n              </Grid>\r\n            </Card>\r\n            <Card\r\n              style={{ padding: \"3em 3em\", margin: \"5px 0px\", width: \"100%\" }}\r\n            >\r\n              <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                validationSchema={teacherSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  const work_field = work_fields(translate).find(\r\n                    (field) => field.id == values.work_field\r\n                  );\r\n                  if (work_field && work_field.activities.length === 0)\r\n                    values.activity = undefined;\r\n                  submitForm(values, setSubmitting);\r\n                }}\r\n              >\r\n                {(formik) => {\r\n                  const {\r\n                    values,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    errors,\r\n                    touched,\r\n                    handleBlur,\r\n                    isSubmitting,\r\n                    isValid,\r\n                    dirty,\r\n                    setFieldValue,\r\n                  } = formik;\r\n                  return (\r\n                    <Form onSubmit={handleSubmit}>\r\n                      <Grid\r\n                        container\r\n                        md={12}\r\n                        xs={12}\r\n                        style={{ margin: \"1em 0em\" }}\r\n                      >\r\n                        <Grid\r\n                          container\r\n                          md={12}\r\n                          style={{\r\n                            margin: \"1em 0em\",\r\n                            color: \"red\",\r\n                            display:\r\n                              errors && // 👈 null and undefined check\r\n                              Object.keys(errors).length === 0 &&\r\n                              Object.getPrototypeOf(errors) === Object.prototype\r\n                                ? \"none\"\r\n                                : \"block\",\r\n                          }}\r\n                        >\r\n                          {/* <Grid item xs={3} md={3} style={{ color: \"red\" }}>\r\n                        {JSON.stringify(errors)}\r\n                      </Grid> */}\r\n                        </Grid>\r\n                        <Grid item xs={4} md={4}>\r\n                          <GridItem>\r\n                            <TextField\r\n                              disabled={!isEditable}\r\n                              onChange={handleChange}\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              id=\"first_name\"\r\n                              name=\"first_name\"\r\n                              value={values.first_name}\r\n                              onBlur={handleBlur}\r\n                              error={Boolean(\r\n                                touched.first_name && errors.first_name\r\n                              )}\r\n                              helperText={\r\n                                touched.first_name && errors.first_name\r\n                              }\r\n                              placeholder={translate(\"First name\")}\r\n                              label={translate(\"First name\")}\r\n                              fullWidth\r\n                            />\r\n                          </GridItem>\r\n                        </Grid>\r\n                        <Grid item xs={4} md={4}>\r\n                          <GridItem>\r\n                            <TextField\r\n                              disabled={!isEditable}\r\n                              onChange={handleChange}\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              id=\"last_name\"\r\n                              name=\"last_name\"\r\n                              value={values.last_name}\r\n                              onBlur={handleBlur}\r\n                              error={Boolean(\r\n                                touched.last_name && errors.last_name\r\n                              )}\r\n                              helperText={touched.last_name && errors.last_name}\r\n                              placeholder={translate(\"Last name\")}\r\n                              label={translate(\"Last name\")}\r\n                              fullWidth\r\n                            />\r\n                          </GridItem>\r\n                        </Grid>\r\n                        <Grid item xs={4} md={4}>\r\n                          <GridItem>\r\n                            <TextField\r\n                              disabled={!isEditable}\r\n                              onChange={handleChange}\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              id=\"father_name\"\r\n                              name=\"father_name\"\r\n                              value={values.father_name}\r\n                              onBlur={handleBlur}\r\n                              error={Boolean(\r\n                                touched.father_name && errors.father_name\r\n                              )}\r\n                              helperText={\r\n                                touched.father_name && errors.father_name\r\n                              }\r\n                              placeholder={translate(\"Father name\")}\r\n                              label={translate(\"Father name\")}\r\n                              fullWidth\r\n                            />\r\n                          </GridItem>\r\n                        </Grid>\r\n                      </Grid>\r\n                      {\r\n                        //isCreate && (\r\n                        <Grid\r\n                          container\r\n                          md={12}\r\n                          xs={12}\r\n                          style={{ margin: \"1em 0em\" }}\r\n                        >\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                id=\"national_number\"\r\n                                name=\"national_number\"\r\n                                value={values.national_number}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.national_number &&\r\n                                    errors.national_number\r\n                                )}\r\n                                helperText={\r\n                                  touched.national_number &&\r\n                                  errors.national_number\r\n                                }\r\n                                placeholder={translate(\"National number\")}\r\n                                label={translate(\"National number\")}\r\n                                fullWidth\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                id=\"number\"\r\n                                name=\"number\"\r\n                                value={values.number}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(touched.number && errors.number)}\r\n                                helperText={touched.number && errors.number}\r\n                                placeholder={translate(\"ID Number\")}\r\n                                label={translate(\"ID Number\")}\r\n                                fullWidth\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"select\"\r\n                                id=\"gender\"\r\n                                name=\"gender\"\r\n                                select={true}\r\n                                value={values.gender}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(touched.gender && errors.gender)}\r\n                                helperText={touched.gender && errors.gender}\r\n                                placeholder={translate(\"Gender\")}\r\n                                label={translate(\"Gender\")}\r\n                                fullWidth\r\n                              >\r\n                                {genders(translate).map((gender) => (\r\n                                  <MenuItem key={gender.id} value={gender.id}>\r\n                                    {gender.value}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </TextField>\r\n                            </GridItem>\r\n                          </Grid>\r\n                        </Grid>\r\n                        //)}\r\n                      }\r\n\r\n                      {\r\n                        //isCreate && (\r\n                        <Grid\r\n                          container\r\n                          md={12}\r\n                          xs={12}\r\n                          style={{ margin: \"1em 0em\" }}\r\n                        >\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <FormControlLabel\r\n                                label={translate(\"Work Field\")}\r\n                                labelPlacement=\"top\"\r\n                                control={\r\n                                  <RadioGroup\r\n                                    onChange={(e) =>\r\n                                      handleWorkFieldChange(e, handleChange)\r\n                                    }\r\n                                    id=\"work_field\"\r\n                                    name=\"work_field\"\r\n                                    value={values.work_field}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder={translate(\"Work Field\")}\r\n                                    //defaultValue={work_fields(translate)[0].id}\r\n                                  >\r\n                                    {work_fields(translate).map((field) => (\r\n                                      <>\r\n                                        <FormControlLabel\r\n                                          key={field.id}\r\n                                          value={field.id}\r\n                                          control={<Radio />}\r\n                                          label={field.value}\r\n                                        />\r\n                                        {\r\n                                          //values.work_field === field.id ?\r\n                                          selectedWorkField === field.id &&\r\n                                          field.activities?.length > 0 ? (\r\n                                            <GridItem>\r\n                                              <TextField\r\n                                                disabled={!isEditable}\r\n                                                onChange={handleChange}\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                type=\"select\"\r\n                                                id=\"activity\"\r\n                                                name=\"activity\"\r\n                                                select={true}\r\n                                                value={values.activity}\r\n                                                onBlur={handleBlur}\r\n                                                error={Boolean(\r\n                                                  touched.activity &&\r\n                                                    errors.activity\r\n                                                )}\r\n                                                helperText={\r\n                                                  touched.activity &&\r\n                                                  errors.activity\r\n                                                }\r\n                                                placeholder={\r\n                                                  field.activitiesLabel\r\n                                                }\r\n                                                label={field.activitiesLabel}\r\n                                                fullWidth\r\n                                              >\r\n                                                {field.activities?.map(\r\n                                                  (activity) => (\r\n                                                    <MenuItem\r\n                                                      key={activity.id}\r\n                                                      value={activity.id}\r\n                                                    >\r\n                                                      {activity.value}\r\n                                                    </MenuItem>\r\n                                                  )\r\n                                                )}\r\n                                              </TextField>\r\n                                            </GridItem>\r\n                                          ) : (\r\n                                            <></>\r\n                                          )\r\n                                        }\r\n                                      </>\r\n                                    ))}\r\n                                  </RadioGroup>\r\n                                }\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={4} md={4}>\r\n                            <TextField\r\n                              disabled={!isEditable}\r\n                              onChange={handleChange}\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"select\"\r\n                              id=\"authority\"\r\n                              name=\"authority\"\r\n                              select={true}\r\n                              value={values.authority}\r\n                              onBlur={handleBlur}\r\n                              error={Boolean(\r\n                                touched.authority && errors.authority\r\n                              )}\r\n                              helperText={touched.authority && errors.authority}\r\n                              placeholder={translate(\"Functional Body\")}\r\n                              label={translate(\"Functional Body\")}\r\n                              fullWidth\r\n                            >\r\n                              {authorities(translate).map((authority) => (\r\n                                <MenuItem\r\n                                  key={authority.id}\r\n                                  value={authority.id}\r\n                                >\r\n                                  {authority.value}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <FormControlLabel\r\n                                label={translate(\"Name prefix\")}\r\n                                labelPlacement=\"top\"\r\n                                control={\r\n                                  <RadioGroup\r\n                                    onChange={handleChange}\r\n                                    id=\"prefix_name\"\r\n                                    name=\"prefix_name\"\r\n                                    value={values.prefix_name}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder={translate(\"Name prefix\")}\r\n                                    //defaultValue={name_prefixes(translate)[0].id}\r\n                                  >\r\n                                    {name_prefixes(translate).map((prefix) => (\r\n                                      <FormControlLabel\r\n                                        key={prefix.id}\r\n                                        value={prefix.id}\r\n                                        control={<Radio />}\r\n                                        label={prefix.value}\r\n                                      />\r\n                                    ))}\r\n                                  </RadioGroup>\r\n                                }\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                        </Grid>\r\n                        //)\r\n                      }\r\n\r\n                      {\r\n                        //isCreate && (\r\n                        <Grid\r\n                          container\r\n                          md={12}\r\n                          xs={12}\r\n                          style={{ margin: \"1em 0em\" }}\r\n                        >\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                id=\"primary_number\"\r\n                                name=\"primary_number\"\r\n                                value={values.primary_number}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.primary_number &&\r\n                                    errors.primary_number\r\n                                )}\r\n                                helperText={\r\n                                  touched.primary_number &&\r\n                                  errors.primary_number\r\n                                }\r\n                                placeholder={translate(\"Primary number\")}\r\n                                label={translate(\"Primary number\")}\r\n                                fullWidth\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                id=\"secondary_number\"\r\n                                name=\"secondary_number\"\r\n                                value={values.secondary_number}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.secondary_number &&\r\n                                    errors.secondary_number\r\n                                )}\r\n                                helperText={\r\n                                  touched.secondary_number &&\r\n                                  errors.secondary_number\r\n                                }\r\n                                placeholder={translate(\"Secondary number\")}\r\n                                label={translate(\"Secondary number\")}\r\n                                fullWidth\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                id=\"office_number\"\r\n                                name=\"office_number\"\r\n                                value={values.office_number}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.office_number && errors.office_number\r\n                                )}\r\n                                helperText={\r\n                                  touched.office_number && errors.office_number\r\n                                }\r\n                                placeholder={translate(\"Office number\")}\r\n                                label={translate(\"Office number\")}\r\n                                fullWidth\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                        </Grid>\r\n                        //)\r\n                      }\r\n\r\n                      {\r\n                        //isCreate && (\r\n                        <Grid\r\n                          container\r\n                          md={12}\r\n                          xs={12}\r\n                          style={{ margin: \"1em 0em\" }}\r\n                        >\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                id=\"mobile_1\"\r\n                                name=\"mobile_1\"\r\n                                value={values.mobile_1}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.mobile_1 && errors.mobile_1\r\n                                )}\r\n                                helperText={touched.mobile_1 && errors.mobile_1}\r\n                                placeholder={translate(\"Mobile 1\")}\r\n                                label={translate(\"Mobile 1\")}\r\n                                fullWidth\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                id=\"mobile_2\"\r\n                                name=\"mobile_2\"\r\n                                value={values.mobile_2}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(\r\n                                  touched.mobile_2 && errors.mobile_2\r\n                                )}\r\n                                helperText={touched.mobile_2 && errors.mobile_2}\r\n                                placeholder={translate(\"Mobile 2\")}\r\n                                label={translate(\"Mobile 2\")}\r\n                                fullWidth\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                          <Grid item xs={4} md={4}>\r\n                            {/* Intentionally empty */}\r\n                          </Grid>\r\n                        </Grid>\r\n                        //)\r\n                      }\r\n\r\n                      {\r\n                        //isCreate && (\r\n                        <Grid\r\n                          container\r\n                          md={12}\r\n                          xs={12}\r\n                          style={{ margin: \"1em 0em\" }}\r\n                        >\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"select\"\r\n                                id=\"degree\"\r\n                                name=\"degree\"\r\n                                select={true}\r\n                                value={values.degree}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(touched.degree && errors.degree)}\r\n                                helperText={touched.degree && errors.degree}\r\n                                placeholder={translate(\"Degree\")}\r\n                                label={translate(\"Degree\")}\r\n                                fullWidth\r\n                              >\r\n                                {degrees(translate).map((degree) => (\r\n                                  <MenuItem key={degree.id} value={degree.id}>\r\n                                    {degree.value}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </TextField>\r\n                            </GridItem>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <FormControlLabel\r\n                                label={translate(\"HIAST graduate\")}\r\n                                onChange={handleChange}\r\n                                control={\r\n                                  <Checkbox\r\n                                    disabled={!isEditable}\r\n                                    onChange={handleChange}\r\n                                    id=\"hiast_graduate\"\r\n                                    name=\"hiast_graduate\"\r\n                                    checked={values.hiast_graduate == 1}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder={translate(\"HIAST graduate\")}\r\n                                    //defaultChecked\r\n                                  />\r\n                                }\r\n                              />\r\n                            </GridItem>\r\n                          </Grid>\r\n                          <Grid item xs={4} md={4}>\r\n                            {/* Intentionally empty */}\r\n                          </Grid>\r\n                        </Grid>\r\n                        //)\r\n                      }\r\n                      {\r\n                        //isCreate && (\r\n                        <Grid\r\n                          container\r\n                          md={12}\r\n                          xs={12}\r\n                          style={{ margin: \"1em 0em\" }}\r\n                        >\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>\r\n                              <TextField\r\n                                disabled={!isEditable}\r\n                                onChange={handleChange}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"select\"\r\n                                id=\"status\"\r\n                                name=\"status\"\r\n                                select={true}\r\n                                value={values.status}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(touched.status && errors.status)}\r\n                                helperText={touched.status && errors.status}\r\n                                placeholder={translate(\"Status\")}\r\n                                label={translate(\"Status\")}\r\n                                fullWidth\r\n                              >\r\n                                {statuses(translate).map((status) => (\r\n                                  <MenuItem key={status.id} value={status.id}>\r\n                                    {status.value}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </TextField>\r\n                            </GridItem>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={4} md={4}>\r\n                            <GridItem>{/* Intentionally empty */}</GridItem>\r\n                          </Grid>\r\n                          <Grid item xs={4} md={4}>\r\n                            {/* Intentionally empty */}\r\n                          </Grid>\r\n                        </Grid>\r\n                        //)\r\n                      }\r\n\r\n                      <Divider style={{ margin: \"2em 0em\" }} />\r\n\r\n                      <Box mb={1} ml={0.5}>\r\n                        <Typography component=\"label\" variant=\"caption\">\r\n                          <h5>{translate(\"Attachements\")}</h5>\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box>\r\n                        <SuiButton\r\n                          disabled={!isEditable}\r\n                          color=\"primary\"\r\n                          onClick={handleClick}\r\n                        >\r\n                          {translate(\"Upload a file\")}\r\n                          <AttachFile />\r\n                        </SuiButton>\r\n                        <input\r\n                          id=\"attachement\"\r\n                          name=\"attachement\"\r\n                          type=\"file\"\r\n                          ref={hiddenInput}\r\n                          style={{ display: \"none\" }}\r\n                          onChange={(event) => {\r\n                            handleFile(event, setFieldValue);\r\n                          }}\r\n                          className=\"form-control\"\r\n                        />\r\n                        <Grid md={4} style={{ marginTop: \"1em\" }}>\r\n                          <TextField\r\n                            fullWidth\r\n                            helperText={\r\n                              touched?.attachement && errors?.attachement\r\n                            }\r\n                            error={Boolean(\r\n                              errors?.attachement && touched?.attachement\r\n                            )}\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            size=\"small\"\r\n                            disabled\r\n                            placeholder=\"\"\r\n                            value={fileName}\r\n                          />\r\n                        </Grid>\r\n                        {\r\n                          //values.attachement != null &&\r\n                          //values.attachement != \"\" &&\r\n                          teacher?.attachements &&\r\n                            teacher?.attachements.length != 0 &&\r\n                            !changed && (\r\n                              <Grid md={6} style={{ marginTop: \"1em\" }}>\r\n                                <a\r\n                                  href={\r\n                                    process.env.BASE_URL +\r\n                                    \"/\" +\r\n                                    teacher.attachements[0].url\r\n                                  }\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                >\r\n                                  <SuiButton\r\n                                    type=\"button\"\r\n                                    disabled={true}\r\n                                    variant=\"gradient\"\r\n                                    color=\"warning\"\r\n                                    fullWidth\r\n                                  >\r\n                                    <CloudDownload\r\n                                      style={{ margin: \"0em .3em\" }}\r\n                                    />\r\n                                    {translate(\"Download\")}\r\n                                  </SuiButton>\r\n                                </a>\r\n                              </Grid>\r\n                            )\r\n                        }\r\n                      </Box>\r\n                      <Box\r\n                        mt={4}\r\n                        mb={1}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                        }}\r\n                      >\r\n                        {isEditable ? (\r\n                          isSubmitting ? (\r\n                            <SuiButton\r\n                              type=\"button\"\r\n                              disabled={true}\r\n                              variant=\"gradient\"\r\n                              color=\"info\"\r\n                            >\r\n                              {translate(\"Processing ...\")}\r\n                            </SuiButton>\r\n                          ) : (\r\n                            <SuiButton\r\n                              style={{\r\n                                color: \"rgb(255, 255, 255)\",\r\n                                background: \"rgb(23, 193, 232)\",\r\n                              }}\r\n                              disabled={!isValid && isSubmitting}\r\n                              type=\"submit\"\r\n                            >\r\n                              {translate(\"Save\")}\r\n                            </SuiButton>\r\n                          )\r\n                        ) : (\r\n                          <SuiButton\r\n                            onClick={handleEditTeacher}\r\n                            type=\"button\"\r\n                            variant=\"gradient\"\r\n                            color=\"info\"\r\n                          >\r\n                            {translate(\"Edit Teacher\")}\r\n                          </SuiButton>\r\n                        )}\r\n                      </Box>\r\n                    </Form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </Card>\r\n            <CardActions></CardActions>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\n(TeacherDetail as any).layout = Admin;\r\n(TeacherDetail as any).auth = false;\r\n\r\nexport default TeacherDetail;\r\n"]},"metadata":{},"sourceType":"module"}