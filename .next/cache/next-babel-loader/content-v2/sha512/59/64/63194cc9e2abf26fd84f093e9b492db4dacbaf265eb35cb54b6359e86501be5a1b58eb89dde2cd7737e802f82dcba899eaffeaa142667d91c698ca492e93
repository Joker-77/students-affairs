{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\candidates\\\\CandidatePersonalInfo.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { TextField, Box, Grid, Typography, FormControlLabel, Radio, RadioGroup, MenuItem } from \"@material-ui/core\";\nimport Card from \"../../../../components/Card/Card.js\";\nimport CardHeader from \"../../../../components/Card/CardHeader.js\";\nimport CardBody from \"../../../../components/Card/CardBody.js\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport PersonInfoPartialForm from \"./PersonInfoPartialForm\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle\";\nimport CandidateService from \"../../../../Services/CandidateService\";\nimport { examPlaces, registerationClasses, registerationMethods, studyPlaces, yesNo } from \"../../../../Static/resources\";\nimport { useAppDispatch, setCandidate } from \"../../../../redux\";\nimport { toast } from \"react-toastify\";\n\nconst CandidatePersonalInfo = ({\n  initValues,\n  external = 0,\n  forAdd = false,\n  handleClose,\n  callback,\n  updateCandidate\n}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const dispatch = useAppDispatch();\n  const [disabled, setDisabled] = React.useState(false);\n  const submitFunction = forAdd ? CandidateService.Add : CandidateService.Edit;\n\n  const submitForm = async (values, setSubmitting) => {\n    setSubmitting(true);\n    values = _objectSpread(_objectSpread({}, values), {}, {\n      external: external,\n      permenant_address: 'permenant_address',\n      temporary_address: 'temporary_address'\n    });\n    submitFunction(values).then(res => {\n      if (res.success) {\n        if (forAdd) {\n          var _values;\n\n          handleClose && handleClose();\n          updateCandidate(res.result);\n          dispatch(setCandidate(_objectSpread(_objectSpread({}, res.result), {}, {\n            certificates: [],\n            person: (_values = values) === null || _values === void 0 ? void 0 : _values.person\n          })));\n          router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/candidate-details`);\n        } else {\n          console.log(res.result);\n          updateCandidate(res.result);\n          dispatch(setCandidate(_objectSpread({}, res.result)));\n          toast(translate('Candidate updated.'), {\n            type: 'success'\n          });\n        }\n\n        callback && callback(res.result);\n      }\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n    ;\n  };\n\n  const formScheme = Yup.object().shape({// first_name: Yup.string().required(translate(\"{0} is required\", \"First name\")),\n    // last_name: Yup.string().required(translate(\"{0} is required\", \"Last name\")),\n    // passport_first_name: Yup.string().required(translate(\"{0} is required\", \"Passport First Name\")),\n    // passport_last_name: Yup.string().required(translate(\"{0} is required\", \"Passport Last Name\")),\n    // passport_number: Yup.string().required(translate(\"{0} is required\", \"Passport Number\")),\n    // national_number: Yup.string().required(translate(\"{0} is required\", \"National number\")),\n    // sex: Yup.string().required(translate(\"{0} is required\", \"Gender\")),\n    // nationality: Yup.string().required(translate(\"{0} is required\", \"Nationality\")),\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"#01579b\"\n          },\n          children: translate('Personal Info')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initValues,\n          validationSchema: formScheme,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting);\n          },\n          children: formik => {\n            var _values$residance;\n\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty\n            } = formik;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(PersonInfoPartialForm, {\n                prefix: \"person\",\n                formik: formik,\n                disabled: disabled\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Registeration Class\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: `registeration_class`,\n                      name: `registeration_class`,\n                      select: true,\n                      value: values.registeration_class,\n                      onChange: handleChange(`registeration_class`),\n                      onBlur: handleBlur,\n                      placeholder: translate(\"registeration_class\"),\n                      fullWidth: true,\n                      children: registerationClasses(translate).map(_class => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: _class,\n                        children: _class\n                      }, _class, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Exam Place\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"select\",\n                      id: `exam_place`,\n                      name: `exam_place`,\n                      select: true,\n                      value: values.exam_place,\n                      onChange: handleChange(`exam_place`),\n                      onBlur: handleBlur,\n                      placeholder: translate(\"exam_place\"),\n                      fullWidth: true,\n                      children: examPlaces(translate).map(place => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: place,\n                        children: place\n                      }, place, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Registeration Method\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      id: 'registeration_method',\n                      name: 'registeration_method',\n                      value: values === null || values === void 0 ? void 0 : values.registeration_method,\n                      onChange: handleChange,\n                      defaultValue: registerationMethods(translate)[0],\n                      children: registerationMethods(translate).map(place => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: place,\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 98\n                        }, this),\n                        label: place\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Study Place\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      id: 'study_place',\n                      name: 'study_place',\n                      value: values === null || values === void 0 ? void 0 : values.study_place,\n                      onChange: handleChange,\n                      defaultValue: studyPlaces(translate)[0],\n                      children: studyPlaces(translate).map(place => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: place,\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 98\n                        }, this),\n                        label: place\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Need Residance\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      id: 'residance',\n                      name: 'residance',\n                      value: values === null || values === void 0 ? void 0 : (_values$residance = values.residance) === null || _values$residance === void 0 ? void 0 : _values$residance.toString(),\n                      onChange: handleChange,\n                      defaultValue: yesNo(translate)[0].value,\n                      children: yesNo(translate).map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 84\n                        }, this),\n                        value: option.value,\n                        label: option.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Birth date\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"date\",\n                      id: \"birth_date\",\n                      name: \"birth_date\",\n                      value: values.birth_date,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.birth_date && errors.birth_date),\n                      helperText: touched.birth_date && errors.birth_date,\n                      placeholder: translate(\"Birth date\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Birth place\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"birth_place\",\n                      name: \"birth_place\",\n                      value: values.birth_place,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.birth_place && errors.birth_place),\n                      helperText: touched.birth_place && errors.birth_place,\n                      placeholder: translate(\"Birth place\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"QAID place\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"qaid_place\",\n                      name: \"qaid_place\",\n                      value: values.qaid_place,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.qaid_place && errors.qaid_place),\n                      helperText: touched.qaid_place && errors.qaid_place,\n                      placeholder: translate(\"QAID place\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"QAID number\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"qaid_number\",\n                      name: \"qaid_number\",\n                      value: values.qaid_number,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.qaid_number && errors.qaid_number),\n                      helperText: touched.qaid_number && errors.qaid_number,\n                      placeholder: translate(\"QAID number\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mb: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 1,\n                      ml: 0.5,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"label\",\n                        variant: \"caption\",\n                        children: translate(\"Military office\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      disabled: disabled,\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"military_office\",\n                      name: \"military_office\",\n                      value: values.military_office,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.military_office && errors.military_office),\n                      helperText: touched.military_office && errors.military_office,\n                      placeholder: translate(\"Military office\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 4,\n                mb: 1,\n                children: isSubmitting ? /*#__PURE__*/_jsxDEV(SuiButton, {\n                  disabled: true,\n                  variant: \"gradient\",\n                  color: \"info\",\n                  fullWidth: true,\n                  children: translate(\"Processing ...\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(SuiButton // disabled={!(dirty && isValid)}\n                , {\n                  type: \"submit\",\n                  variant: \"gradient\",\n                  color: \"info\",\n                  fullWidth: true,\n                  children: translate(\"Save\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CandidatePersonalInfo;","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/candidates/CandidatePersonalInfo.tsx"],"names":["React","Formik","Form","TextField","Box","Grid","Typography","FormControlLabel","Radio","RadioGroup","MenuItem","Card","CardHeader","CardBody","SuiButton","PersonInfoPartialForm","useRouter","useTranslation","Yup","makeStyles","styles","CandidateService","examPlaces","registerationClasses","registerationMethods","studyPlaces","yesNo","useAppDispatch","setCandidate","toast","CandidatePersonalInfo","initValues","external","forAdd","handleClose","callback","updateCandidate","translate","useStyles","classes","router","dispatch","disabled","setDisabled","useState","submitFunction","Add","Edit","submitForm","values","setSubmitting","permenant_address","temporary_address","then","res","success","result","certificates","person","push","locale","console","log","type","catch","error","finally","formScheme","object","shape","fontWeight","color","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","registeration_class","map","_class","exam_place","place","registeration_method","study_place","residance","toString","value","option","label","birth_date","Boolean","birth_place","qaid_place","qaid_number","military_office"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n    TextField,\r\n    Box,\r\n    Grid,\r\n    Typography, FormControlLabel, Radio, RadioGroup, MenuItem,\r\n} from \"@material-ui/core\";\r\nimport Card from \"../../../../components/Card/Card.js\";\r\nimport CardHeader from \"../../../../components/Card/CardHeader.js\";\r\nimport CardBody from \"../../../../components/Card/CardBody.js\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport PersonInfoPartialForm from \"./PersonInfoPartialForm\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport * as Yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle\";\r\nimport CandidateService from \"../../../../Services/CandidateService\";\r\nimport { examPlaces, registerationClasses, registerationMethods, studyPlaces, yesNo } from \"../../../../Static/resources\";\r\nimport {\r\n    useAppDispatch,\r\n    setCandidate,\r\n} from \"../../../../redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface ICandidatePersonalInfoProps {\r\n    initValues: any;\r\n    external: number;\r\n    forAdd: boolean;\r\n    callback(candidate);\r\n    updateCandidate(candidate);\r\n    handleClose();\r\n}\r\nconst CandidatePersonalInfo: React.FC<ICandidatePersonalInfoProps> = ({\r\n    initValues,\r\n    external = 0,\r\n    forAdd = false,\r\n    handleClose,\r\n    callback,\r\n    updateCandidate,\r\n}) => {\r\n    const { translate } = useTranslation();\r\n    const useStyles = makeStyles(styles);\r\n    const classes = useStyles();\r\n\r\n    const router = useRouter();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [disabled, setDisabled] = React.useState<boolean>(false);\r\n\r\n    const submitFunction = forAdd ? CandidateService.Add : CandidateService.Edit;\r\n\r\n    const submitForm = async (values: any, setSubmitting) => {\r\n        setSubmitting(true);\r\n        values = { ...values, external: external, permenant_address: 'permenant_address', temporary_address: 'temporary_address' }\r\n        submitFunction(values)\r\n            .then((res) => {\r\n                if (res.success) {\r\n                    if (forAdd) {\r\n                        handleClose && handleClose();\r\n                        updateCandidate(res.result);\r\n                        dispatch(setCandidate({ ...res.result, certificates: [], person: values ?.person}));\r\n                        router.push(`/${router.locale}/students_affairs/affairs_officer/candidates/candidate-details`)\r\n                    } else {\r\n                        console.log(res.result);\r\n                        updateCandidate(res.result);\r\n                        dispatch(setCandidate({ ...res.result }));\r\n                        toast(translate('Candidate updated.'), { type: 'success' });\r\n                    }\r\n                    callback && callback(res.result);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"error\", error);\r\n            })\r\n            .finally(() => {\r\n                setSubmitting(false);\r\n            });\r\n        ;\r\n    };\r\n\r\n    const formScheme = Yup.object().shape({\r\n        // first_name: Yup.string().required(translate(\"{0} is required\", \"First name\")),\r\n        // last_name: Yup.string().required(translate(\"{0} is required\", \"Last name\")),\r\n        // passport_first_name: Yup.string().required(translate(\"{0} is required\", \"Passport First Name\")),\r\n        // passport_last_name: Yup.string().required(translate(\"{0} is required\", \"Passport Last Name\")),\r\n        // passport_number: Yup.string().required(translate(\"{0} is required\", \"Passport Number\")),\r\n        // national_number: Yup.string().required(translate(\"{0} is required\", \"National number\")),\r\n        // sex: Yup.string().required(translate(\"{0} is required\", \"Gender\")),\r\n        // nationality: Yup.string().required(translate(\"{0} is required\", \"Nationality\")),\r\n    });\r\n\r\n    return (\r\n        <Box>\r\n            <Card>\r\n                <CardHeader>\r\n                    <h4 style={{ fontWeight: \"bold\", color: \"#01579b\" }}>{translate('Personal Info')}</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Formik\r\n                        initialValues={initValues}\r\n                        validationSchema={formScheme}\r\n                        onSubmit={(values, { setSubmitting }) => {\r\n                            submitForm(values, setSubmitting);\r\n                        }}\r\n                    >\r\n                        {(formik) => {\r\n                            const {\r\n                                values,\r\n                                handleChange,\r\n                                handleSubmit,\r\n                                errors,\r\n                                touched,\r\n                                handleBlur,\r\n                                isSubmitting,\r\n                                isValid,\r\n                                dirty,\r\n                            } = formik;\r\n                            return (\r\n                                <Form>\r\n                                    <PersonInfoPartialForm prefix={\"person\"} formik={formik} disabled={disabled} />\r\n\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"Registeration Class\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <TextField\r\n                                                    disabled={disabled}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    type=\"select\"\r\n                                                    id={`registeration_class`}\r\n                                                    name={`registeration_class`}\r\n                                                    select={true}\r\n                                                    value={values.registeration_class}\r\n                                                    onChange={handleChange(`registeration_class`)}\r\n                                                    onBlur={handleBlur}\r\n                                                    placeholder={translate(\"registeration_class\")}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    {registerationClasses(translate).map((_class) => (\r\n                                                        <MenuItem key={_class} value={_class}>\r\n                                                            {_class}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"Exam Place\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <TextField\r\n                                                    disabled={disabled}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    type=\"select\"\r\n                                                    id={`exam_place`}\r\n                                                    name={`exam_place`}\r\n                                                    select={true}\r\n                                                    value={values.exam_place}\r\n                                                    onChange={handleChange(`exam_place`)}\r\n                                                    onBlur={handleBlur}\r\n                                                    placeholder={translate(\"exam_place\")}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    {examPlaces(translate).map((place) => (\r\n                                                        <MenuItem key={place} value={place}>\r\n                                                            {place}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item md={4}></Grid>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"Registeration Method\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <RadioGroup id={'registeration_method'} name={'registeration_method'} value={values ?.registeration_method} onChange={handleChange}\r\n                                                    defaultValue={registerationMethods(translate)[0]}>\r\n                                                    {registerationMethods(translate).map((place) => (\r\n                                                        <FormControlLabel value={place} control={<Radio />} label={place} />\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"Study Place\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <RadioGroup id={'study_place'} name={'study_place'} value={values ?.study_place} onChange={handleChange}\r\n                                                    defaultValue={studyPlaces(translate)[0]}>\r\n                                                    {studyPlaces(translate).map((place) => (\r\n                                                        <FormControlLabel value={place} control={<Radio />} label={place} />\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"Need Residance\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <RadioGroup id={'residance'} name={'residance'} value={values ?.residance ?.toString()} onChange={handleChange} defaultValue={yesNo(translate)[0].value}>\r\n                                                    {yesNo(translate).map((option) => (\r\n                                                        <FormControlLabel control={<Radio />} value={option.value} label={option.label} />\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"Birth date\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <TextField\r\n                                                    disabled={disabled}\r\n                                                    onChange={handleChange}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    type=\"date\"\r\n                                                    id=\"birth_date\"\r\n                                                    name=\"birth_date\"\r\n                                                    value={values.birth_date}\r\n                                                    onBlur={handleBlur}\r\n                                                    error={Boolean(touched.birth_date && errors.birth_date)}\r\n                                                    helperText={touched.birth_date && errors.birth_date}\r\n                                                    placeholder={translate(\"Birth date\")}\r\n                                                    fullWidth\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"Birth place\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <TextField\r\n                                                    disabled={disabled}\r\n                                                    onChange={handleChange}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    type=\"text\"\r\n                                                    id=\"birth_place\"\r\n                                                    name=\"birth_place\"\r\n                                                    value={values.birth_place}\r\n                                                    onBlur={handleBlur}\r\n                                                    error={Boolean(\r\n                                                        touched.birth_place && errors.birth_place\r\n                                                    )}\r\n                                                    helperText={touched.birth_place && errors.birth_place}\r\n                                                    placeholder={translate(\"Birth place\")}\r\n                                                    fullWidth\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"QAID place\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <TextField\r\n                                                    disabled={disabled}\r\n                                                    onChange={handleChange}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    type=\"text\"\r\n                                                    id=\"qaid_place\"\r\n                                                    name=\"qaid_place\"\r\n                                                    value={values.qaid_place}\r\n                                                    onBlur={handleBlur}\r\n                                                    error={Boolean(touched.qaid_place && errors.qaid_place)}\r\n                                                    helperText={touched.qaid_place && errors.qaid_place}\r\n                                                    placeholder={translate(\"QAID place\")}\r\n                                                    fullWidth\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"QAID number\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <TextField\r\n                                                    disabled={disabled}\r\n                                                    onChange={handleChange}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    type=\"text\"\r\n                                                    id=\"qaid_number\"\r\n                                                    name=\"qaid_number\"\r\n                                                    value={values.qaid_number}\r\n                                                    onBlur={handleBlur}\r\n                                                    error={Boolean(\r\n                                                        touched.qaid_number && errors.qaid_number\r\n                                                    )}\r\n                                                    helperText={\r\n                                                        touched.qaid_number && errors.qaid_number\r\n                                                    }\r\n                                                    placeholder={translate(\"QAID number\")}\r\n                                                    fullWidth\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item md={4}>\r\n                                            <Box mb={2}>\r\n                                                <Box mb={1} ml={0.5}>\r\n                                                    <Typography component=\"label\" variant=\"caption\">\r\n                                                        {translate(\"Military office\")}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <TextField\r\n                                                    disabled={disabled}\r\n                                                    onChange={handleChange}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    type=\"text\"\r\n                                                    id=\"military_office\"\r\n                                                    name=\"military_office\"\r\n                                                    value={values.military_office}\r\n                                                    onBlur={handleBlur}\r\n                                                    error={Boolean(\r\n                                                        touched.military_office && errors.military_office\r\n                                                    )}\r\n                                                    helperText={\r\n                                                        touched.military_office && errors.military_office\r\n                                                    }\r\n                                                    placeholder={translate(\"Military office\")}\r\n                                                    fullWidth\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    {/*<PersonInfoPartialForm prefix={\"father\"} title={translate(\"Father\")} formik={formik} disabled={disabled} isGray/>*/}\r\n                                    {/*<PersonInfoPartialForm prefix={\"mother\"} title={translate(\"Mother\")} formik={formik} disabled={disabled} isGray/>*/}\r\n\r\n                                    <Box mt={4} mb={1}>\r\n                                        {isSubmitting ? (\r\n                                            <SuiButton\r\n                                                disabled={true}\r\n                                                variant=\"gradient\"\r\n                                                color=\"info\"\r\n                                                fullWidth\r\n                                            >\r\n                                                {translate(\"Processing ...\")}\r\n                                            </SuiButton>\r\n                                        ) : (\r\n                                                <SuiButton\r\n                                                    // disabled={!(dirty && isValid)}\r\n                                                    type=\"submit\"\r\n                                                    variant=\"gradient\"\r\n                                                    color=\"info\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    {translate(\"Save\")}\r\n                                                </SuiButton>\r\n                                            )}\r\n                                    </Box>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </CardBody>\r\n            </Card>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CandidatePersonalInfo;\r\n"]},"metadata":{},"sourceType":"module"}