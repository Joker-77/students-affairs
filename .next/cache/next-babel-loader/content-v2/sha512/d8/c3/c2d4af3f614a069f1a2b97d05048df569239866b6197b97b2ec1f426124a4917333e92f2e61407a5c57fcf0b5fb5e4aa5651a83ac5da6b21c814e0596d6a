{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSession } from \"next-auth/react\";\nimport { useRouter } from \"next/router\";\nimport { selectSessionKey, useAppDispatch, useAppSelector } from \"../../redux\";\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const router = useRouter();\n  const {\n    data: session,\n    status\n  } = useSession();\n  const isUser = !!(session !== null && session !== void 0 && session.user);\n  const dispatch = useAppDispatch();\n  const sessionKey = useAppSelector(selectSessionKey);\n  React.useEffect(_s(() => {\n    _s();\n\n    const session = useSession();\n    const router = useRouter();\n    console.clear();\n    console.log(session);\n    if ((session === null || session === void 0 ? void 0 : session.status) === \"unauthenticated\") router.push(\"/authentication/sign-in\");\n  }, \"CFyt82WsygxLBSuQDqWmh+XY7Ew=\", false, function () {\n    return [useSession, useRouter];\n  }));\n  if (isUser) return children;else window.location.replace(\"/authentication/sign-in\");\n}\n\n_s2(AuthProvider, \"upKlogQnShh22uQKxqZqEacz/hY=\", false, function () {\n  return [useRouter, useSession, useAppDispatch, useAppSelector];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/components/AuthProvider/AuthProvider.tsx"],"names":["React","useSession","useRouter","selectSessionKey","useAppDispatch","useAppSelector","AuthProvider","children","router","data","session","status","isUser","user","dispatch","sessionKey","useEffect","console","clear","log","push","window","location","replace"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAA0BC,UAA1B,QAA4C,iBAA5C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SACEC,gBADF,EAEEC,cAFF,EAGEC,cAHF,QAMO,aANP;AAQA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AAAA;;AACjD,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA,IAAI,EAAEC,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BV,UAAU,EAA5C;AACA,QAAMW,MAAM,GAAG,CAAC,EAACF,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEG,IAAV,CAAhB;AACA,QAAMC,QAAQ,GAAGV,cAAc,EAA/B;AACA,QAAMW,UAAU,GAAGV,cAAc,CAACF,gBAAD,CAAjC;AAEAH,EAAAA,KAAK,CAACgB,SAAN,IAAgB,MAAM;AAAA;;AACpB,UAAMN,OAAO,GAAGT,UAAU,EAA1B;AACA,UAAMO,MAAM,GAAGN,SAAS,EAAxB;AACAe,IAAAA,OAAO,CAACC,KAAR;AACAD,IAAAA,OAAO,CAACE,GAAR,CAAYT,OAAZ;AACA,QAAI,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,MAAT,MAAoB,iBAAxB,EACEH,MAAM,CAACY,IAAP,CAAY,yBAAZ;AACH,GAPD;AAAA,YACkBnB,UADlB,EAEiBC,SAFjB;AAAA;AASA,MAAIU,MAAJ,EAAY,OAAOL,QAAP,CAAZ,KACKc,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,yBAAxB;AACN;;IAlBuBjB,Y;UACPJ,S,EACmBD,U,EAEjBG,c,EACEC,c;;;KALGC,Y","sourcesContent":["import React, { Children, useEffect } from \"react\";\r\nimport { SessionProvider, useSession } from \"next-auth/react\";\r\nimport { useRouter } from \"next/router\";\r\nimport {\r\n  selectSessionKey,\r\n  useAppDispatch,\r\n  useAppSelector,\r\n  setSessionKey,\r\n  selectDirection,\r\n} from \"../../redux\";\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const router = useRouter();\r\n  const { data: session, status } = useSession();\r\n  const isUser = !!session?.user;\r\n  const dispatch = useAppDispatch();\r\n  const sessionKey = useAppSelector(selectSessionKey);\r\n\r\n  React.useEffect(() => {\r\n    const session = useSession();\r\n    const router = useRouter();\r\n    console.clear();\r\n    console.log(session);\r\n    if (session?.status === \"unauthenticated\")\r\n      router.push(\"/authentication/sign-in\");\r\n  });\r\n\r\n  if (isUser) return children;\r\n  else window.location.replace(\"/authentication/sign-in\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}