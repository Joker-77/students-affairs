{"ast":null,"code":"import apiConnector from \"./ApiClient\";\nexport default class DesireService {\n  static async Save(payload) {\n    const addUrl = process.env.ADD_DESIRES_URL;\n    return await apiConnector.post(addUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async Edit(payload) {\n    const editUrl = process.env.EDIT_DESIRES_URL;\n    return await apiConnector.post(editUrl, payload).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async Get() {\n    const detailUrl = process.env.DETAILS_SPECIALITY_URL;\n    return await apiConnector.get(detailUrl).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n  static async GetAll(id) {\n    const listUrl = process.env.LIST_DESIRES_URL;\n    return await apiConnector.get(`${listUrl}?candidate_id=${id}`).then(response => {\n      if (response.data.success) {\n        let result = response.data;\n        return result;\n      }\n    }).catch(error => {\n      console.log(\"Api Error:\", error);\n      throw error;\n    });\n  }\n\n}","map":{"version":3,"sources":["F:/StudentAffairs/students/students/Services/DesireService.tsx"],"names":["apiConnector","DesireService","Save","payload","addUrl","process","env","ADD_DESIRES_URL","post","then","response","data","success","result","catch","error","console","log","Edit","editUrl","EDIT_DESIRES_URL","Get","detailUrl","DETAILS_SPECIALITY_URL","get","GetAll","id","listUrl","LIST_DESIRES_URL"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,aAAzB;AAGA,eAAe,MAAMC,aAAN,CAAoB;AACjC,eAAaC,IAAb,CAAkBC,OAAlB,EAAiD;AAC/C,UAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAA3B;AACA,WAAO,MAAMP,YAAY,CACtBQ,IADU,CACLJ,MADK,EACGD,OADH,EAEVM,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACA,YAAMA,KAAN;AACD,KAXU,CAAb;AAYD;;AAED,eAAaG,IAAb,CAAkBf,OAAlB,EAAiD;AAC/C,UAAMgB,OAAO,GAAGd,OAAO,CAACC,GAAR,CAAYc,gBAA5B;AACA,WAAO,MAAMpB,YAAY,CACtBQ,IADU,CACLW,OADK,EACIhB,OADJ,EAEVM,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACA,YAAMA,KAAN;AACD,KAXU,CAAb;AAYD;;AAED,eAAaM,GAAb,GAAyC;AACvC,UAAMC,SAAS,GAAGjB,OAAO,CAACC,GAAR,CAAYiB,sBAA9B;AACA,WAAO,MAAMvB,YAAY,CACtBwB,GADU,CACNF,SADM,EAEVb,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACA,YAAMA,KAAN;AACD,KAXU,CAAb;AAYD;;AAED,eAAaU,MAAb,CAAoBC,EAApB,EAA8C;AAC5C,UAAMC,OAAO,GAAGtB,OAAO,CAACC,GAAR,CAAYsB,gBAA5B;AACA,WAAO,MAAM5B,YAAY,CACtBwB,GADU,CACL,GAAEG,OAAQ,iBAAgBD,EAAG,EADxB,EAEVjB,IAFU,CAEJC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAIC,MAAM,GAAGH,QAAQ,CAACC,IAAtB;AACA,eAAOE,MAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACA,YAAMA,KAAN;AACD,KAXU,CAAb;AAYD;;AA/DgC","sourcesContent":["import apiConnector from \"./ApiClient\";\r\nimport { ApiResponse } from \"../Models/ApiResponse/ApiResponse\";\r\n\r\nexport default class DesireService {\r\n  static async Save(payload): Promise<ApiResponse> {\r\n    const addUrl = process.env.ADD_DESIRES_URL as string;\r\n    return await apiConnector\r\n      .post(addUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Edit(payload): Promise<ApiResponse> {\r\n    const editUrl = process.env.EDIT_DESIRES_URL as string;\r\n    return await apiConnector\r\n      .post(editUrl, payload)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async Get(): Promise<ApiResponse> {\r\n    const detailUrl = process.env.DETAILS_SPECIALITY_URL as string;\r\n    return await apiConnector\r\n      .get(detailUrl)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  static async GetAll(id): Promise<ApiResponse> {\r\n    const listUrl = process.env.LIST_DESIRES_URL as string;\r\n    return await apiConnector\r\n      .get(`${listUrl}?candidate_id=${id}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          let result = response.data;\r\n          return result;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api Error:\", error);\r\n        throw error;\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}