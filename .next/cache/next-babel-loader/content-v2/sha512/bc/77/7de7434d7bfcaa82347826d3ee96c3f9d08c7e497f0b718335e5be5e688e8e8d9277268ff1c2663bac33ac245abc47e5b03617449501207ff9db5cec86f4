{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\candidates\\\\CandidateDesiresList.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Admin from \"../../../../layouts/Admin\";\nimport Card from \"../../../../components/Card/Card.js\";\nimport CardHeader from \"../../../../components/Card/CardHeader.js\";\nimport CardBody from \"../../../../components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { Grid } from \"@material-ui/core\";\nimport Desire from \"../../../../components/Desire/Desire\";\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from \"react-beautiful-dnd\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport SpecialityService from \"../../../../Services/SpecialityService\";\nimport DesireService from \"../../../../Services/DesireService\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { toast } from \"react-toastify\";\n\nconst CandidateDesireList = ({\n  candidateId,\n  callback,\n  updateCandidate,\n  candidate\n}) => {\n  _s();\n\n  resetServerContext();\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const [Desires, setDesires] = React.useState(null);\n  const {\n    0: columns,\n    1: setColumns\n  } = useState({});\n\n  const getSpecialities = () => {\n    SpecialityService.GetAll().then(res => {\n      console.log(\"Speciality\", res);\n      setColumns({\n        system: {\n          type: 1,\n          name: translate('Desires'),\n          items: res.result.map(item => {\n            return _objectSpread(_objectSpread({}, item), {}, {\n              id: item.id.toString()\n            });\n          })\n        }\n      });\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  };\n  /************************** Data ****************************/\n\n\n  useEffect(() => {\n    DesireService.GetAll(candidateId).then(res => {\n      console.log(\"Desire\", res);\n      const desires = res.result;\n\n      if (desires.length > 0) {\n        setColumns({\n          system: {\n            type: 1,\n            name: translate('Desires'),\n            items: desires.filter().map(item => {\n              return _objectSpread(_objectSpread({}, item.speciality), {}, {\n                id: item.speciality_id.toString()\n              });\n            })\n          }\n        });\n      } else {\n        getSpecialities();\n      }\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  }, []);\n  /************************** Finish Data ****************************/\n\n  const {\n    0: isSubmitting,\n    1: setSubmitting\n  } = useState(false);\n  /************************** Handle edit data ****************************/\n\n  const submitUpdateDesire = async () => {\n    setSubmitting(true);\n    console.log(\"items order: \", columns.system.items);\n    const values = {\n      candidate_id: candidateId,\n      desires: columns.system.items.map((item, index) => {\n        return {\n          speciality_id: item.id,\n          order: index + 1\n        };\n      })\n    };\n    DesireService.Save(values).then(res => {\n      console.log(\"Desire\", res);\n      updateCandidate(_objectSpread(_objectSpread({}, candidate), {}, {\n        desires: res.result.map(e => e.speciality)\n      }));\n      toast(translate('Desires updated.'), {\n        type: 'success'\n      });\n      callback && callback(res.result);\n    }).catch(error => {\n      console.error(\"error\", error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /************************** Finish Edit Data ****************************/\n\n\n  const onDragEnd = (result, columns, setColumns) => {\n    console.log(result, columns);\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns(_objectSpread(_objectSpread({}, columns), {}, {\n      [source.droppableId]: _objectSpread(_objectSpread({}, column), {}, {\n        items: copiedItems\n      })\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        xs: 12,\n        md: 12,\n        sm: 12,\n        children: Object.entries(columns).map(([columnId, column], index) => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            md: 12,\n            xs: 12,\n            sm: 12,\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontWeight: \"bold\",\n                    color: \"#01579b\"\n                  },\n                  children: column.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: columnId,\n                  children: (provided, snapshot) => {\n                    return /*#__PURE__*/_jsxDEV(Grid, _objectSpread(_objectSpread({\n                      md: 12,\n                      container: true\n                    }, provided.droppableProps), {}, {\n                      ref: provided.innerRef,\n                      style: {\n                        background: snapshot.isDraggingOver ? \"rgb(1, 87, 155, 0.4)\" : \"rgba(211, 211, 211, 0.15)\",\n                        padding: 20,\n                        marginBottom: 20,\n                        borderRadius: 10\n                      },\n                      children: [column.items.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(Draggable, {\n                          draggableId: item.id,\n                          index: index,\n                          children: (provided, snapshot) => {\n                            return /*#__PURE__*/_jsxDEV(Grid, _objectSpread(_objectSpread(_objectSpread({\n                              md: 12,\n                              ref: provided.innerRef\n                            }, provided.draggableProps), provided.dragHandleProps), {}, {\n                              style: _objectSpread({\n                                userSelect: \"none\",\n                                margin: \"3px 0 3px 0\",\n                                padding: \"0 20px\",\n                                borderRadius: \"12px\",\n                                backgroundColor: snapshot.isDragging ? \"#c2c2c2\" : \"white\",\n                                color: \"black\"\n                              }, provided.draggableProps.style),\n                              children: /*#__PURE__*/_jsxDEV(Desire, {\n                                id: item.id,\n                                index: index,\n                                name: item.ar_short_name,\n                                type: column.type\n                              }, item.id, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 185,\n                                columnNumber: 41\n                              }, this)\n                            }), void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 168,\n                              columnNumber: 39\n                            }, this);\n                          }\n                        }, item.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 161,\n                          columnNumber: 33\n                        }, this);\n                      }), provided.placeholder]\n                    }), void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 27\n                    }, this);\n                  }\n                }, columnId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(SuiButton, {\n                  disabled: true,\n                  variant: \"gradient\",\n                  color: \"info\",\n                  fullWidth: true,\n                  children: translate(\"Processing ...\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(SuiButton, {\n                  variant: \"gradient\",\n                  color: \"info\",\n                  fullWidth: true,\n                  onClick: submitUpdateDesire,\n                  children: translate(\"Save\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, columnId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CandidateDesireList, \"5jMNm05VMNJBDAdmVC2b15118to=\", false, function () {\n  return [useTranslation];\n});\n\n_c = CandidateDesireList;\nCandidateDesireList.auth = true;\nCandidateDesireList.layout = Admin;\nexport default CandidateDesireList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandidateDesireList\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/candidates/CandidateDesiresList.tsx"],"names":["React","useEffect","useState","Admin","Card","CardHeader","CardBody","makeStyles","styles","Grid","Desire","DragDropContext","Droppable","Draggable","resetServerContext","useTranslation","SpecialityService","DesireService","SuiButton","toast","CandidateDesireList","candidateId","callback","updateCandidate","candidate","translate","useStyles","Desires","setDesires","columns","setColumns","getSpecialities","GetAll","then","res","console","log","system","type","name","items","result","map","item","id","toString","catch","error","desires","length","filter","speciality","speciality_id","isSubmitting","setSubmitting","submitUpdateDesire","values","candidate_id","index","order","Save","e","finally","onDragEnd","destination","source","column","droppableId","copiedItems","removed","splice","Object","entries","columnId","display","flexDirection","alignItems","fontWeight","color","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","marginBottom","borderRadius","draggableProps","dragHandleProps","userSelect","margin","backgroundColor","isDragging","style","ar_short_name","placeholder","auth","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport Card from \"../../../../components/Card/Card.js\";\r\nimport CardHeader from \"../../../../components/Card/CardHeader.js\";\r\nimport CardBody from \"../../../../components/Card/CardBody.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Desire from \"../../../../components/Desire/Desire\";\r\n\r\nimport {\r\n  DragDropContext,\r\n  Droppable,\r\n  Draggable,\r\n  resetServerContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport SpecialityService from \"../../../../Services/SpecialityService\";\r\nimport DesireService from \"../../../../Services/DesireService\";\r\nimport { IDesireModel } from \"../../../../Models/ApiResponse/DesireModel\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface IDesireListProps { candidateId: number; callback(candidate); updateCandidate(candidate), candidate: any }\r\nconst CandidateDesireList: React.FC<IDesireListProps> = ({ candidateId, callback, updateCandidate, candidate }) => {\r\n  resetServerContext();\r\n  const { translate } = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const [Desires, setDesires] = React.useState<IDesireModel[]>(null);\r\n  const [columns, setColumns] = useState({});\r\n\r\n  const getSpecialities = () => {\r\n    SpecialityService.GetAll()\r\n      .then((res) => {\r\n        console.log(\"Speciality\", res);\r\n        setColumns({\r\n          system: {\r\n            type: 1,\r\n            name: translate('Desires'),\r\n            items: res.result.map((item) => { return { ...item, id: item.id.toString() } }),\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      });\r\n  };\r\n\r\n  /************************** Data ****************************/\r\n  useEffect(() => {\r\n    DesireService.GetAll(candidateId)\r\n      .then((res) => {\r\n        console.log(\"Desire\", res);\r\n        const desires = res.result;\r\n        if (desires.length > 0) {\r\n          setColumns({\r\n            system: {\r\n              type: 1,\r\n              name: translate('Desires'),\r\n              items: desires.filter().map((item) => { return { ...item.speciality, id: item.speciality_id.toString() } }),\r\n            },\r\n          });\r\n        } else {\r\n          getSpecialities();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      });\r\n  }, []);\r\n  /************************** Finish Data ****************************/\r\n\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n  /************************** Handle edit data ****************************/\r\n  const submitUpdateDesire = async () => {\r\n    setSubmitting(true);\r\n    console.log(\"items order: \", columns.system.items);\r\n    const values = {\r\n      candidate_id: candidateId,\r\n      desires: columns.system.items.map((item, index) => { return { speciality_id: item.id, order: index + 1 } })\r\n    }\r\n    DesireService.Save(values)\r\n      .then((res) => {\r\n        console.log(\"Desire\", res);\r\n        updateCandidate({ ...candidate, desires: res.result.map(e => e.speciality) })\r\n        toast(translate('Desires updated.'), { type: 'success' });\r\n        callback && callback(res.result);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n  /************************** Finish Edit Data ****************************/\r\n\r\n\r\n  const onDragEnd = (result, columns, setColumns) => {\r\n    console.log(result, columns);\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n\r\n    const column = columns[source.droppableId];\r\n    const copiedItems = [...column.items];\r\n    const [removed] = copiedItems.splice(source.index, 1);\r\n    copiedItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems,\r\n      },\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext\r\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n      >\r\n        <Grid container xs={12} md={12} sm={12}>\r\n          {Object.entries(columns).map(([columnId, column], index) => {\r\n            return (\r\n              <Grid\r\n                md={12}\r\n                xs={12}\r\n                sm={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                key={columnId}\r\n              >\r\n                <Card>\r\n                  <CardHeader>\r\n                    <h4 style={{ fontWeight: \"bold\", color: \"#01579b\" }}>{column.name}</h4>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Droppable droppableId={columnId} key={columnId}>\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n                          <Grid\r\n                            md={12}\r\n                            container\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                            style={{\r\n                              background: snapshot.isDraggingOver\r\n                                ? \"rgb(1, 87, 155, 0.4)\"\r\n                                : \"rgba(211, 211, 211, 0.15)\",\r\n                              padding: 20,\r\n                              marginBottom: 20,\r\n                              borderRadius: 10,\r\n                            }}\r\n                          >\r\n                            {column.items.map((item, index) => {\r\n                              return (\r\n                                <Draggable\r\n                                  key={item.id}\r\n                                  draggableId={item.id}\r\n                                  index={index}\r\n                                >\r\n                                  {(provided, snapshot) => {\r\n                                    return (\r\n                                      <Grid\r\n                                        md={12}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        style={{\r\n                                          userSelect: \"none\",\r\n                                          margin: \"3px 0 3px 0\",\r\n                                          padding: \"0 20px\",\r\n                                          borderRadius: \"12px\",\r\n                                          backgroundColor: snapshot.isDragging\r\n                                            ? \"#c2c2c2\"\r\n                                            : \"white\",\r\n                                          color: \"black\",\r\n                                          ...provided.draggableProps.style,\r\n                                        }}\r\n                                      >\r\n                                        <Desire\r\n                                          id={item.id}\r\n                                          index={index}\r\n                                          name={item.ar_short_name}\r\n                                          key={item.id}\r\n                                          type={column.type}\r\n                                        ></Desire>\r\n                                      </Grid>\r\n                                    );\r\n                                  }}\r\n                                </Draggable>\r\n                              );\r\n                            })}\r\n                            {provided.placeholder}\r\n                          </Grid>\r\n                        );\r\n                      }}\r\n                    </Droppable>\r\n\r\n                    {isSubmitting ? (\r\n                      <SuiButton\r\n                        disabled={true}\r\n                        variant=\"gradient\"\r\n                        color=\"info\"\r\n                        fullWidth\r\n                      >\r\n                        {translate(\"Processing ...\")}\r\n                      </SuiButton>\r\n                    ) : (\r\n                        <SuiButton\r\n                          variant=\"gradient\"\r\n                          color=\"info\"\r\n                          fullWidth\r\n                          onClick={submitUpdateDesire}\r\n                        >\r\n                          {translate(\"Save\")}\r\n                        </SuiButton>\r\n                      )}\r\n\r\n\r\n                  </CardBody>\r\n                </Card>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\n(CandidateDesireList as any).auth = true;\r\n(CandidateDesireList as any).layout = Admin;\r\nexport default CandidateDesireList;\r\n"]},"metadata":{},"sourceType":"module"}