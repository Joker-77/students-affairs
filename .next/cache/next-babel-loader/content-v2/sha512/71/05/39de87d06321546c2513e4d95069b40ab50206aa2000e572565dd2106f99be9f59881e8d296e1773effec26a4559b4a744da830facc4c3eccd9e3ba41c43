{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\admin\\\\courses\\\\course-details.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../../../../components/Card/Card\";\nimport { Box, CardActions, Divider, Grid, MenuItem, TextField, Typography } from \"@material-ui/core\";\nimport Admin from \"../../../../layouts/Admin\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport * as yup from \"yup\";\nimport { FieldArray, Form, Formik, ErrorMessage } from \"formik\";\nimport { connect } from \"react-redux\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport { Add, ArrowBack } from \"@material-ui/icons\";\n\nconst CourseDetail = (_ref) => {\n  _s();\n\n  var _details$ar_name;\n\n  let {\n    courseDetail,\n    setShow\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"courseDetail\", \"setShow\"]);\n\n  const methodTypes = [{\n    id: \"midTerm\",\n    name: \"مذاكرة\"\n  }, {\n    id: \"exam\",\n    name: \"امتحان\"\n  }, {\n    id: \"practicalExam\",\n    name: \"امتحان عملي\"\n  }];\n  const {\n    translate\n  } = useTranslation();\n  const {\n    0: details,\n    1: setDetails\n  } = useState(courseDetail);\n  const initialValues = {};\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n  const courseSchema = yup.object({\n    en_name: yup.string(translate(\"English Name\")).required(translate(\"Field is required\")),\n    ar_name: yup.string(translate(\"Arabic Name\")).required(translate(\"Field is required\")),\n    fr_name: yup.string(translate(\"French Name\")).required(translate(\"Field is required\")),\n    theoretical_hours: yup.number(\"Theoretical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    practical_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    mixed_hours: yup.number(\"Practical Hours\").min(0, translate(\"Field must be greater than 0\")).required(translate(\"Field is required\")),\n    evaluation_methods: yup.array().of(yup.object().shape({\n      name: yup.string().required(\"Name is required\"),\n      percentage: yup.number().min(0, translate(\"Field must be greater than 0\")).max(100, translate(\"Field must be less than 100\")).transform(value => isNaN(value) ? undefined : value).required(\"Percentage is required\")\n    })).min(1, \"Need at least a evaluation method\").test(methods => {\n      const sum = methods.reduce((acc, curr) => acc + curr.percentage, 0);\n      return sum === 100;\n    })\n  });\n\n  const submitForm = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    md: 12,\n    sm: 12,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      md: 12,\n      sm: 12,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"1em 4em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            item: true,\n            md: 9,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: [translate(\"Course Name\"), \":\", \" \", (_details$ar_name = details === null || details === void 0 ? void 0 : details.ar_name) !== null && _details$ar_name !== void 0 ? _details$ar_name : \"التحليل الرياضي\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mb: 1.5\n              },\n              color: \"text.secondary\",\n              children: translate(\"Course Details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            md: 3,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(SuiButton, {\n              onClick: setShow,\n              color: \"warning\",\n              children: [/*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), translate(\"Back To Previous Page\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"3em 3em\",\n          margin: \"5px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: courseSchema,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            submitForm(values, setSubmitting);\n          },\n          children: formik => {\n            const {\n              values,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n              handleBlur,\n              isSubmitting,\n              isValid,\n              dirty\n            } = formik;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                style: {\n                  margin: \"1em 0em\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"ar_name\",\n                      name: \"ar_name\",\n                      value: values.ar_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.ar_name && errors.ar_name),\n                      helperText: touched.ar_name && errors.ar_name,\n                      placeholder: translate(\"Arabic Name\"),\n                      label: translate(\"Arabic Name\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"en_name\",\n                      name: \"en_name\",\n                      value: values.en_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.en_name && errors.en_name),\n                      helperText: touched.en_name && errors.en_name,\n                      placeholder: translate(\"English Name\"),\n                      label: translate(\"English Name\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"text\",\n                      id: \"fr_name\",\n                      name: \"fr_name\",\n                      value: values.fr_name,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.fr_name && errors.fr_name),\n                      helperText: touched.fr_name && errors.fr_name,\n                      placeholder: translate(\"French Name\"),\n                      label: translate(\"French Name\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                md: 12,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"theoretical_hours\",\n                      name: \"theoretical_hours\",\n                      value: values.theoretical_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.theoretical_hours && errors.theoretical_hours),\n                      helperText: touched.theoretical_hours && errors.theoretical_hours,\n                      placeholder: translate(\"Theoretical Hours\"),\n                      label: translate(\"Theoretical Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"practical_hours\",\n                      name: \"practical_hours\",\n                      value: values.practical_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.practical_hours && errors.practical_hours),\n                      helperText: touched.practical_hours && errors.practical_hours,\n                      placeholder: translate(\"Practical Hours\"),\n                      label: translate(\"Practical Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(GridItem, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      size: \"small\",\n                      type: \"number\",\n                      id: \"mixed_hours\",\n                      name: \"mixed_hours\",\n                      value: values.mixed_hours,\n                      onBlur: handleBlur,\n                      error: Boolean(touched.mixed_hours && errors.mixed_hours),\n                      helperText: touched.mixed_hours && errors.mixed_hours,\n                      placeholder: translate(\"Mixed Hours\"),\n                      label: translate(\"Mixed Hours\"),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                style: {\n                  margin: \"2em 0em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                ml: 0.5,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"label\",\n                  variant: \"caption\",\n                  children: translate(\"Evalutations Method\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                name: \"evaluation_methods\",\n                render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: values !== null && values !== void 0 && values.evaluation_methods && (values === null || values === void 0 ? void 0 : values.evaluation_methods.length) > 0 ? values === null || values === void 0 ? void 0 : values.evaluation_methods.map((method, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          variant: \"outlined\",\n                          size: \"small\",\n                          type: \"select\",\n                          id: `evaluation_methods.${index}.name`,\n                          name: `evaluation_methods.${index}.name`,\n                          select: true,\n                          value: method.name,\n                          onChange: handleChange(`evaluation_methods.${index}.name`),\n                          onBlur: handleBlur,\n                          fullWidth: true,\n                          children: methodTypes === null || methodTypes === void 0 ? void 0 : methodTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: type.id,\n                            children: type.name\n                          }, type.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 302,\n                            columnNumber: 39\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 287,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        style: {\n                          display: \"flex\",\n                          flexDirection: \"column\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          onChange: handleChange(`evaluation_methods.${index}.percentage`),\n                          variant: \"outlined\",\n                          size: \"small\",\n                          type: \"number\",\n                          id: `$evaluation_methods.${index}.percentage`,\n                          name: `evaluation_methods.${index}.percentage`,\n                          value: method.percentage,\n                          onBlur: handleBlur,\n                          error: Boolean(errors && errors.evaluation_methods && errors.evaluation_methods[index] && errors.evaluation_methods[index].percentage && touched && touched.evaluation_methods && touched.evaluation_methods[index] && touched.evaluation_methods[index].percentage),\n                          helperText: errors && errors.evaluation_methods && errors.evaluation_methods[index] && errors.evaluation_methods[index].percentage && touched && touched.evaluation_methods && touched.evaluation_methods[index] && touched.evaluation_methods[index].percentage,\n                          placeholder: translate(\"Percentage\") //fullWidth\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: `evaluation_methods.${index}.percentage`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 354,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: [/*#__PURE__*/_jsxDEV(SuiButton, {\n                          style: {\n                            margin: 5\n                          },\n                          color: \"error\",\n                          onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                          ,\n                          children: \"-\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 359,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(SuiButton, {\n                          style: {\n                            margin: 5\n                          },\n                          color: \"primary\",\n                          onClick: () => arrayHelpers.push({\n                            name: \"\",\n                            percentage: 0\n                          }) // insert an empty string at a position\n                          ,\n                          children: \"+\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 31\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 29\n                  }, this)) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(SuiButton, {\n                      variant: \"gradient\",\n                      color: \"success\",\n                      onClick: () => arrayHelpers.push({\n                        name: \"\",\n                        percentage: 0\n                      }),\n                      children: [translate(\"Add an evaluation method\"), /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseDetail, \"Z4cFWuDWj15O5NeWlz91zZFfpTc=\", false, function () {\n  return [useTranslation];\n});\n\n_c = CourseDetail;\nCourseDetail.layout = Admin;\nCourseDetail.auth = false;\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    candidate: state.baseReducer.course\n  };\n};\n\nexport default connect(mapStateToProps, null)(CourseDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseDetail\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/admin/courses/course-details.tsx"],"names":["React","useState","Card","Box","CardActions","Divider","Grid","MenuItem","TextField","Typography","Admin","useTranslation","GridItem","yup","FieldArray","Form","Formik","ErrorMessage","connect","SuiButton","Add","ArrowBack","CourseDetail","courseDetail","setShow","props","methodTypes","id","name","translate","details","setDetails","initialValues","submitting","setSubmitting","courseSchema","object","en_name","string","required","ar_name","fr_name","theoretical_hours","number","min","practical_hours","mixed_hours","evaluation_methods","array","of","shape","percentage","max","transform","value","isNaN","undefined","test","methods","sum","reduce","acc","curr","submitForm","padding","margin","mb","values","formik","handleChange","handleSubmit","errors","touched","handleBlur","isSubmitting","isValid","dirty","Boolean","arrayHelpers","length","map","method","index","type","display","flexDirection","remove","push","layout","auth","mapStateToProps","state","console","log","candidate","baseReducer","course"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport {\r\n  ICourseModel,\r\n  IEvaluationMethod,\r\n} from \"../../../../Models/ApiResponse/Courses/CourseModel\";\r\nimport Card from \"../../../../components/Card/Card\";\r\nimport {\r\n  Box,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport GridItem from \"../../../../components/Grid/GridItem\";\r\nimport * as yup from \"yup\";\r\nimport { Field, FieldArray, Form, Formik, getIn, ErrorMessage } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport SuiButton from \"../../../../components/SuiButton\";\r\nimport { Add, ArrowBack, Backspace } from \"@material-ui/icons\";\r\n\r\ninterface ICourseDetailProps {\r\n  show: boolean;\r\n  courseDetail: ICourseModel;\r\n  setShow(): void;\r\n}\r\n\r\nconst CourseDetail: FC<ICourseDetailProps> = ({\r\n  courseDetail,\r\n  setShow,\r\n  ...props\r\n}) => {\r\n  const methodTypes = [\r\n    {\r\n      id: \"midTerm\",\r\n      name: \"مذاكرة\",\r\n    },\r\n    {\r\n      id: \"exam\",\r\n      name: \"امتحان\",\r\n    },\r\n    {\r\n      id: \"practicalExam\",\r\n      name: \"امتحان عملي\",\r\n    },\r\n  ];\r\n  const { translate } = useTranslation();\r\n  const [details, setDetails] = useState(courseDetail);\r\n  const initialValues: any = {};\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const courseSchema = yup.object({\r\n    en_name: yup\r\n      .string(translate(\"English Name\"))\r\n      .required(translate(\"Field is required\")),\r\n    ar_name: yup\r\n      .string(translate(\"Arabic Name\"))\r\n      .required(translate(\"Field is required\")),\r\n    fr_name: yup\r\n      .string(translate(\"French Name\"))\r\n      .required(translate(\"Field is required\")),\r\n    theoretical_hours: yup\r\n      .number(\"Theoretical Hours\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    practical_hours: yup\r\n      .number(\"Practical Hours\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    mixed_hours: yup\r\n      .number(\"Practical Hours\")\r\n      .min(0, translate(\"Field must be greater than 0\"))\r\n      .required(translate(\"Field is required\")),\r\n    evaluation_methods: yup\r\n      .array()\r\n      .of(\r\n        yup.object().shape({\r\n          name: yup.string().required(\"Name is required\"),\r\n          percentage: yup\r\n            .number()\r\n            .min(0, translate(\"Field must be greater than 0\"))\r\n            .max(100, translate(\"Field must be less than 100\"))\r\n            .transform((value) => (isNaN(value) ? undefined : value))\r\n            .required(\"Percentage is required\"),\r\n        })\r\n      )\r\n      .min(1, \"Need at least a evaluation method\")\r\n      .test((methods: Array<{ percentage: number }>) => {\r\n        const sum = methods.reduce((acc, curr) => acc + curr.percentage, 0);\r\n        return sum === 100;\r\n      }),\r\n  });\r\n  const submitForm = () => {};\r\n  return (\r\n    <Grid container md={12} sm={12}>\r\n      <Grid md={12} sm={12} xs={12}>\r\n        <Card style={{ padding: \"1em 4em\", margin: \"5px 0px\" }}>\r\n          <Grid container>\r\n            <GridItem item md={9} xs={12} sm={12}>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                {translate(\"Course Name\")}:{\" \"}\r\n                {details?.ar_name ?? \"التحليل الرياضي\"}\r\n              </Typography>\r\n              <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                {translate(\"Course Details\")}\r\n              </Typography>\r\n            </GridItem>\r\n            <GridItem md={3} xs={12} sm={12}>\r\n              <SuiButton onClick={setShow} color={\"warning\"}>\r\n                <ArrowBack />\r\n                {translate(\"Back To Previous Page\")}\r\n              </SuiButton>\r\n            </GridItem>\r\n          </Grid>\r\n        </Card>\r\n        <Card style={{ padding: \"3em 3em\", margin: \"5px 0px\" }}>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={courseSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              submitForm(values, setSubmitting);\r\n            }}\r\n          >\r\n            {(formik) => {\r\n              const {\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                isSubmitting,\r\n                isValid,\r\n                dirty,\r\n              } = formik;\r\n              return (\r\n                <Form>\r\n                  <Grid container md={12} xs={12} style={{ margin: \"1em 0em\" }}>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"ar_name\"\r\n                          name=\"ar_name\"\r\n                          value={values.ar_name}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.ar_name && errors.ar_name)}\r\n                          helperText={touched.ar_name && errors.ar_name}\r\n                          placeholder={translate(\"Arabic Name\")}\r\n                          label={translate(\"Arabic Name\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"en_name\"\r\n                          name=\"en_name\"\r\n                          value={values.en_name}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.en_name && errors.en_name)}\r\n                          helperText={touched.en_name && errors.en_name}\r\n                          placeholder={translate(\"English Name\")}\r\n                          label={translate(\"English Name\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          id=\"fr_name\"\r\n                          name=\"fr_name\"\r\n                          value={values.fr_name}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(touched.fr_name && errors.fr_name)}\r\n                          helperText={touched.fr_name && errors.fr_name}\r\n                          placeholder={translate(\"French Name\")}\r\n                          label={translate(\"French Name\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container md={12} xs={12}>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"theoretical_hours\"\r\n                          name=\"theoretical_hours\"\r\n                          value={values.theoretical_hours}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.theoretical_hours &&\r\n                              errors.theoretical_hours\r\n                          )}\r\n                          helperText={\r\n                            touched.theoretical_hours &&\r\n                            errors.theoretical_hours\r\n                          }\r\n                          placeholder={translate(\"Theoretical Hours\")}\r\n                          label={translate(\"Theoretical Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"practical_hours\"\r\n                          name=\"practical_hours\"\r\n                          value={values.practical_hours}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.practical_hours && errors.practical_hours\r\n                          )}\r\n                          helperText={\r\n                            touched.practical_hours && errors.practical_hours\r\n                          }\r\n                          placeholder={translate(\"Practical Hours\")}\r\n                          label={translate(\"Practical Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3}>\r\n                      <GridItem>\r\n                        <TextField\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"number\"\r\n                          id=\"mixed_hours\"\r\n                          name=\"mixed_hours\"\r\n                          value={values.mixed_hours}\r\n                          onBlur={handleBlur}\r\n                          error={Boolean(\r\n                            touched.mixed_hours && errors.mixed_hours\r\n                          )}\r\n                          helperText={touched.mixed_hours && errors.mixed_hours}\r\n                          placeholder={translate(\"Mixed Hours\")}\r\n                          label={translate(\"Mixed Hours\")}\r\n                          fullWidth\r\n                        />\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Divider style={{ margin: \"2em 0em\" }} />\r\n                  <Box mb={1} ml={0.5}>\r\n                    <Typography component=\"label\" variant=\"caption\">\r\n                      {translate(\"Evalutations Method\")}\r\n                    </Typography>\r\n                  </Box>\r\n                  <FieldArray\r\n                    name={\"evaluation_methods\"}\r\n                    render={(arrayHelpers) => (\r\n                      <div>\r\n                        {values?.evaluation_methods &&\r\n                        values?.evaluation_methods.length > 0 ? (\r\n                          values?.evaluation_methods.map((method, index) => (\r\n                            <div key={index}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={4}>\r\n                                  <TextField\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type=\"select\"\r\n                                    id={`evaluation_methods.${index}.name`}\r\n                                    name={`evaluation_methods.${index}.name`}\r\n                                    select={true}\r\n                                    value={method.name}\r\n                                    onChange={handleChange(\r\n                                      `evaluation_methods.${index}.name`\r\n                                    )}\r\n                                    onBlur={handleBlur}\r\n                                    fullWidth\r\n                                  >\r\n                                    {methodTypes?.map((type) => (\r\n                                      <MenuItem key={type.id} value={type.id}>\r\n                                        {type.name}\r\n                                      </MenuItem>\r\n                                    ))}\r\n                                  </TextField>\r\n                                </Grid>\r\n                                <Grid\r\n                                  item\r\n                                  xs={4}\r\n                                  style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                  }}\r\n                                >\r\n                                  <TextField\r\n                                    onChange={handleChange(\r\n                                      `evaluation_methods.${index}.percentage`\r\n                                    )}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type=\"number\"\r\n                                    id={`$evaluation_methods.${index}.percentage`}\r\n                                    name={`evaluation_methods.${index}.percentage`}\r\n                                    value={method.percentage}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(\r\n                                      errors &&\r\n                                        errors.evaluation_methods &&\r\n                                        errors.evaluation_methods[index] &&\r\n                                        errors.evaluation_methods[index]\r\n                                          .percentage &&\r\n                                        touched &&\r\n                                        touched.evaluation_methods &&\r\n                                        touched.evaluation_methods[index] &&\r\n                                        touched.evaluation_methods[index]\r\n                                          .percentage\r\n                                    )}\r\n                                    helperText={\r\n                                      errors &&\r\n                                      errors.evaluation_methods &&\r\n                                      errors.evaluation_methods[index] &&\r\n                                      errors.evaluation_methods[index]\r\n                                        .percentage &&\r\n                                      touched &&\r\n                                      touched.evaluation_methods &&\r\n                                      touched.evaluation_methods[index] &&\r\n                                      touched.evaluation_methods[index]\r\n                                        .percentage\r\n                                    }\r\n                                    placeholder={translate(\"Percentage\")}\r\n                                    //fullWidth\r\n                                  />\r\n                                  <ErrorMessage\r\n                                    name={`evaluation_methods.${index}.percentage`}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <SuiButton\r\n                                    style={{ margin: 5 }}\r\n                                    color=\"error\"\r\n                                    onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                  >\r\n                                    -\r\n                                  </SuiButton>\r\n                                  <SuiButton\r\n                                    style={{ margin: 5 }}\r\n                                    color=\"primary\"\r\n                                    onClick={() =>\r\n                                      arrayHelpers.push({\r\n                                        name: \"\",\r\n                                        percentage: 0,\r\n                                      })\r\n                                    } // insert an empty string at a position\r\n                                  >\r\n                                    +\r\n                                  </SuiButton>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n                          ))\r\n                        ) : (\r\n                          <React.Fragment>\r\n                            <SuiButton\r\n                              variant=\"gradient\"\r\n                              color=\"success\"\r\n                              onClick={() =>\r\n                                arrayHelpers.push({\r\n                                  name: \"\",\r\n                                  percentage: 0,\r\n                                })\r\n                              }\r\n                            >\r\n                              {/* show this when user has removed all phones from the list */}\r\n                              {translate(\"Add an evaluation method\")}\r\n                              <Add />\r\n                            </SuiButton>\r\n                          </React.Fragment>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  />\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Card>\r\n        <CardActions></CardActions>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n(CourseDetail as any).layout = Admin;\r\n(CourseDetail as any).auth = false;\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    candidate: state.baseReducer.course,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CourseDetail);\r\n"]},"metadata":{},"sourceType":"module"}