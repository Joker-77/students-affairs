{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\nimport { AddBox, FileCopy } from \"@material-ui/icons\";\nimport Admin from \"../../../../layouts/Admin\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../../components/Grid/GridItem.js\";\nimport ActionTable from \"../../../../components/MaterialTable/ActionTable\";\nimport Placeholder from \"../../../../Utility/Placeholders\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\n// import Userservice from \"../../../../Services/Userservice\";\nimport SuiButton from \"../../../../components/SuiButton\";\nimport UserService from \"../../../../Services/UserService\";\nimport UserDetails from \"./user-details\";\n\nconst UsersList = ({}) => {\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const router = useRouter();\n  const [showUserDetail, setshowUserDetail] = React.useState(false);\n  const [User, setUser] = React.useState();\n  const [searchResult, setSearchResult] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n\n  const setShow = () => {\n    setshowUserDetail(!showUserDetail);\n  };\n\n  const activateEdit = () => {\n    setIsEditable(!isEditable);\n  };\n\n  const getUser = data => {\n    setLoading(true);\n\n    let _User = Users.find((item, index) => item.id === (data === null || data === void 0 ? void 0 : data.id));\n\n    UserService.Get(data.id).then(res => {\n      let _User = res.result;\n      setUser(_User);\n      console.log(_User);\n      setIsCreate(false);\n      setIsEditable(true);\n      setshowUserDetail(true);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  };\n\n  const {\n    0: isCreate,\n    1: setIsCreate\n  } = useState(true);\n\n  const handleCreate = () => {\n    setUser(null);\n    setIsCreate(true);\n    setIsEditable(false);\n    setshowUserDetail(true);\n  };\n\n  const handleClose = () => {\n    setSearchResult(null);\n    setshowUserDetail(false);\n  };\n  /********************** Filter && Sort *********/\n\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    var _inputLabel$current;\n\n    setLabelWidth(inputLabel === null || inputLabel === void 0 ? void 0 : (_inputLabel$current = inputLabel.current) === null || _inputLabel$current === void 0 ? void 0 : _inputLabel$current.offsetWidth);\n  }, []);\n  const inputSortLabel = React.useRef(null);\n  const [sortLabelWidth, setSortLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    var _inputSortLabel$curre;\n\n    setSortLabelWidth(inputSortLabel === null || inputSortLabel === void 0 ? void 0 : (_inputSortLabel$curre = inputSortLabel.current) === null || _inputSortLabel$curre === void 0 ? void 0 : _inputSortLabel$curre.offsetWidth);\n  }, []);\n  const [Users, setUsers] = React.useState(null);\n  const [filteredUsers, setFilteredUsers] = React.useState(null);\n  const [filter, setFilter] = React.useState(0);\n  const [search, setSearch] = React.useState(\"\");\n  const [sortBy, setSortBy] = React.useState(0);\n\n  const handleSortBy = _value => {\n    setSortBy(_value);\n  };\n  /************************** Data ****************************/\n\n\n  const getUsers = () => {\n    UserService.GetAll().then(res => {\n      let Users = res.result.sort((a, b) => b.id - a.id);\n      setFilteredUsers(Users);\n      setUsers(Users);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"error\", error);\n    });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  /************************** Finish Data ****************************/\n\n  /************************** Handle edit data ****************************/\n\n  const [isEditable, setIsEditable] = React.useState(false);\n  /************************** Finish Handle edit data ****************************/\n\n  /**************************  Handle Export data ****************************/\n\n  const [showExportColumns, setShowExportColumns] = React.useState(false);\n  let columns = [{\n    title: translate(\"Id\"),\n    field: \"id\",\n    hidden: true\n  }, {\n    title: translate(\"الايميل\"),\n    field: \"email\"\n  }, {\n    title: translate(\"الأدوار\"),\n    field: \"roles\"\n  }];\n  /************************** Finish Handle Export Data ****************************/\n\n  const [confirm, setConfirm] = React.useState(false);\n  const [deleteUser, setDeleteUser] = React.useState(false);\n\n  const handleConfirmOpen = data => {\n    setDeleteUser(data.id);\n    setConfirm(true);\n  };\n\n  const handleConfirmClose = () => {\n    setConfirm(false);\n  };\n\n  const handleDeleteUser = () => {};\n\n  const ConfirmDialog = () => /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(Dialog, {\n      open: confirm,\n      onClose: handleConfirmClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsx(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: translate(\"Delete a User\")\n      }), /*#__PURE__*/_jsx(DialogContent, {\n        children: /*#__PURE__*/_jsx(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: translate(\"Are you sure you want to delete this User\")\n        })\n      }), /*#__PURE__*/_jsxs(DialogActions, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: handleDeleteUser,\n          children: translate(\"Yes\")\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: handleConfirmClose,\n          autoFocus: true,\n          children: translate(\"No\")\n        })]\n      })]\n    })\n  });\n  /************************** Handle Delete User ****************************/\n\n\n  const tableRef = useRef();\n\n  const renderUsers = () => {\n    if (filteredUsers != null && filteredUsers.length > 0) {\n      let data = filteredUsers;\n      let options = {\n        // exportAllData: true,\n        // exportButton: true,\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n          fontWeight: \"bold\"\n        },\n        filtering: false,\n        paging: true,\n        pageSize: 10,\n        maxBodyHeight: \"500px\",\n        search: false,\n        tableLayout: \"auto\"\n      };\n      let actions = [// {\n      //     icon: () => (\n      //         <SuiButton\n      //             style={{\n      //                 minWidth: 80,\n      //                 color: \"#dc3545\",\n      //                 backgroundColor: \"transparent\",\n      //                 border: \"1px solid #dc3545\",\n      //             }}\n      //             color={\"danger\"}\n      //         >\n      //             {translate(\"Delete\")}\n      //         </SuiButton>\n      //     ),\n      //     onClick: (evt, data) => handleConfirmOpen(data),\n      // },\n      {\n        icon: () => /*#__PURE__*/_jsxs(SuiButton, {\n          style: {\n            minWidth: 140,\n            width: 140\n          },\n          color: \"primary\",\n          children: [translate(\"تفاصيل\"), /*#__PURE__*/_jsx(FileCopy, {})]\n        }),\n        onClick: (evt, data) => getUser(data)\n      }];\n      if (!loading) return /*#__PURE__*/_jsx(\"div\", {\n        ref: tableRef,\n        children: /*#__PURE__*/_jsx(ActionTable, {\n          Title: translate(\"جدول المستخدمين\"),\n          Columns: columns,\n          Data: data.map(item => {\n            return _objectSpread(_objectSpread({}, item), {}, {\n              roles: item.roles.map(e => e.name).join(\" , \")\n            });\n          }),\n          Options: options,\n          Actions: actions\n        })\n      });else return /*#__PURE__*/_jsx(Placeholder, {\n        loading: loading\n      });\n    } else return /*#__PURE__*/_jsx(Placeholder, {\n      loading: false\n    });\n  };\n\n  const handleBack = () => {\n    getUsers();\n    setshowUserDetail(false);\n  };\n\n  return /*#__PURE__*/_jsxs(GridContainer, {\n    children: [!showUserDetail && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(GridItem, {\n        md: 12,\n        children: /*#__PURE__*/_jsx(GridItem, {\n          container: true,\n          md: 12,\n          style: {\n            margin: \"0px 0px 10px 0\"\n          },\n          children: /*#__PURE__*/_jsx(GridItem, {\n            children: /*#__PURE__*/_jsxs(Button, {\n              style: {\n                margin: \"0px 5px\"\n              },\n              disabled: false,\n              variant: \"contained\",\n              className: classes.submitBtn,\n              onClick: handleCreate,\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  padding: \"0px 0px 0px 10px\"\n                },\n                children: translate(\"إضافة مستخدم\")\n              }), /*#__PURE__*/_jsx(AddBox, {})]\n            })\n          })\n        })\n      }), /*#__PURE__*/_jsx(GridItem, {\n        md: 12,\n        children: renderUsers()\n      })]\n    }), showUserDetail && /*#__PURE__*/_jsx(UserDetails, {\n      isEditable: isEditable,\n      isCreate: isCreate,\n      details: User,\n      activateEdit: activateEdit,\n      handleBack: handleBack,\n      show: showUserDetail\n    }), /*#__PURE__*/_jsx(ConfirmDialog, {})]\n  });\n};\n\nUsersList.auth = true;\nUsersList.layout = Admin;\nexport default UsersList;","map":null,"metadata":{},"sourceType":"module"}