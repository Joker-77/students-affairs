{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\StudentAffairs\\\\students\\\\students\\\\pages\\\\students_affairs\\\\affairs_officer\\\\initialize-year\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Admin from \"../../../../layouts/Admin\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\nimport { Button, Typography, makeStyles } from \"@material-ui/core\";\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\nimport { Add } from \"@material-ui/icons\";\nimport Properties from \"./peroperties\";\nimport ConfirmProperties from \"./confirmProperties\";\nimport InitPlanTabs from \"./tabbedView\";\nimport SpecialityService from \"../../../../Services/SpecialityService\";\nimport YearsService from \"../../../../Services/SpecYearsService\";\nimport EduYearService from \"../../../../Services/EduYearService\";\n\nconst InitializeYear = () => {\n  _s();\n\n  const {\n    translate\n  } = useTranslation();\n  const useStyles = makeStyles(styles);\n  const classes = useStyles(); // --------------- Show Modal --------------------\n\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: showConfirm,\n    1: setShowConfirm\n  } = useState(false); // --------------- Data --------------------------\n\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const {\n    0: alertMsg,\n    1: setAlertMessage\n  } = useState(\"\");\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: success,\n    1: SetSuccess\n  } = useState(false);\n  const {\n    0: specialities,\n    1: SetSpecialities\n  } = useState([]);\n  const {\n    0: initYears,\n    1: setInitYears\n  } = useState([]);\n  const {\n    0: latestYear,\n    1: setLatestYear\n  } = useState(\"\");\n  useEffect(() => {\n    EduYearService.GetYears(`${new Date().getFullYear()}`).then(resp => {\n      let result = resp.result;\n      console.clear();\n      console.log(result);\n      if (result.length > 0) setLatestYear(result[0]);\n    }).catch(error => {});\n    SpecialityService.GetAll().then(response => {\n      if (response.result.length > 0) {\n        console.log(response.result);\n        YearsService.GetWhereSpeciality(response.result[0].id).then(res => {\n          console.log(res.result);\n\n          if (res.result.length > 0) {\n            let specs = response.result.map(data => {\n              return {\n                id: data.id,\n                en_name: data.en_name,\n                ar_name: data.ar_name,\n                code: data.code\n              };\n            });\n            let initYears = res.result.map(data => {\n              return {\n                id: data.id,\n                en_name: data.en_name,\n                ar_name: data.ar_name,\n                code: data.code\n              };\n            });\n            SetSpecialities(specs);\n            setInitYears(initYears);\n          }\n        }).catch(error => {});\n      }\n    }).catch(error => {});\n  }, []);\n\n  const closeProperties = () => {\n    setShow(false);\n  };\n\n  const handleInit = () => {\n    setShow(true);\n  };\n\n  const confirmOpenYear = (value, message) => {\n    let alertMessage = (message === null || message === void 0 ? void 0 : message.split(\"%\")[0]) + \" 2022-2023\";\n    let confirmMessage = message === null || message === void 0 ? void 0 : message.split(\"%\")[1];\n    setValue(value);\n    setAlertMessage(alertMessage);\n    setMessage(confirmMessage);\n    setShowConfirm(true);\n  };\n\n  const handleSubmitConfirm = () => {\n    console.log(value);\n\n    if (!!value) {\n      EduYearService.checkYear({\n        year: latestYear.year,\n        type: value\n      }).then(resp => {\n        var _resp$result;\n\n        console.clear();\n        console.log(resp);\n\n        if ((_resp$result = resp.result) !== null && _resp$result !== void 0 && _resp$result.success) {\n          EduYearService.InitYears({\n            year: latestYear.year,\n            type: value\n          }).then(response => {\n            let result = response === null || response === void 0 ? void 0 : response.result;\n\n            if (result && result.success) {\n              setShowConfirm(false);\n              setShow(false);\n              SetSuccess(true);\n            }\n\n            setShowConfirm(false);\n            setShow(false);\n            SetSuccess(true);\n          }).catch(error => {\n            setShowConfirm(false);\n            setShow(false);\n            SetSuccess(true);\n          });\n        } else {\n          alert('else');\n          setShowConfirm(false);\n          setShow(false);\n          SetSuccess(true);\n        }\n      }).catch(error => {});\n    }\n  };\n\n  const closeConfirmProperties = () => {\n    setShowConfirm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      style: {\n        margin: \"0 0 1em 0\"\n      },\n      md: 12,\n      className: classes.typography,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: translate(`You're in the year`) + ` ${latestYear.year}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 7,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"0px 5px\"\n          },\n          disabled: success,\n          variant: \"contained\",\n          className: classes.submitBtn,\n          onClick: handleInit,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"0px 0px 0px 10px\"\n            },\n            children: translate(\"Open new educational year\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(GridItem, {\n      style: {\n        marginTop: \"2em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(InitPlanTabs, {\n          latestYear: latestYear,\n          message: message,\n          specialties: specialities,\n          initYears: initYears\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Properties, {\n      open: show,\n      title: \"\\u0641\\u062A\\u062D \\u0639\\u0627\\u0645 \\u062F\\u0631\\u0627\\u0633\\u064A \\u062C\\u062F\\u064A\\u062F\",\n      handleClose: closeProperties,\n      handleConfirm: confirmOpenYear\n    }, \"properties\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmProperties, {\n      open: showConfirm,\n      alert: alertMsg,\n      message: message,\n      handleClose: closeConfirmProperties,\n      handleConfirm: handleSubmitConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InitializeYear, \"EvAnD4cKLtBToacSI7krbd/nSjY=\", true, function () {\n  return [useTranslation];\n});\n\n_c = InitializeYear;\nInitializeYear.layout = Admin;\nInitializeYear.auth = false;\nexport default InitializeYear;\n\nvar _c;\n\n$RefreshReg$(_c, \"InitializeYear\");","map":{"version":3,"sources":["F:/StudentAffairs/students/students/pages/students_affairs/affairs_officer/initialize-year/index.tsx"],"names":["React","useEffect","useState","Admin","GridContainer","GridItem","useTranslation","Button","Typography","makeStyles","styles","Add","Properties","ConfirmProperties","InitPlanTabs","SpecialityService","YearsService","EduYearService","InitializeYear","translate","useStyles","classes","show","setShow","showConfirm","setShowConfirm","message","setMessage","alertMsg","setAlertMessage","value","setValue","success","SetSuccess","specialities","SetSpecialities","initYears","setInitYears","latestYear","setLatestYear","GetYears","Date","getFullYear","then","resp","result","console","clear","log","length","catch","error","GetAll","response","GetWhereSpeciality","id","res","specs","map","data","en_name","ar_name","code","closeProperties","handleInit","confirmOpenYear","alertMessage","split","confirmMessage","handleSubmitConfirm","checkYear","year","type","InitYears","alert","closeConfirmProperties","margin","typography","submitBtn","padding","marginTop","layout","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Admin from \"../../../../layouts/Admin\";\r\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\r\nimport GridItem from \"../../../../components/Grid/GridItem\";\r\nimport { useTranslation } from \"../../../../Utility/Translations/useTranslation\";\r\nimport { Button, Grid, Typography, makeStyles } from \"@material-ui/core\";\r\nimport styles from \"../../../../assets/jss/nextjs-material-dashboard/views/rtlStyle.js\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Properties from \"./peroperties\";\r\nimport ConfirmProperties from \"./confirmProperties\";\r\nimport InitPlanTabs from \"./tabbedView\";\r\nimport SpecialityService from \"../../../../Services/SpecialityService\";\r\nimport { ISpecialityModel } from \"../../../../Models/ApiResponse/SpecialityModel\";\r\nimport { IStudentYear } from \"../../../../Models/StudentsYear/IStudentYear\";\r\nimport YearsService from \"../../../../Services/SpecYearsService\";\r\nimport { error } from \"console\";\r\nimport EduYearService from \"../../../../Services/EduYearService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst InitializeYear: React.FC = () => {\r\n  const { translate } = useTranslation();\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n\r\n  // --------------- Show Modal --------------------\r\n  const [show, setShow] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n  // --------------- Data --------------------------\r\n  const [message, setMessage] = useState(\"\");\r\n  const [alertMsg, setAlertMessage] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [success, SetSuccess] = useState(false);\r\n  const [specialities, SetSpecialities] = useState<ISpecialityModel[]>([]);\r\n  const [initYears, setInitYears] = useState<IStudentYear[]>([]);\r\n  const [latestYear, setLatestYear] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    EduYearService.GetYears(`${new Date().getFullYear()}`)\r\n      .then((resp) => {\r\n        let result = resp.result;\r\n        console.clear();\r\n        console.log(result);\r\n        if (result.length > 0) setLatestYear(result[0]);\r\n      })\r\n      .catch((error) => { });\r\n    SpecialityService.GetAll()\r\n      .then((response) => {\r\n        if (response.result.length > 0) {\r\n          console.log(response.result);\r\n          YearsService.GetWhereSpeciality(response.result[0].id)\r\n            .then((res) => {\r\n              console.log(res.result);\r\n              if (res.result.length > 0) {\r\n                let specs = response.result.map((data) => {\r\n                  return {\r\n                    id: data.id,\r\n                    en_name: data.en_name,\r\n                    ar_name: data.ar_name,\r\n                    code: data.code,\r\n                  };\r\n                });\r\n                let initYears = res.result.map((data) => {\r\n                  return {\r\n                    id: data.id,\r\n                    en_name: data.en_name,\r\n                    ar_name: data.ar_name,\r\n                    code: data.code,\r\n                  };\r\n                });\r\n                SetSpecialities(specs);\r\n                setInitYears(initYears);\r\n              }\r\n            })\r\n            .catch((error) => { });\r\n        }\r\n      })\r\n      .catch((error) => { });\r\n  }, []);\r\n\r\n  const closeProperties = () => {\r\n    setShow(false);\r\n  };\r\n  const handleInit = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const confirmOpenYear = (value, message) => {\r\n    let alertMessage = message ?.split(\"%\")[0] + \" 2022-2023\";\r\n    let confirmMessage = message ?.split(\"%\")[1];\r\n    setValue(value);\r\n    setAlertMessage(alertMessage);\r\n    setMessage(confirmMessage);\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  const handleSubmitConfirm = () => {\r\n    console.log(value);\r\n    if (!!value) {\r\n      EduYearService.checkYear({\r\n        year: latestYear.year,\r\n        type: value,\r\n      }).then((resp) => {\r\n        console.clear();\r\n        console.log(resp)\r\n        if (resp.result ?.success) {\r\n          EduYearService.InitYears({\r\n            year: latestYear.year,\r\n            type: value,\r\n          })\r\n            .then((response) => {\r\n              let result = response ?.result;\r\n              if (result && result.success) {\r\n                setShowConfirm(false);\r\n                setShow(false);\r\n                SetSuccess(true);\r\n              }\r\n              setShowConfirm(false);\r\n              setShow(false);\r\n              SetSuccess(true);\r\n            })\r\n            .catch((error) => {\r\n              setShowConfirm(false);\r\n              setShow(false);\r\n              SetSuccess(true);\r\n            });\r\n        }\r\n        else {\r\n          alert('else');\r\n          setShowConfirm(false);\r\n          setShow(false);\r\n          SetSuccess(true);\r\n        }\r\n      })\r\n        .catch((error) => { })\r\n    }\r\n  };\r\n\r\n  const closeConfirmProperties = () => {\r\n    setShowConfirm(false);\r\n  };\r\n\r\n  return (\r\n    <GridContainer>\r\n      <GridItem\r\n        style={{ margin: \"0 0 1em 0\" }}\r\n        md={12}\r\n        className={classes.typography}\r\n      >\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          {translate(`You're in the year`) + ` ${latestYear.year}`}\r\n        </Typography>\r\n      </GridItem>\r\n      <GridItem md={12}>\r\n        <GridItem md={7}>\r\n          <Button\r\n            style={{ margin: \"0px 5px\" }}\r\n            disabled={success}\r\n            variant=\"contained\"\r\n            className={classes.submitBtn}\r\n            onClick={handleInit}\r\n          >\r\n            <span style={{ padding: \"0px 0px 0px 10px\" }}>\r\n              {translate(\"Open new educational year\")}\r\n            </span>\r\n            <Add />\r\n          </Button>\r\n        </GridItem>\r\n      </GridItem>\r\n      {success && (\r\n        <GridItem style={{ marginTop: \"2em\" }}>\r\n          <GridItem md={12}>\r\n            <InitPlanTabs\r\n              latestYear={latestYear}\r\n              message={message}\r\n              specialties={specialities}\r\n              initYears={initYears}\r\n            />\r\n          </GridItem>\r\n        </GridItem>\r\n      )}\r\n      <Properties\r\n        open={show}\r\n        key={\"properties\"}\r\n        title=\"فتح عام دراسي جديد\"\r\n        handleClose={closeProperties}\r\n        handleConfirm={confirmOpenYear}\r\n      />\r\n      <ConfirmProperties\r\n        open={showConfirm}\r\n        alert={alertMsg}\r\n        message={message}\r\n        handleClose={closeConfirmProperties}\r\n        handleConfirm={handleSubmitConfirm}\r\n      />\r\n    </GridContainer>\r\n  );\r\n};\r\n\r\n(InitializeYear as any).layout = Admin;\r\n(InitializeYear as any).auth = false;\r\nexport default InitializeYear;\r\n"]},"metadata":{},"sourceType":"module"}